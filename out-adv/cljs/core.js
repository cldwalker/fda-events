// Compiled by ClojureScript 0.0-3149 {:optimize-constants true, :static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3149";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * Var bound to the name value of the compiler build :target option.
 * For example, if the compiler build :target is :nodejs, *target* will be bound
 * to "nodejs". *target* is a Google Closure define and can be set by compiler
 * :closure-defines option.
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function cljs$core$_STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function cljs$core$set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
/**
 * When set to true, output will be flushed whenever a newline is printed.
 * 
 * Defaults to true.
 */
cljs.core._STAR_flush_on_newline_STAR_ = true;
/**
 * When set to logical false will drop newlines from printing calls.
 * This is to work around the implicit newlines emitted by standard JavaScript
 * console objects.
 */
cljs.core._STAR_print_newline_STAR_ = true;
/**
 * When set to logical false, strings and characters will be printed with
 * non-alphanumeric characters converted to the appropriate escape sequences.
 * 
 * Defaults to true
 */
cljs.core._STAR_print_readably_STAR_ = true;
/**
 * If set to logical true, when printing an object, its metadata will also
 * be printed in a form that can be read back by the reader.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_meta_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_dup_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_length_STAR_ = null;
/**
 * *print-level* controls how many levels deep the printer will
 * print nested objects. If it is bound to logical false, there is no
 * limit. Otherwise, it must be bound to an integer indicating the maximum
 * level to print. Each argument to print is at level 0; if an argument is a
 * collection, its items are at level 1; and so on. If an object is a
 * collection and is at a level greater than or equal to the value bound to
 * *print-level*, the printer prints '#' to represent it. The root binding
 * is nil indicating no limit.
 */
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function cljs$core$pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$flush_DASH_on_DASH_newline,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$readably,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$meta,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$dup,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$print_DASH_length,cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function cljs$core$enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__7030__delegate = function (args){
return console.log.apply(console,(function (){var G__7029 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__7029) : cljs.core.into_array.call(null,G__7029));
})());
};
var G__7030 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7031__i = 0, G__7031__a = new Array(arguments.length -  0);
while (G__7031__i < G__7031__a.length) {G__7031__a[G__7031__i] = arguments[G__7031__i + 0]; ++G__7031__i;}
  args = new cljs.core.IndexedSeq(G__7031__a,0);
} 
return G__7030__delegate.call(this,args);};
G__7030.cljs$lang$maxFixedArity = 0;
G__7030.cljs$lang$applyTo = (function (arglist__7032){
var args = cljs.core.seq(arglist__7032);
return G__7030__delegate(args);
});
G__7030.cljs$core$IFn$_invoke$arity$variadic = G__7030__delegate;
return G__7030;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function cljs$core$truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function cljs$core$identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function cljs$core$nil_QMARK_(x){
return (x == null);
});
/**
 * Returns true if x is a JavaScript array.
 */
cljs.core.array_QMARK_ = (function cljs$core$array_QMARK_(x){
if((cljs.core._STAR_target_STAR_ === "nodejs")){
return Array.isArray(x);
} else {
return (x instanceof Array);
}
});
/**
 * Returns true if x is a JavaScript number.
 */
cljs.core.number_QMARK_ = (function cljs$core$number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function cljs$core$not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function cljs$core$some_QMARK_(x){
return !((x == null));
});
/**
 * Returns true if x's constructor is Object
 */
cljs.core.object_QMARK_ = (function cljs$core$object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
/**
 * Returns true if x is a JavaScript string.
 */
cljs.core.string_QMARK_ = (function cljs$core$string_QMARK_(x){
var G__7034 = x;
return goog.isString(G__7034);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function cljs$core$native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__7036 = x__$1;
return goog.typeOf(G__7036);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function cljs$core$is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
/**
 * Return x's constructor.
 */
cljs.core.type = (function cljs$core$type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function cljs$core$missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3927__auto__ = ty;
if(cljs.core.truth_(and__3927__auto__)){
return ty.cljs$lang$type;
} else {
return and__3927__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__7038 = obj;
return goog.typeOf(G__7038);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function cljs$core$type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function cljs$core$load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.nodeGlobalRequire(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__7040 = Symbol;
return goog.typeOf(G__7040);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
/**
 * Construct a JavaScript array of specified size. Accepts ignored type
 * argument for compatibility with Clojure.
 */
cljs.core.make_array = (function() {
var cljs$core$make_array = null;
var cljs$core$make_array__1 = (function (size){
return (new Array(size));
});
var cljs$core$make_array__2 = (function (type,size){
return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
});
cljs$core$make_array = function(type,size){
switch(arguments.length){
case 1:
return cljs$core$make_array__1.call(this,type);
case 2:
return cljs$core$make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
return cljs$core$make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function cljs$core$aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4356__auto___7042 = len;
var i_7043 = (0);
while(true){
if((i_7043 < n__4356__auto___7042)){
(new_arr[i_7043] = (arr[i_7043]));

var G__7044 = (i_7043 + (1));
i_7043 = G__7044;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function cljs$core$array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__7045 = (i + (1));
i = G__7045;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var cljs$core$aget = null;
var cljs$core$aget__2 = (function (array,i){
return (array[i]);
});
var cljs$core$aget__3 = (function() { 
var G__7054__delegate = function (array,i,idxs){
var G__7051 = cljs$core$aget;
var G__7052 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__7053 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__7051,G__7052,G__7053) : cljs.core.apply.call(null,G__7051,G__7052,G__7053));
};
var G__7054 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__7055__i = 0, G__7055__a = new Array(arguments.length -  2);
while (G__7055__i < G__7055__a.length) {G__7055__a[G__7055__i] = arguments[G__7055__i + 2]; ++G__7055__i;}
  idxs = new cljs.core.IndexedSeq(G__7055__a,0);
} 
return G__7054__delegate.call(this,array,i,idxs);};
G__7054.cljs$lang$maxFixedArity = 2;
G__7054.cljs$lang$applyTo = (function (arglist__7056){
var array = cljs.core.first(arglist__7056);
arglist__7056 = cljs.core.next(arglist__7056);
var i = cljs.core.first(arglist__7056);
var idxs = cljs.core.rest(arglist__7056);
return G__7054__delegate(array,i,idxs);
});
G__7054.cljs$core$IFn$_invoke$arity$variadic = G__7054__delegate;
return G__7054;
})()
;
cljs$core$aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return cljs$core$aget__2.call(this,array,i);
default:
var G__7057 = null;
if (arguments.length > 2) {
var G__7058__i = 0, G__7058__a = new Array(arguments.length -  2);
while (G__7058__i < G__7058__a.length) {G__7058__a[G__7058__i] = arguments[G__7058__i + 2]; ++G__7058__i;}
G__7057 = new cljs.core.IndexedSeq(G__7058__a,0);
}
return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__7057);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aget.cljs$lang$maxFixedArity = 2;
cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var cljs$core$aset = null;
var cljs$core$aset__3 = (function (array,i,val){
return (array[i] = val);
});
var cljs$core$aset__4 = (function() { 
var G__7067__delegate = function (array,idx,idx2,idxv){
var G__7063 = cljs$core$aset;
var G__7064 = (array[idx]);
var G__7065 = idx2;
var G__7066 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__7063,G__7064,G__7065,G__7066) : cljs.core.apply.call(null,G__7063,G__7064,G__7065,G__7066));
};
var G__7067 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__7068__i = 0, G__7068__a = new Array(arguments.length -  3);
while (G__7068__i < G__7068__a.length) {G__7068__a[G__7068__i] = arguments[G__7068__i + 3]; ++G__7068__i;}
  idxv = new cljs.core.IndexedSeq(G__7068__a,0);
} 
return G__7067__delegate.call(this,array,idx,idx2,idxv);};
G__7067.cljs$lang$maxFixedArity = 3;
G__7067.cljs$lang$applyTo = (function (arglist__7069){
var array = cljs.core.first(arglist__7069);
arglist__7069 = cljs.core.next(arglist__7069);
var idx = cljs.core.first(arglist__7069);
arglist__7069 = cljs.core.next(arglist__7069);
var idx2 = cljs.core.first(arglist__7069);
var idxv = cljs.core.rest(arglist__7069);
return G__7067__delegate(array,idx,idx2,idxv);
});
G__7067.cljs$core$IFn$_invoke$arity$variadic = G__7067__delegate;
return G__7067;
})()
;
cljs$core$aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return cljs$core$aset__3.call(this,array,idx,idx2);
default:
var G__7070 = null;
if (arguments.length > 3) {
var G__7071__i = 0, G__7071__a = new Array(arguments.length -  3);
while (G__7071__i < G__7071__a.length) {G__7071__a[G__7071__i] = arguments[G__7071__i + 3]; ++G__7071__i;}
G__7070 = new cljs.core.IndexedSeq(G__7071__a,0);
}
return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__7070);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aset.cljs$lang$maxFixedArity = 3;
cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function cljs$core$alength(array){
return array.length;
});
/**
 * Returns an array with components set to the values in aseq. Optional type
 * argument accepted for compatibility with Clojure.
 */
cljs.core.into_array = (function() {
var cljs$core$into_array = null;
var cljs$core$into_array__1 = (function (aseq){
return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var cljs$core$into_array__2 = (function (type,aseq){
var G__7077 = (function (a,x){
a.push(x);

return a;
});
var G__7078 = [];
var G__7079 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7077,G__7078,G__7079) : cljs.core.reduce.call(null,G__7077,G__7078,G__7079));
});
cljs$core$into_array = function(type,aseq){
switch(arguments.length){
case 1:
return cljs$core$into_array__1.call(this,type);
case 2:
return cljs$core$into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
return cljs$core$into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var cljs$core$js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var cljs$core$js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__7080__i = 0, G__7080__a = new Array(arguments.length -  2);
while (G__7080__i < G__7080__a.length) {G__7080__a[G__7080__i] = arguments[G__7080__i + 2]; ++G__7080__i;}
  args = new cljs.core.IndexedSeq(G__7080__a,0);
} 
return cljs$core$js_invoke__delegate.call(this,obj,s,args);};
cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
cljs$core$js_invoke.cljs$lang$applyTo = (function (arglist__7081){
var obj = cljs.core.first(arglist__7081);
arglist__7081 = cljs.core.next(arglist__7081);
var s = cljs.core.first(arglist__7081);
var args = cljs.core.rest(arglist__7081);
return cljs$core$js_invoke__delegate(obj,s,args);
});
cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
return cljs$core$js_invoke;
})()
;

/**
 * Marker protocol
 */
cljs.core.Fn = (function (){var obj7083 = {};
return obj7083;
})();


/**
 * Protocol for adding the ability to invoke an object as a function.
 * For example, a vector can also be used to look up a value:
 * ([1 2 3 4] 1) => 2
 */
cljs.core.IFn = (function (){var obj7085 = {};
return obj7085;
})();

cljs.core._invoke = (function() {
var cljs$core$_invoke = null;
var cljs$core$_invoke__1 = (function (this$){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7131 = x__4199__auto__;
return goog.typeOf(G__7131);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var cljs$core$_invoke__2 = (function (this$,a){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7133 = x__4199__auto__;
return goog.typeOf(G__7133);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var cljs$core$_invoke__3 = (function (this$,a,b){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7135 = x__4199__auto__;
return goog.typeOf(G__7135);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var cljs$core$_invoke__4 = (function (this$,a,b,c){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7137 = x__4199__auto__;
return goog.typeOf(G__7137);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var cljs$core$_invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7139 = x__4199__auto__;
return goog.typeOf(G__7139);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var cljs$core$_invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7141 = x__4199__auto__;
return goog.typeOf(G__7141);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var cljs$core$_invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7143 = x__4199__auto__;
return goog.typeOf(G__7143);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var cljs$core$_invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7145 = x__4199__auto__;
return goog.typeOf(G__7145);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var cljs$core$_invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7147 = x__4199__auto__;
return goog.typeOf(G__7147);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var cljs$core$_invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7149 = x__4199__auto__;
return goog.typeOf(G__7149);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var cljs$core$_invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7151 = x__4199__auto__;
return goog.typeOf(G__7151);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var cljs$core$_invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7153 = x__4199__auto__;
return goog.typeOf(G__7153);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var cljs$core$_invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7155 = x__4199__auto__;
return goog.typeOf(G__7155);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var cljs$core$_invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7157 = x__4199__auto__;
return goog.typeOf(G__7157);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var cljs$core$_invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7159 = x__4199__auto__;
return goog.typeOf(G__7159);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var cljs$core$_invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7161 = x__4199__auto__;
return goog.typeOf(G__7161);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var cljs$core$_invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7163 = x__4199__auto__;
return goog.typeOf(G__7163);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var cljs$core$_invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7165 = x__4199__auto__;
return goog.typeOf(G__7165);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var cljs$core$_invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7167 = x__4199__auto__;
return goog.typeOf(G__7167);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var cljs$core$_invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7169 = x__4199__auto__;
return goog.typeOf(G__7169);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var cljs$core$_invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7171 = x__4199__auto__;
return goog.typeOf(G__7171);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var cljs$core$_invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._invoke[(function (){var G__7173 = x__4199__auto__;
return goog.typeOf(G__7173);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._invoke["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
cljs$core$_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return cljs$core$_invoke__1.call(this,this$);
case 2:
return cljs$core$_invoke__2.call(this,this$,a);
case 3:
return cljs$core$_invoke__3.call(this,this$,a,b);
case 4:
return cljs$core$_invoke__4.call(this,this$,a,b,c);
case 5:
return cljs$core$_invoke__5.call(this,this$,a,b,c,d);
case 6:
return cljs$core$_invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return cljs$core$_invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return cljs$core$_invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return cljs$core$_invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return cljs$core$_invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return cljs$core$_invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return cljs$core$_invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return cljs$core$_invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return cljs$core$_invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return cljs$core$_invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return cljs$core$_invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return cljs$core$_invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return cljs$core$_invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return cljs$core$_invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return cljs$core$_invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return cljs$core$_invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return cljs$core$_invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
return cljs$core$_invoke;
})()
;


/**
 * Protocol for cloning a value.
 */
cljs.core.ICloneable = (function (){var obj7175 = {};
return obj7175;
})();

/**
 * Creates a clone of value.
 */
cljs.core._clone = (function cljs$core$_clone(value){
if((function (){var and__3927__auto__ = value;
if(and__3927__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3927__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4199__auto__ = (((value == null))?null:value);
return (function (){var or__3935__auto__ = (cljs.core._clone[(function (){var G__7179 = x__4199__auto__;
return goog.typeOf(G__7179);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._clone["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


/**
 * Protocol for adding the ability to count a collection in constant time.
 */
cljs.core.ICounted = (function (){var obj7181 = {};
return obj7181;
})();

/**
 * Calculates the count of coll in constant time. Used by cljs.core/count.
 */
cljs.core._count = (function cljs$core$_count(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._count[(function (){var G__7185 = x__4199__auto__;
return goog.typeOf(G__7185);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._count["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for creating an empty collection.
 */
cljs.core.IEmptyableCollection = (function (){var obj7187 = {};
return obj7187;
})();

/**
 * Returns an empty collection of the same category as coll. Used
 * by cljs.core/count.
 */
cljs.core._empty = (function cljs$core$_empty(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._empty[(function (){var G__7191 = x__4199__auto__;
return goog.typeOf(G__7191);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._empty["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding to a collection.
 */
cljs.core.ICollection = (function (){var obj7193 = {};
return obj7193;
})();

/**
 * Returns a new collection of coll with o added to it. The new item
 * should be added to the most efficient place, e.g.
 * (conj [1 2 3 4] 5) => [1 2 3 4 5]
 * (conj '(2 3 4 5) 1) => '(1 2 3 4 5)
 */
cljs.core._conj = (function cljs$core$_conj(coll,o){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._conj[(function (){var G__7197 = x__4199__auto__;
return goog.typeOf(G__7197);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._conj["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


/**
 * Protocol for collections to provide idexed-based access to their items.
 */
cljs.core.IIndexed = (function (){var obj7199 = {};
return obj7199;
})();

/**
 * Returns the value at the index n in the collection coll.
 * Returns not-found if index n is out of bounds and not-found is supplied.
 */
cljs.core._nth = (function() {
var cljs$core$_nth = null;
var cljs$core$_nth__2 = (function (coll,n){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._nth[(function (){var G__7205 = x__4199__auto__;
return goog.typeOf(G__7205);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._nth["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var cljs$core$_nth__3 = (function (coll,n,not_found){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._nth[(function (){var G__7207 = x__4199__auto__;
return goog.typeOf(G__7207);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._nth["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
cljs$core$_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$_nth__2.call(this,coll,n);
case 3:
return cljs$core$_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
return cljs$core$_nth;
})()
;


/**
 * Marker protocol indicating an array sequence.
 */
cljs.core.ASeq = (function (){var obj7209 = {};
return obj7209;
})();


/**
 * Protocol for collections to provide access to their items as sequences.
 */
cljs.core.ISeq = (function (){var obj7211 = {};
return obj7211;
})();

/**
 * Returns the first item in the collection coll. Used by cljs.core/first.
 */
cljs.core._first = (function cljs$core$_first(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._first[(function (){var G__7215 = x__4199__auto__;
return goog.typeOf(G__7215);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._first["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new collection of coll without the first item. It should
 * always return a seq, e.g.
 * (rest []) => ()
 * (rest nil) => ()
 */
cljs.core._rest = (function cljs$core$_rest(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._rest[(function (){var G__7219 = x__4199__auto__;
return goog.typeOf(G__7219);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._rest["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the next items of a collection.
 */
cljs.core.INext = (function (){var obj7221 = {};
return obj7221;
})();

/**
 * Returns a new collection of coll without the first item. In contrast to
 * rest, it should return nil if there are no more items, e.g.
 * (next []) => nil
 * (next nil) => nil
 */
cljs.core._next = (function cljs$core$_next(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._next[(function (){var G__7225 = x__4199__auto__;
return goog.typeOf(G__7225);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._next["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for looking up a value in a data structure.
 */
cljs.core.ILookup = (function (){var obj7227 = {};
return obj7227;
})();

/**
 * Use k to look up a value in o. If not-found is supplied and k is not
 * a valid value that can be used for look up, not-found is returned.
 */
cljs.core._lookup = (function() {
var cljs$core$_lookup = null;
var cljs$core$_lookup__2 = (function (o,k){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._lookup[(function (){var G__7233 = x__4199__auto__;
return goog.typeOf(G__7233);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._lookup["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var cljs$core$_lookup__3 = (function (o,k,not_found){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._lookup[(function (){var G__7235 = x__4199__auto__;
return goog.typeOf(G__7235);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._lookup["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
cljs$core$_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$_lookup__2.call(this,o,k);
case 3:
return cljs$core$_lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
return cljs$core$_lookup;
})()
;


/**
 * Protocol for adding associativity to collections.
 */
cljs.core.IAssociative = (function (){var obj7237 = {};
return obj7237;
})();

/**
 * Returns true if k is a key in coll.
 */
cljs.core._contains_key_QMARK_ = (function cljs$core$_contains_key_QMARK_(coll,k){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__7241 = x__4199__auto__;
return goog.typeOf(G__7241);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

/**
 * Returns a new collection of coll with a mapping from key k to
 * value v added to it.
 */
cljs.core._assoc = (function cljs$core$_assoc(coll,k,v){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._assoc[(function (){var G__7245 = x__4199__auto__;
return goog.typeOf(G__7245);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._assoc["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


/**
 * Protocol for adding mapping functionality to collections.
 */
cljs.core.IMap = (function (){var obj7247 = {};
return obj7247;
})();

/**
 * Returns a new collection of coll without the mapping for key k.
 */
cljs.core._dissoc = (function cljs$core$_dissoc(coll,k){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._dissoc[(function (){var G__7251 = x__4199__auto__;
return goog.typeOf(G__7251);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


/**
 * Protocol for examining a map entry.
 */
cljs.core.IMapEntry = (function (){var obj7253 = {};
return obj7253;
})();

/**
 * Returns the key of the map entry.
 */
cljs.core._key = (function cljs$core$_key(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._key[(function (){var G__7257 = x__4199__auto__;
return goog.typeOf(G__7257);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._key["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns the value of the map entry.
 */
cljs.core._val = (function cljs$core$_val(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._val[(function (){var G__7261 = x__4199__auto__;
return goog.typeOf(G__7261);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._val["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding set functionality to a collection.
 */
cljs.core.ISet = (function (){var obj7263 = {};
return obj7263;
})();

/**
 * Returns a new collection of coll that does not contain v.
 */
cljs.core._disjoin = (function cljs$core$_disjoin(coll,v){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._disjoin[(function (){var G__7267 = x__4199__auto__;
return goog.typeOf(G__7267);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


/**
 * Protocol for collections to provide access to their items as stacks. The top
 * of the stack should be accessed in the most efficient way for the different
 * data structures.
 */
cljs.core.IStack = (function (){var obj7269 = {};
return obj7269;
})();

/**
 * Returns the item from the top of the stack. Is used by cljs.core/peek.
 */
cljs.core._peek = (function cljs$core$_peek(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._peek[(function (){var G__7273 = x__4199__auto__;
return goog.typeOf(G__7273);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._peek["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new stack without the item on top of the stack. Is used
 * by cljs.core/pop.
 */
cljs.core._pop = (function cljs$core$_pop(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._pop[(function (){var G__7277 = x__4199__auto__;
return goog.typeOf(G__7277);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._pop["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding vector functionality to collections.
 */
cljs.core.IVector = (function (){var obj7279 = {};
return obj7279;
})();

/**
 * Returns a new vector with value val added at position n.
 */
cljs.core._assoc_n = (function cljs$core$_assoc_n(coll,n,val){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._assoc_n[(function (){var G__7283 = x__4199__auto__;
return goog.typeOf(G__7283);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


/**
 * Protocol for adding dereference functionality to a reference.
 */
cljs.core.IDeref = (function (){var obj7285 = {};
return obj7285;
})();

/**
 * Returns the value of the reference o.
 */
cljs.core._deref = (function cljs$core$_deref(o){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._deref[(function (){var G__7289 = x__4199__auto__;
return goog.typeOf(G__7289);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._deref["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj7291 = {};
return obj7291;
})();

cljs.core._deref_with_timeout = (function cljs$core$_deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._deref_with_timeout[(function (){var G__7295 = x__4199__auto__;
return goog.typeOf(G__7295);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


/**
 * Protocol for accessing the metadata of an object.
 */
cljs.core.IMeta = (function (){var obj7297 = {};
return obj7297;
})();

/**
 * Returns the metadata of object o.
 */
cljs.core._meta = (function cljs$core$_meta(o){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._meta[(function (){var G__7301 = x__4199__auto__;
return goog.typeOf(G__7301);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._meta["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding metadata to an object.
 */
cljs.core.IWithMeta = (function (){var obj7303 = {};
return obj7303;
})();

/**
 * Returns a new object with value of o and metadata meta added to it.
 */
cljs.core._with_meta = (function cljs$core$_with_meta(o,meta){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._with_meta[(function (){var G__7307 = x__4199__auto__;
return goog.typeOf(G__7307);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


/**
 * Protocol for seq types that can reduce themselves.
 * Called by cljs.core/reduce.
 */
cljs.core.IReduce = (function (){var obj7309 = {};
return obj7309;
})();

/**
 * f should be a function of 2 arguments. If start is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc.
 */
cljs.core._reduce = (function() {
var cljs$core$_reduce = null;
var cljs$core$_reduce__2 = (function (coll,f){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._reduce[(function (){var G__7315 = x__4199__auto__;
return goog.typeOf(G__7315);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._reduce["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var cljs$core$_reduce__3 = (function (coll,f,start){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._reduce[(function (){var G__7317 = x__4199__auto__;
return goog.typeOf(G__7317);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._reduce["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
cljs$core$_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return cljs$core$_reduce__2.call(this,coll,f);
case 3:
return cljs$core$_reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
return cljs$core$_reduce;
})()
;


/**
 * Protocol for associative types that can reduce themselves
 * via a function of key and val. Called by cljs.core/reduce-kv.
 */
cljs.core.IKVReduce = (function (){var obj7319 = {};
return obj7319;
})();

/**
 * Reduces an associative collection and returns the result. f should be
 * a function that takes three arguments.
 */
cljs.core._kv_reduce = (function cljs$core$_kv_reduce(coll,f,init){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._kv_reduce[(function (){var G__7323 = x__4199__auto__;
return goog.typeOf(G__7323);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


/**
 * Protocol for adding value comparison functionality to a type.
 */
cljs.core.IEquiv = (function (){var obj7325 = {};
return obj7325;
})();

/**
 * Returns true if o and other are equal, false otherwise.
 */
cljs.core._equiv = (function cljs$core$_equiv(o,other){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._equiv[(function (){var G__7329 = x__4199__auto__;
return goog.typeOf(G__7329);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._equiv["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


/**
 * Protocol for adding hashing functionality to a type.
 */
cljs.core.IHash = (function (){var obj7331 = {};
return obj7331;
})();

/**
 * Returns the hash code of o.
 */
cljs.core._hash = (function cljs$core$_hash(o){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._hash[(function (){var G__7335 = x__4199__auto__;
return goog.typeOf(G__7335);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._hash["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding the ability to a type to be transformed into a sequence.
 */
cljs.core.ISeqable = (function (){var obj7337 = {};
return obj7337;
})();

/**
 * Returns a seq of o, or nil if o is empty.
 */
cljs.core._seq = (function cljs$core$_seq(o){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._seq[(function (){var G__7341 = x__4199__auto__;
return goog.typeOf(G__7341);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._seq["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


/**
 * Marker interface indicating a persistent collection of sequential items
 */
cljs.core.ISequential = (function (){var obj7343 = {};
return obj7343;
})();


/**
 * Marker interface indicating a persistent list
 */
cljs.core.IList = (function (){var obj7345 = {};
return obj7345;
})();


/**
 * Marker interface indicating a record object
 */
cljs.core.IRecord = (function (){var obj7347 = {};
return obj7347;
})();


/**
 * Protocol for reversing a seq.
 */
cljs.core.IReversible = (function (){var obj7349 = {};
return obj7349;
})();

/**
 * Returns a seq of the items in coll in reversed order.
 */
cljs.core._rseq = (function cljs$core$_rseq(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._rseq[(function (){var G__7353 = x__4199__auto__;
return goog.typeOf(G__7353);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._rseq["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for a collection which can represent their items
 * in a sorted manner.
 */
cljs.core.ISorted = (function (){var obj7355 = {};
return obj7355;
})();

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 */
cljs.core._sorted_seq = (function cljs$core$_sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._sorted_seq[(function (){var G__7359 = x__4199__auto__;
return goog.typeOf(G__7359);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 * If ascending is true, the result should contain all items which are > or >=
 * than k. If ascending is false, the result should contain all items which
 * are < or <= than k, e.g.
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) => (3 4 5)
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) => (3 2 1)
 */
cljs.core._sorted_seq_from = (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._sorted_seq_from[(function (){var G__7363 = x__4199__auto__;
return goog.typeOf(G__7363);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

/**
 * Returns the key for entry.
 */
cljs.core._entry_key = (function cljs$core$_entry_key(coll,entry){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._entry_key[(function (){var G__7367 = x__4199__auto__;
return goog.typeOf(G__7367);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

/**
 * Returns the comparator for coll.
 */
cljs.core._comparator = (function cljs$core$_comparator(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._comparator[(function (){var G__7371 = x__4199__auto__;
return goog.typeOf(G__7371);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._comparator["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for writing. Currently only implemented by StringBufferWriter.
 */
cljs.core.IWriter = (function (){var obj7373 = {};
return obj7373;
})();

/**
 * Writes s with writer and returns the result.
 */
cljs.core._write = (function cljs$core$_write(writer,s){
if((function (){var and__3927__auto__ = writer;
if(and__3927__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3927__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4199__auto__ = (((writer == null))?null:writer);
return (function (){var or__3935__auto__ = (cljs.core._write[(function (){var G__7377 = x__4199__auto__;
return goog.typeOf(G__7377);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._write["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

/**
 * Flush writer.
 */
cljs.core._flush = (function cljs$core$_flush(writer){
if((function (){var and__3927__auto__ = writer;
if(and__3927__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3927__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4199__auto__ = (((writer == null))?null:writer);
return (function (){var or__3935__auto__ = (cljs.core._flush[(function (){var G__7381 = x__4199__auto__;
return goog.typeOf(G__7381);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._flush["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


/**
 * The old IPrintable protocol's implementation consisted of building a giant
 * list of strings to concatenate.  This involved lots of concat calls,
 * intermediate vectors, and lazy-seqs, and was very slow in some older JS
 * engines.  IPrintWithWriter implements printing via the IWriter protocol, so it
 * be implemented efficiently in terms of e.g. a StringBuffer append.
 */
cljs.core.IPrintWithWriter = (function (){var obj7383 = {};
return obj7383;
})();

cljs.core._pr_writer = (function cljs$core$_pr_writer(o,writer,opts){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._pr_writer[(function (){var G__7387 = x__4199__auto__;
return goog.typeOf(G__7387);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


/**
 * Protocol for types which can have a deferred realization. Currently only
 * implemented by Delay.
 */
cljs.core.IPending = (function (){var obj7389 = {};
return obj7389;
})();

/**
 * Returns true if a value for d has been produced, false otherwise.
 */
cljs.core._realized_QMARK_ = (function cljs$core$_realized_QMARK_(d){
if((function (){var and__3927__auto__ = d;
if(and__3927__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3927__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4199__auto__ = (((d == null))?null:d);
return (function (){var or__3935__auto__ = (cljs.core._realized_QMARK_[(function (){var G__7393 = x__4199__auto__;
return goog.typeOf(G__7393);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


/**
 * Protocol for types that can be watched. Currently only implemented by Atom.
 */
cljs.core.IWatchable = (function (){var obj7395 = {};
return obj7395;
})();

/**
 * Calls all watchers with this, oldval and newval.
 */
cljs.core._notify_watches = (function cljs$core$_notify_watches(this$,oldval,newval){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._notify_watches[(function (){var G__7399 = x__4199__auto__;
return goog.typeOf(G__7399);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

/**
 * Adds a watcher function f to this. Keys must be unique per reference,
 * and can be used to remove the watch with -remove-watch.
 */
cljs.core._add_watch = (function cljs$core$_add_watch(this$,key,f){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._add_watch[(function (){var G__7403 = x__4199__auto__;
return goog.typeOf(G__7403);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

/**
 * Removes watcher that corresponds to key from this.
 */
cljs.core._remove_watch = (function cljs$core$_remove_watch(this$,key){
if((function (){var and__3927__auto__ = this$;
if(and__3927__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3927__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4199__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3935__auto__ = (cljs.core._remove_watch[(function (){var G__7407 = x__4199__auto__;
return goog.typeOf(G__7407);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


/**
 * Protocol for collections which can transformed to transients.
 */
cljs.core.IEditableCollection = (function (){var obj7409 = {};
return obj7409;
})();

/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core._as_transient = (function cljs$core$_as_transient(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._as_transient[(function (){var G__7413 = x__4199__auto__;
return goog.typeOf(G__7413);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding basic functionality to transient collections.
 */
cljs.core.ITransientCollection = (function (){var obj7415 = {};
return obj7415;
})();

/**
 * Adds value val to tcoll and returns tcoll.
 */
cljs.core._conj_BANG_ = (function cljs$core$_conj_BANG_(tcoll,val){
if((function (){var and__3927__auto__ = tcoll;
if(and__3927__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3927__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4199__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3935__auto__ = (cljs.core._conj_BANG_[(function (){var G__7419 = x__4199__auto__;
return goog.typeOf(G__7419);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

/**
 * Creates a persistent data structure from tcoll and returns it.
 */
cljs.core._persistent_BANG_ = (function cljs$core$_persistent_BANG_(tcoll){
if((function (){var and__3927__auto__ = tcoll;
if(and__3927__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3927__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4199__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3935__auto__ = (cljs.core._persistent_BANG_[(function (){var G__7423 = x__4199__auto__;
return goog.typeOf(G__7423);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding associativity to transient collections.
 */
cljs.core.ITransientAssociative = (function (){var obj7425 = {};
return obj7425;
})();

/**
 * Returns a new transient collection of tcoll with a mapping from key to
 * val added to it.
 */
cljs.core._assoc_BANG_ = (function cljs$core$_assoc_BANG_(tcoll,key,val){
if((function (){var and__3927__auto__ = tcoll;
if(and__3927__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3927__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4199__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3935__auto__ = (cljs.core._assoc_BANG_[(function (){var G__7429 = x__4199__auto__;
return goog.typeOf(G__7429);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


/**
 * Protocol for adding mapping functionality to transient collections.
 */
cljs.core.ITransientMap = (function (){var obj7431 = {};
return obj7431;
})();

/**
 * Returns a new transient collection of tcoll without the mapping for key.
 */
cljs.core._dissoc_BANG_ = (function cljs$core$_dissoc_BANG_(tcoll,key){
if((function (){var and__3927__auto__ = tcoll;
if(and__3927__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3927__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4199__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3935__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__7435 = x__4199__auto__;
return goog.typeOf(G__7435);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


/**
 * Protocol for adding vector functionality to transient collections.
 */
cljs.core.ITransientVector = (function (){var obj7437 = {};
return obj7437;
})();

/**
 * Returns tcoll with value val added at position n.
 */
cljs.core._assoc_n_BANG_ = (function cljs$core$_assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3927__auto__ = tcoll;
if(and__3927__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3927__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4199__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3935__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__7441 = x__4199__auto__;
return goog.typeOf(G__7441);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

/**
 * Returns tcoll with the last item removed from it.
 */
cljs.core._pop_BANG_ = (function cljs$core$_pop_BANG_(tcoll){
if((function (){var and__3927__auto__ = tcoll;
if(and__3927__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3927__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4199__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3935__auto__ = (cljs.core._pop_BANG_[(function (){var G__7445 = x__4199__auto__;
return goog.typeOf(G__7445);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding set functionality to a transient collection.
 */
cljs.core.ITransientSet = (function (){var obj7447 = {};
return obj7447;
})();

/**
 * Returns tcoll without v.
 */
cljs.core._disjoin_BANG_ = (function cljs$core$_disjoin_BANG_(tcoll,v){
if((function (){var and__3927__auto__ = tcoll;
if(and__3927__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3927__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4199__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3935__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__7451 = x__4199__auto__;
return goog.typeOf(G__7451);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


/**
 * Protocol for values that can be compared.
 */
cljs.core.IComparable = (function (){var obj7453 = {};
return obj7453;
})();

/**
 * Returns a negative number, zero, or a positive number when x is logically
 * 'less than', 'equal to', or 'greater than' y.
 */
cljs.core._compare = (function cljs$core$_compare(x,y){
if((function (){var and__3927__auto__ = x;
if(and__3927__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3927__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4199__auto__ = (((x == null))?null:x);
return (function (){var or__3935__auto__ = (cljs.core._compare[(function (){var G__7457 = x__4199__auto__;
return goog.typeOf(G__7457);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._compare["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


/**
 * Protocol for accessing the items of a chunk.
 */
cljs.core.IChunk = (function (){var obj7459 = {};
return obj7459;
})();

/**
 * Return a new chunk of coll with the first item removed.
 */
cljs.core._drop_first = (function cljs$core$_drop_first(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._drop_first[(function (){var G__7463 = x__4199__auto__;
return goog.typeOf(G__7463);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing a collection as sequential chunks.
 */
cljs.core.IChunkedSeq = (function (){var obj7465 = {};
return obj7465;
})();

/**
 * Returns the first chunk in coll.
 */
cljs.core._chunked_first = (function cljs$core$_chunked_first(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._chunked_first[(function (){var G__7469 = x__4199__auto__;
return goog.typeOf(G__7469);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Return a new collection of coll with the first chunk removed.
 */
cljs.core._chunked_rest = (function cljs$core$_chunked_rest(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._chunked_rest[(function (){var G__7473 = x__4199__auto__;
return goog.typeOf(G__7473);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the chunks of a collection.
 */
cljs.core.IChunkedNext = (function (){var obj7475 = {};
return obj7475;
})();

/**
 * Returns a new collection of coll without the first chunk.
 */
cljs.core._chunked_next = (function cljs$core$_chunked_next(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._chunked_next[(function (){var G__7479 = x__4199__auto__;
return goog.typeOf(G__7479);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding a name.
 */
cljs.core.INamed = (function (){var obj7481 = {};
return obj7481;
})();

/**
 * Returns the name String of x.
 */
cljs.core._name = (function cljs$core$_name(x){
if((function (){var and__3927__auto__ = x;
if(and__3927__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3927__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4199__auto__ = (((x == null))?null:x);
return (function (){var or__3935__auto__ = (cljs.core._name[(function (){var G__7485 = x__4199__auto__;
return goog.typeOf(G__7485);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._name["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

/**
 * Returns the namespace String of x.
 */
cljs.core._namespace = (function cljs$core$_namespace(x){
if((function (){var and__3927__auto__ = x;
if(and__3927__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3927__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4199__auto__ = (((x == null))?null:x);
return (function (){var or__3935__auto__ = (cljs.core._namespace[(function (){var G__7489 = x__4199__auto__;
return goog.typeOf(G__7489);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._namespace["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


/**
 * Marker protocol indicating an atom.
 */
cljs.core.IAtom = (function (){var obj7491 = {};
return obj7491;
})();


/**
 * Protocol for adding resetting functionality.
 */
cljs.core.IReset = (function (){var obj7493 = {};
return obj7493;
})();

/**
 * Sets the value of o to new-value.
 */
cljs.core._reset_BANG_ = (function cljs$core$_reset_BANG_(o,new_value){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._reset_BANG_[(function (){var G__7497 = x__4199__auto__;
return goog.typeOf(G__7497);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for adding swapping functionality.
 */
cljs.core.ISwap = (function (){var obj7499 = {};
return obj7499;
})();

/**
 * Swaps the value of o to be (apply f current-value-of-atom args).
 */
cljs.core._swap_BANG_ = (function() {
var cljs$core$_swap_BANG_ = null;
var cljs$core$_swap_BANG___2 = (function (o,f){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._swap_BANG_[(function (){var G__7509 = x__4199__auto__;
return goog.typeOf(G__7509);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var cljs$core$_swap_BANG___3 = (function (o,f,a){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._swap_BANG_[(function (){var G__7511 = x__4199__auto__;
return goog.typeOf(G__7511);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var cljs$core$_swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._swap_BANG_[(function (){var G__7513 = x__4199__auto__;
return goog.typeOf(G__7513);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var cljs$core$_swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._swap_BANG_[(function (){var G__7515 = x__4199__auto__;
return goog.typeOf(G__7515);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
cljs$core$_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return cljs$core$_swap_BANG___2.call(this,o,f);
case 3:
return cljs$core$_swap_BANG___3.call(this,o,f,a);
case 4:
return cljs$core$_swap_BANG___4.call(this,o,f,a,b);
case 5:
return cljs$core$_swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
return cljs$core$_swap_BANG_;
})()
;


/**
 * Protocol for adding volatile functionality.
 */
cljs.core.IVolatile = (function (){var obj7517 = {};
return obj7517;
})();

/**
 * Sets the value of volatile o to new-value without regard for the
 * current value. Returns new-value.
 */
cljs.core._vreset_BANG_ = (function cljs$core$_vreset_BANG_(o,new_value){
if((function (){var and__3927__auto__ = o;
if(and__3927__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3927__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4199__auto__ = (((o == null))?null:o);
return (function (){var or__3935__auto__ = (cljs.core._vreset_BANG_[(function (){var G__7521 = x__4199__auto__;
return goog.typeOf(G__7521);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for iterating over a collection.
 */
cljs.core.IIterable = (function (){var obj7523 = {};
return obj7523;
})();

/**
 * Returns an iterator for coll.
 */
cljs.core._iterator = (function cljs$core$_iterator(coll){
if((function (){var and__3927__auto__ = coll;
if(and__3927__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3927__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4199__auto__ = (((coll == null))?null:coll);
return (function (){var or__3935__auto__ = (cljs.core._iterator[(function (){var G__7527 = x__4199__auto__;
return goog.typeOf(G__7527);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._iterator["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function cljs$core$__GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function cljs$core$pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function cljs$core$int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__7530 = (4294967295);
var G__7531 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__7530,G__7531) : Math.imul.call(null,G__7530,G__7531));
})() === (0))))){
cljs.core.imul = (function cljs$core$imul(a,b){
var G__7534 = a;
var G__7535 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__7534,G__7535) : Math.imul.call(null,G__7534,G__7535));
});
} else {
cljs.core.imul = (function cljs$core$imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function cljs$core$m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function cljs$core$m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function cljs$core$m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function cljs$core$m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function cljs$core$m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__7536 = (i + (2));
var G__7537 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__7536;
h1 = G__7537;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj7539 = {};
return obj7539;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function cljs$core$hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__7540 = (i + (1));
var G__7541 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__7540;
hash = G__7541;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function cljs$core$add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function cljs$core$hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj7545 = {};
return obj7545;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
/**
 * Returns the hash code of its argument. Note this is the hash code
 * consistent with =.
 */
cljs.core.hash = (function cljs$core$hash(o){
if((function (){var G__7548 = o;
if(G__7548){
var bit__4226__auto__ = (G__7548.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4226__auto__) || (G__7548.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__7549 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7549) : Math.floor.call(null,G__7549));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function cljs$core$hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
/**
 * Evaluates x and tests if it is an instance of the type
 * c. Returns true or false
 */
cljs.core.instance_QMARK_ = (function cljs$core$instance_QMARK_(t,o){
return (o instanceof t);
});
/**
 * Return true if x is a Symbol
 */
cljs.core.symbol_QMARK_ = (function cljs$core$symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function cljs$core$hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function cljs$core$compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3927__auto__ = cljs.core.not(a.ns);
if(and__3927__auto__){
return b.ns;
} else {
return and__3927__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7556 = a.ns;
var G__7557 = b.ns;
return goog.array.defaultCompare(G__7556,G__7557);
})();
if(((0) === nsc)){
var G__7558 = a.name;
var G__7559 = b.name;
return goog.array.defaultCompare(G__7558,G__7559);
} else {
return nsc;
}
}
} else {
var G__7560 = a.name;
var G__7561 = b.name;
return goog.array.defaultCompare(G__7560,G__7561);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4027__auto__ = self__._hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__7563 = null;
var G__7563__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__7563__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__7563 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7563__2.call(this,self__,coll);
case 3:
return G__7563__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7563.cljs$core$IFn$_invoke$arity$2 = G__7563__2;
G__7563.cljs$core$IFn$_invoke$arity$3 = G__7563__3;
return G__7563;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args7562){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7562)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var cljs$core$symbol = null;
var cljs$core$symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var cljs$core$symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
cljs$core$symbol = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$symbol__1.call(this,ns);
case 2:
return cljs$core$symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
return cljs$core$symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__7611 = null;
var G__7611__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__7611__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__7611__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__7611__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__7611__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__7611__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__7611__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__7611__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__7611__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__7611__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__7611__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__7611__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__7611__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__7611__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__7611__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__7611__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__7611__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__7611__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__7611__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__7611__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__7611__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__7611__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7567 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__7568 = a;
var G__7569 = b;
var G__7570 = c;
var G__7571 = d;
var G__7572 = e;
var G__7573 = f;
var G__7574 = g;
var G__7575 = h;
var G__7576 = i;
var G__7577 = j;
var G__7578 = k;
var G__7579 = l;
var G__7580 = m;
var G__7581 = n;
var G__7582 = o;
var G__7583 = p;
var G__7584 = q;
var G__7585 = r;
var G__7586 = s;
var G__7587 = t;
var G__7588 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7567,G__7568,G__7569,G__7570,G__7571,G__7572,G__7573,G__7574,G__7575,G__7576,G__7577,G__7578,G__7579,G__7580,G__7581,G__7582,G__7583,G__7584,G__7585,G__7586,G__7587,G__7588) : cljs.core.apply.call(null,G__7567,G__7568,G__7569,G__7570,G__7571,G__7572,G__7573,G__7574,G__7575,G__7576,G__7577,G__7578,G__7579,G__7580,G__7581,G__7582,G__7583,G__7584,G__7585,G__7586,G__7587,G__7588));
});
G__7611 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7611__1.call(this,self__);
case 2:
return G__7611__2.call(this,self__,a);
case 3:
return G__7611__3.call(this,self__,a,b);
case 4:
return G__7611__4.call(this,self__,a,b,c);
case 5:
return G__7611__5.call(this,self__,a,b,c,d);
case 6:
return G__7611__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7611__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7611__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7611__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7611__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7611__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7611__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7611__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7611__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7611__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7611__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7611__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7611__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7611__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7611__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7611__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7611__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7611.cljs$core$IFn$_invoke$arity$1 = G__7611__1;
G__7611.cljs$core$IFn$_invoke$arity$2 = G__7611__2;
G__7611.cljs$core$IFn$_invoke$arity$3 = G__7611__3;
G__7611.cljs$core$IFn$_invoke$arity$4 = G__7611__4;
G__7611.cljs$core$IFn$_invoke$arity$5 = G__7611__5;
G__7611.cljs$core$IFn$_invoke$arity$6 = G__7611__6;
G__7611.cljs$core$IFn$_invoke$arity$7 = G__7611__7;
G__7611.cljs$core$IFn$_invoke$arity$8 = G__7611__8;
G__7611.cljs$core$IFn$_invoke$arity$9 = G__7611__9;
G__7611.cljs$core$IFn$_invoke$arity$10 = G__7611__10;
G__7611.cljs$core$IFn$_invoke$arity$11 = G__7611__11;
G__7611.cljs$core$IFn$_invoke$arity$12 = G__7611__12;
G__7611.cljs$core$IFn$_invoke$arity$13 = G__7611__13;
G__7611.cljs$core$IFn$_invoke$arity$14 = G__7611__14;
G__7611.cljs$core$IFn$_invoke$arity$15 = G__7611__15;
G__7611.cljs$core$IFn$_invoke$arity$16 = G__7611__16;
G__7611.cljs$core$IFn$_invoke$arity$17 = G__7611__17;
G__7611.cljs$core$IFn$_invoke$arity$18 = G__7611__18;
G__7611.cljs$core$IFn$_invoke$arity$19 = G__7611__19;
G__7611.cljs$core$IFn$_invoke$arity$20 = G__7611__20;
G__7611.cljs$core$IFn$_invoke$arity$21 = G__7611__21;
G__7611.cljs$core$IFn$_invoke$arity$22 = G__7611__22;
return G__7611;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args7566){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7566)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7589 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__7590 = a;
var G__7591 = b;
var G__7592 = c;
var G__7593 = d;
var G__7594 = e;
var G__7595 = f;
var G__7596 = g;
var G__7597 = h;
var G__7598 = i;
var G__7599 = j;
var G__7600 = k;
var G__7601 = l;
var G__7602 = m;
var G__7603 = n;
var G__7604 = o;
var G__7605 = p;
var G__7606 = q;
var G__7607 = r;
var G__7608 = s;
var G__7609 = t;
var G__7610 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7589,G__7590,G__7591,G__7592,G__7593,G__7594,G__7595,G__7596,G__7597,G__7598,G__7599,G__7600,G__7601,G__7602,G__7603,G__7604,G__7605,G__7606,G__7607,G__7608,G__7609,G__7610) : cljs.core.apply.call(null,G__7589,G__7590,G__7591,G__7592,G__7593,G__7594,G__7595,G__7596,G__7597,G__7598,G__7599,G__7600,G__7601,G__7602,G__7603,G__7604,G__7605,G__7606,G__7607,G__7608,G__7609,G__7610));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function cljs$core$__GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



/**
 * Return true if x implements IIterable protocol.
 */
cljs.core.iterable_QMARK_ = (function cljs$core$iterable_QMARK_(x){
var G__7613 = x;
if(G__7613){
var bit__4229__auto__ = null;
if(cljs.core.truth_((function (){var or__3935__auto__ = bit__4229__auto__;
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return G__7613.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__7613.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__7613);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__7613);
}
});
/**
 * Clone the supplied value which must implement ICloneable.
 */
cljs.core.clone = (function cljs$core$clone(value){
return cljs.core._clone(value);
});
/**
 * Return true if x implements ICloneable protocol.
 */
cljs.core.cloneable_QMARK_ = (function cljs$core$cloneable_QMARK_(value){
var G__7615 = value;
if(G__7615){
var bit__4229__auto__ = (G__7615.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4229__auto__) || (G__7615.cljs$core$ICloneable$)){
return true;
} else {
if((!G__7615.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__7615);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__7615);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function cljs$core$seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7617 = coll;
if(G__7617){
var bit__4226__auto__ = (G__7617.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4226__auto__) || (G__7617.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function cljs$core$first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7619 = coll;
if(G__7619){
var bit__4226__auto__ = (G__7619.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4226__auto__) || (G__7619.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function cljs$core$rest(coll){
if(!((coll == null))){
if((function (){var G__7621 = coll;
if(G__7621){
var bit__4226__auto__ = (G__7621.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4226__auto__) || (G__7621.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function cljs$core$next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__7623 = coll;
if(G__7623){
var bit__4226__auto__ = (G__7623.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4226__auto__) || (G__7623.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var cljs$core$_EQ_ = null;
var cljs$core$_EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var cljs$core$_EQ___3 = (function() { 
var G__7628__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7629 = y;
var G__7630 = cljs.core.first(more);
var G__7631 = cljs.core.next(more);
x = G__7629;
y = G__7630;
more = G__7631;
continue;
} else {
return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7628 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7632__i = 0, G__7632__a = new Array(arguments.length -  2);
while (G__7632__i < G__7632__a.length) {G__7632__a[G__7632__i] = arguments[G__7632__i + 2]; ++G__7632__i;}
  more = new cljs.core.IndexedSeq(G__7632__a,0);
} 
return G__7628__delegate.call(this,x,y,more);};
G__7628.cljs$lang$maxFixedArity = 2;
G__7628.cljs$lang$applyTo = (function (arglist__7633){
var x = cljs.core.first(arglist__7633);
arglist__7633 = cljs.core.next(arglist__7633);
var y = cljs.core.first(arglist__7633);
var more = cljs.core.rest(arglist__7633);
return G__7628__delegate(x,y,more);
});
G__7628.cljs$core$IFn$_invoke$arity$variadic = G__7628__delegate;
return G__7628;
})()
;
cljs$core$_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ___1.call(this,x);
case 2:
return cljs$core$_EQ___2.call(this,x,y);
default:
var G__7634 = null;
if (arguments.length > 2) {
var G__7635__i = 0, G__7635__a = new Array(arguments.length -  2);
while (G__7635__i < G__7635__a.length) {G__7635__a[G__7635__i] = arguments[G__7635__i + 2]; ++G__7635__i;}
G__7634 = new cljs.core.IndexedSeq(G__7635__a,0);
}
return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7634);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function cljs$core$__GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

/**
 * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.
 */
cljs.core.es6_iterator = (function cljs$core$es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__7636 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__7636) : cljs.core.es6_iterator_seq.call(null,G__7636));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

/**
 * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.
 */
cljs.core.es6_iterator_seq = (function cljs$core$es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function cljs$core$mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function cljs$core$hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__7637 = (n + (1));
var G__7638 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__7639 = cljs.core.next(coll__$1);
n = G__7637;
hash_code = G__7638;
coll__$1 = G__7639;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function cljs$core$hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__7640 = (n + (1));
var G__7641 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__7642 = cljs.core.next(coll__$1);
n = G__7640;
hash_code = G__7641;
coll__$1 = G__7642;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IComparable$ = true;

Date.prototype.cljs$core$IComparable$_compare$arity$2 = (function (this$,other){
var this$__$1 = this;
var G__7643 = this$__$1.valueOf();
var G__7644 = other.valueOf();
return goog.array.defaultCompare(G__7643,G__7644);
});

Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.valueOf() === other.valueOf()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__7645 = o;
return goog.getUid(G__7645);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function cljs$core$inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function cljs$core$__GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function cljs$core$reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function cljs$core$reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function cljs$core$ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function cljs$core$unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__7647 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__7647) : cljs.core.deref.call(null,G__7647));
} else {
return x;
}
});
/**
 * Also reader macro: @var/@atom/@delay. Returns the
 * most-recently-committed value of ref. When applied to a var
 * or atom, returns its current state. When applied to a delay, forces
 * it if not already forced. See also - realized?.
 */
cljs.core.deref = (function cljs$core$deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var cljs$core$ci_reduce = null;
var cljs$core$ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__7654 = val;
var G__7655 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7654,G__7655) : f.call(null,G__7654,G__7655));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7660 = nval;
var G__7661 = (n + (1));
val = G__7660;
n = G__7661;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__7656 = val__$1;
var G__7657 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7656,G__7657) : f.call(null,G__7656,G__7657));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7662 = nval;
var G__7663 = (n + (1));
val__$1 = G__7662;
n = G__7663;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__7658 = val__$1;
var G__7659 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7658,G__7659) : f.call(null,G__7658,G__7659));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7664 = nval;
var G__7665 = (n + (1));
val__$1 = G__7664;
n = G__7665;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$ci_reduce__2.call(this,cicoll,f);
case 3:
return cljs$core$ci_reduce__3.call(this,cicoll,f,val);
case 4:
return cljs$core$ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
return cljs$core$ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var cljs$core$array_reduce = null;
var cljs$core$array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__7672 = val;
var G__7673 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7672,G__7673) : f.call(null,G__7672,G__7673));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7678 = nval;
var G__7679 = (n + (1));
val = G__7678;
n = G__7679;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__7674 = val__$1;
var G__7675 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7674,G__7675) : f.call(null,G__7674,G__7675));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7680 = nval;
var G__7681 = (n + (1));
val__$1 = G__7680;
n = G__7681;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__7676 = val__$1;
var G__7677 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7676,G__7677) : f.call(null,G__7676,G__7677));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7682 = nval;
var G__7683 = (n + (1));
val__$1 = G__7682;
n = G__7683;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$array_reduce__2.call(this,arr,f);
case 3:
return cljs$core$array_reduce__3.call(this,arr,f,val);
case 4:
return cljs$core$array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
return cljs$core$array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function cljs$core$counted_QMARK_(x){
var G__7685 = x;
if(G__7685){
var bit__4229__auto__ = (G__7685.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4229__auto__) || (G__7685.cljs$core$ICounted$)){
return true;
} else {
if((!G__7685.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__7685);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__7685);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function cljs$core$indexed_QMARK_(x){
var G__7687 = x;
if(G__7687){
var bit__4229__auto__ = (G__7687.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4229__auto__) || (G__7687.cljs$core$IIndexed$)){
return true;
} else {
if((!G__7687.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__7687);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__7687);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function cljs$core$__GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__7688 = coll__$1;
var G__7689 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__7688,G__7689) : cljs.core.equiv_sequential.call(null,G__7688,G__7689));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__7690 = o;
var G__7691 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__7690,G__7691) : cljs.core.cons.call(null,G__7690,G__7691));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function cljs$core$__GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
/**
 * Create seq from a primitive JavaScript Array-like.
 */
cljs.core.prim_seq = (function() {
var cljs$core$prim_seq = null;
var cljs$core$prim_seq__1 = (function (prim){
return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var cljs$core$prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
cljs$core$prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return cljs$core$prim_seq__1.call(this,prim);
case 2:
return cljs$core$prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
return cljs$core$prim_seq;
})()
;
/**
 * Create a seq from a JavaScript array.
 */
cljs.core.array_seq = (function() {
var cljs$core$array_seq = null;
var cljs$core$array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var cljs$core$array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
cljs$core$array_seq = function(array,i){
switch(arguments.length){
case 1:
return cljs$core$array_seq__1.call(this,array);
case 2:
return cljs$core$array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
return cljs$core$array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__7694 = coll__$1;
var G__7695 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__7694,G__7695) : cljs.core.equiv_sequential.call(null,G__7694,G__7695));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__7696 = cljs.core.List.EMPTY;
var G__7697 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__7696,G__7697) : cljs.core.with_meta.call(null,G__7696,G__7697));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__7698 = f;
var G__7699 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__7698,G__7699) : cljs.core.seq_reduce.call(null,G__7698,G__7699));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__7700 = f;
var G__7701 = start;
var G__7702 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__7700,G__7701,G__7702) : cljs.core.seq_reduce.call(null,G__7700,G__7701,G__7702));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__7703 = o;
var G__7704 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__7703,G__7704) : cljs.core.cons.call(null,G__7703,G__7704));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function cljs$core$__GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function cljs$core$second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function cljs$core$ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function cljs$core$nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function cljs$core$fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function cljs$core$nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function cljs$core$last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__7705 = sn;
s = G__7705;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var cljs$core$conj = null;
var cljs$core$conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var cljs$core$conj__1 = (function (coll){
return coll;
});
var cljs$core$conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var cljs$core$conj__3 = (function() { 
var G__7710__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__7711 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__7712 = cljs.core.first(xs);
var G__7713 = cljs.core.next(xs);
coll = G__7711;
x = G__7712;
xs = G__7713;
continue;
} else {
return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__7710 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__7714__i = 0, G__7714__a = new Array(arguments.length -  2);
while (G__7714__i < G__7714__a.length) {G__7714__a[G__7714__i] = arguments[G__7714__i + 2]; ++G__7714__i;}
  xs = new cljs.core.IndexedSeq(G__7714__a,0);
} 
return G__7710__delegate.call(this,coll,x,xs);};
G__7710.cljs$lang$maxFixedArity = 2;
G__7710.cljs$lang$applyTo = (function (arglist__7715){
var coll = cljs.core.first(arglist__7715);
arglist__7715 = cljs.core.next(arglist__7715);
var x = cljs.core.first(arglist__7715);
var xs = cljs.core.rest(arglist__7715);
return G__7710__delegate(coll,x,xs);
});
G__7710.cljs$core$IFn$_invoke$arity$variadic = G__7710__delegate;
return G__7710;
})()
;
cljs$core$conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj__0.call(this);
case 1:
return cljs$core$conj__1.call(this,coll);
case 2:
return cljs$core$conj__2.call(this,coll,x);
default:
var G__7716 = null;
if (arguments.length > 2) {
var G__7717__i = 0, G__7717__a = new Array(arguments.length -  2);
while (G__7717__i < G__7717__a.length) {G__7717__a[G__7717__i] = arguments[G__7717__i + 2]; ++G__7717__i;}
G__7716 = new cljs.core.IndexedSeq(G__7717__a,0);
}
return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__7716);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj.cljs$lang$maxFixedArity = 2;
cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function cljs$core$empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function cljs$core$accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__7718 = cljs.core.next(s);
var G__7719 = (acc + (1));
s = G__7718;
acc = G__7719;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function cljs$core$count(coll){
if(!((coll == null))){
if((function (){var G__7721 = coll;
if(G__7721){
var bit__4226__auto__ = (G__7721.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4226__auto__) || (G__7721.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var cljs$core$linear_traversal_nth = null;
var cljs$core$linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__7722 = cljs.core.next(coll);
var G__7723 = (n - (1));
coll = G__7722;
n = G__7723;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var cljs$core$linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__7724 = cljs.core.next(coll);
var G__7725 = (n - (1));
var G__7726 = not_found;
coll = G__7724;
n = G__7725;
not_found = G__7726;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
cljs$core$linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$linear_traversal_nth__2.call(this,coll,n);
case 3:
return cljs$core$linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
return cljs$core$linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var cljs$core$nth = null;
var cljs$core$nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__7731 = coll;
if(G__7731){
var bit__4226__auto__ = (G__7731.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4226__auto__) || (G__7731.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__7732 = coll;
if(G__7732){
var bit__4229__auto__ = (G__7732.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4229__auto__) || (G__7732.cljs$core$ISeq$)){
return true;
} else {
if((!G__7732.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7732);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7732);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var cljs$core$nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__7733 = coll;
if(G__7733){
var bit__4226__auto__ = (G__7733.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4226__auto__) || (G__7733.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__7734 = coll;
if(G__7734){
var bit__4229__auto__ = (G__7734.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4229__auto__) || (G__7734.cljs$core$ISeq$)){
return true;
} else {
if((!G__7734.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7734);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7734);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
cljs$core$nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$nth__2.call(this,coll,n);
case 3:
return cljs$core$nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
return cljs$core$nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function cljs$core$nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__7735 = (n__$1 - (1));
var G__7736 = cljs.core.rest(xs);
n__$1 = G__7735;
xs = G__7736;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var cljs$core$get = null;
var cljs$core$get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__7739 = o;
if(G__7739){
var bit__4226__auto__ = (G__7739.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4226__auto__) || (G__7739.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var cljs$core$get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__7740 = o;
if(G__7740){
var bit__4226__auto__ = (G__7740.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4226__auto__) || (G__7740.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
cljs$core$get = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$get__2.call(this,o,k);
case 3:
return cljs$core$get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
return cljs$core$get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var cljs$core$assoc = null;
var cljs$core$assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var cljs$core$assoc__4 = (function() { 
var G__7744__delegate = function (coll,k,v,kvs){
while(true){
var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__7745 = ret;
var G__7746 = cljs.core.first(kvs);
var G__7747 = cljs.core.second(kvs);
var G__7748 = cljs.core.nnext(kvs);
coll = G__7745;
k = G__7746;
v = G__7747;
kvs = G__7748;
continue;
} else {
return ret;
}
break;
}
};
var G__7744 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7749__i = 0, G__7749__a = new Array(arguments.length -  3);
while (G__7749__i < G__7749__a.length) {G__7749__a[G__7749__i] = arguments[G__7749__i + 3]; ++G__7749__i;}
  kvs = new cljs.core.IndexedSeq(G__7749__a,0);
} 
return G__7744__delegate.call(this,coll,k,v,kvs);};
G__7744.cljs$lang$maxFixedArity = 3;
G__7744.cljs$lang$applyTo = (function (arglist__7750){
var coll = cljs.core.first(arglist__7750);
arglist__7750 = cljs.core.next(arglist__7750);
var k = cljs.core.first(arglist__7750);
arglist__7750 = cljs.core.next(arglist__7750);
var v = cljs.core.first(arglist__7750);
var kvs = cljs.core.rest(arglist__7750);
return G__7744__delegate(coll,k,v,kvs);
});
G__7744.cljs$core$IFn$_invoke$arity$variadic = G__7744__delegate;
return G__7744;
})()
;
cljs$core$assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc__3.call(this,coll,k,v);
default:
var G__7751 = null;
if (arguments.length > 3) {
var G__7752__i = 0, G__7752__a = new Array(arguments.length -  3);
while (G__7752__i < G__7752__a.length) {G__7752__a[G__7752__i] = arguments[G__7752__i + 3]; ++G__7752__i;}
G__7751 = new cljs.core.IndexedSeq(G__7752__a,0);
}
return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__7751);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc.cljs$lang$maxFixedArity = 3;
cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var cljs$core$dissoc = null;
var cljs$core$dissoc__1 = (function (coll){
return coll;
});
var cljs$core$dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var cljs$core$dissoc__3 = (function() { 
var G__7755__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7756 = ret;
var G__7757 = cljs.core.first(ks);
var G__7758 = cljs.core.next(ks);
coll = G__7756;
k = G__7757;
ks = G__7758;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7755 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7759__i = 0, G__7759__a = new Array(arguments.length -  2);
while (G__7759__i < G__7759__a.length) {G__7759__a[G__7759__i] = arguments[G__7759__i + 2]; ++G__7759__i;}
  ks = new cljs.core.IndexedSeq(G__7759__a,0);
} 
return G__7755__delegate.call(this,coll,k,ks);};
G__7755.cljs$lang$maxFixedArity = 2;
G__7755.cljs$lang$applyTo = (function (arglist__7760){
var coll = cljs.core.first(arglist__7760);
arglist__7760 = cljs.core.next(arglist__7760);
var k = cljs.core.first(arglist__7760);
var ks = cljs.core.rest(arglist__7760);
return G__7755__delegate(coll,k,ks);
});
G__7755.cljs$core$IFn$_invoke$arity$variadic = G__7755__delegate;
return G__7755;
})()
;
cljs$core$dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$dissoc__1.call(this,coll);
case 2:
return cljs$core$dissoc__2.call(this,coll,k);
default:
var G__7761 = null;
if (arguments.length > 2) {
var G__7762__i = 0, G__7762__a = new Array(arguments.length -  2);
while (G__7762__i < G__7762__a.length) {G__7762__a[G__7762__i] = arguments[G__7762__i + 2]; ++G__7762__i;}
G__7761 = new cljs.core.IndexedSeq(G__7762__a,0);
}
return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7761);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc;
})()
;
/**
 * Return true if f is a JavaScript function or satisfies the Fn protocol.
 */
cljs.core.fn_QMARK_ = (function cljs$core$fn_QMARK_(f){
var or__3935__auto__ = (function (){var G__7767 = f;
return goog.isFunction(G__7767);
})();
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
var G__7768 = f;
if(G__7768){
var bit__4229__auto__ = null;
if(cljs.core.truth_((function (){var or__3935__auto____$1 = bit__4229__auto__;
if(cljs.core.truth_(or__3935__auto____$1)){
return or__3935__auto____$1;
} else {
return G__7768.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__7768.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7768);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__7768);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__8234 = null;
var G__8234__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__8234__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7770 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7770) : self__.afn.call(null,G__7770));
});
var G__8234__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7771 = a;
var G__7772 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7771,G__7772) : self__.afn.call(null,G__7771,G__7772));
});
var G__8234__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7773 = a;
var G__7774 = b;
var G__7775 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7773,G__7774,G__7775) : self__.afn.call(null,G__7773,G__7774,G__7775));
});
var G__8234__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7776 = a;
var G__7777 = b;
var G__7778 = c;
var G__7779 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7776,G__7777,G__7778,G__7779) : self__.afn.call(null,G__7776,G__7777,G__7778,G__7779));
});
var G__8234__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7780 = a;
var G__7781 = b;
var G__7782 = c;
var G__7783 = d;
var G__7784 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7780,G__7781,G__7782,G__7783,G__7784) : self__.afn.call(null,G__7780,G__7781,G__7782,G__7783,G__7784));
});
var G__8234__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7785 = a;
var G__7786 = b;
var G__7787 = c;
var G__7788 = d;
var G__7789 = e;
var G__7790 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7785,G__7786,G__7787,G__7788,G__7789,G__7790) : self__.afn.call(null,G__7785,G__7786,G__7787,G__7788,G__7789,G__7790));
});
var G__8234__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7791 = a;
var G__7792 = b;
var G__7793 = c;
var G__7794 = d;
var G__7795 = e;
var G__7796 = f;
var G__7797 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7791,G__7792,G__7793,G__7794,G__7795,G__7796,G__7797) : self__.afn.call(null,G__7791,G__7792,G__7793,G__7794,G__7795,G__7796,G__7797));
});
var G__8234__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7798 = a;
var G__7799 = b;
var G__7800 = c;
var G__7801 = d;
var G__7802 = e;
var G__7803 = f;
var G__7804 = g;
var G__7805 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7798,G__7799,G__7800,G__7801,G__7802,G__7803,G__7804,G__7805) : self__.afn.call(null,G__7798,G__7799,G__7800,G__7801,G__7802,G__7803,G__7804,G__7805));
});
var G__8234__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7806 = a;
var G__7807 = b;
var G__7808 = c;
var G__7809 = d;
var G__7810 = e;
var G__7811 = f;
var G__7812 = g;
var G__7813 = h;
var G__7814 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7806,G__7807,G__7808,G__7809,G__7810,G__7811,G__7812,G__7813,G__7814) : self__.afn.call(null,G__7806,G__7807,G__7808,G__7809,G__7810,G__7811,G__7812,G__7813,G__7814));
});
var G__8234__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7815 = a;
var G__7816 = b;
var G__7817 = c;
var G__7818 = d;
var G__7819 = e;
var G__7820 = f;
var G__7821 = g;
var G__7822 = h;
var G__7823 = i;
var G__7824 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7815,G__7816,G__7817,G__7818,G__7819,G__7820,G__7821,G__7822,G__7823,G__7824) : self__.afn.call(null,G__7815,G__7816,G__7817,G__7818,G__7819,G__7820,G__7821,G__7822,G__7823,G__7824));
});
var G__8234__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7825 = a;
var G__7826 = b;
var G__7827 = c;
var G__7828 = d;
var G__7829 = e;
var G__7830 = f;
var G__7831 = g;
var G__7832 = h;
var G__7833 = i;
var G__7834 = j;
var G__7835 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7825,G__7826,G__7827,G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834,G__7835) : self__.afn.call(null,G__7825,G__7826,G__7827,G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834,G__7835));
});
var G__8234__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7836 = a;
var G__7837 = b;
var G__7838 = c;
var G__7839 = d;
var G__7840 = e;
var G__7841 = f;
var G__7842 = g;
var G__7843 = h;
var G__7844 = i;
var G__7845 = j;
var G__7846 = k;
var G__7847 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7836,G__7837,G__7838,G__7839,G__7840,G__7841,G__7842,G__7843,G__7844,G__7845,G__7846,G__7847) : self__.afn.call(null,G__7836,G__7837,G__7838,G__7839,G__7840,G__7841,G__7842,G__7843,G__7844,G__7845,G__7846,G__7847));
});
var G__8234__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7848 = a;
var G__7849 = b;
var G__7850 = c;
var G__7851 = d;
var G__7852 = e;
var G__7853 = f;
var G__7854 = g;
var G__7855 = h;
var G__7856 = i;
var G__7857 = j;
var G__7858 = k;
var G__7859 = l;
var G__7860 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854,G__7855,G__7856,G__7857,G__7858,G__7859,G__7860) : self__.afn.call(null,G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854,G__7855,G__7856,G__7857,G__7858,G__7859,G__7860));
});
var G__8234__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7861 = a;
var G__7862 = b;
var G__7863 = c;
var G__7864 = d;
var G__7865 = e;
var G__7866 = f;
var G__7867 = g;
var G__7868 = h;
var G__7869 = i;
var G__7870 = j;
var G__7871 = k;
var G__7872 = l;
var G__7873 = m;
var G__7874 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7861,G__7862,G__7863,G__7864,G__7865,G__7866,G__7867,G__7868,G__7869,G__7870,G__7871,G__7872,G__7873,G__7874) : self__.afn.call(null,G__7861,G__7862,G__7863,G__7864,G__7865,G__7866,G__7867,G__7868,G__7869,G__7870,G__7871,G__7872,G__7873,G__7874));
});
var G__8234__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7875 = a;
var G__7876 = b;
var G__7877 = c;
var G__7878 = d;
var G__7879 = e;
var G__7880 = f;
var G__7881 = g;
var G__7882 = h;
var G__7883 = i;
var G__7884 = j;
var G__7885 = k;
var G__7886 = l;
var G__7887 = m;
var G__7888 = n;
var G__7889 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7875,G__7876,G__7877,G__7878,G__7879,G__7880,G__7881,G__7882,G__7883,G__7884,G__7885,G__7886,G__7887,G__7888,G__7889) : self__.afn.call(null,G__7875,G__7876,G__7877,G__7878,G__7879,G__7880,G__7881,G__7882,G__7883,G__7884,G__7885,G__7886,G__7887,G__7888,G__7889));
});
var G__8234__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7890 = a;
var G__7891 = b;
var G__7892 = c;
var G__7893 = d;
var G__7894 = e;
var G__7895 = f;
var G__7896 = g;
var G__7897 = h;
var G__7898 = i;
var G__7899 = j;
var G__7900 = k;
var G__7901 = l;
var G__7902 = m;
var G__7903 = n;
var G__7904 = o;
var G__7905 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7890,G__7891,G__7892,G__7893,G__7894,G__7895,G__7896,G__7897,G__7898,G__7899,G__7900,G__7901,G__7902,G__7903,G__7904,G__7905) : self__.afn.call(null,G__7890,G__7891,G__7892,G__7893,G__7894,G__7895,G__7896,G__7897,G__7898,G__7899,G__7900,G__7901,G__7902,G__7903,G__7904,G__7905));
});
var G__8234__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7906 = a;
var G__7907 = b;
var G__7908 = c;
var G__7909 = d;
var G__7910 = e;
var G__7911 = f;
var G__7912 = g;
var G__7913 = h;
var G__7914 = i;
var G__7915 = j;
var G__7916 = k;
var G__7917 = l;
var G__7918 = m;
var G__7919 = n;
var G__7920 = o;
var G__7921 = p;
var G__7922 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7906,G__7907,G__7908,G__7909,G__7910,G__7911,G__7912,G__7913,G__7914,G__7915,G__7916,G__7917,G__7918,G__7919,G__7920,G__7921,G__7922) : self__.afn.call(null,G__7906,G__7907,G__7908,G__7909,G__7910,G__7911,G__7912,G__7913,G__7914,G__7915,G__7916,G__7917,G__7918,G__7919,G__7920,G__7921,G__7922));
});
var G__8234__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7923 = a;
var G__7924 = b;
var G__7925 = c;
var G__7926 = d;
var G__7927 = e;
var G__7928 = f;
var G__7929 = g;
var G__7930 = h;
var G__7931 = i;
var G__7932 = j;
var G__7933 = k;
var G__7934 = l;
var G__7935 = m;
var G__7936 = n;
var G__7937 = o;
var G__7938 = p;
var G__7939 = q;
var G__7940 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7923,G__7924,G__7925,G__7926,G__7927,G__7928,G__7929,G__7930,G__7931,G__7932,G__7933,G__7934,G__7935,G__7936,G__7937,G__7938,G__7939,G__7940) : self__.afn.call(null,G__7923,G__7924,G__7925,G__7926,G__7927,G__7928,G__7929,G__7930,G__7931,G__7932,G__7933,G__7934,G__7935,G__7936,G__7937,G__7938,G__7939,G__7940));
});
var G__8234__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7941 = a;
var G__7942 = b;
var G__7943 = c;
var G__7944 = d;
var G__7945 = e;
var G__7946 = f;
var G__7947 = g;
var G__7948 = h;
var G__7949 = i;
var G__7950 = j;
var G__7951 = k;
var G__7952 = l;
var G__7953 = m;
var G__7954 = n;
var G__7955 = o;
var G__7956 = p;
var G__7957 = q;
var G__7958 = r;
var G__7959 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7941,G__7942,G__7943,G__7944,G__7945,G__7946,G__7947,G__7948,G__7949,G__7950,G__7951,G__7952,G__7953,G__7954,G__7955,G__7956,G__7957,G__7958,G__7959) : self__.afn.call(null,G__7941,G__7942,G__7943,G__7944,G__7945,G__7946,G__7947,G__7948,G__7949,G__7950,G__7951,G__7952,G__7953,G__7954,G__7955,G__7956,G__7957,G__7958,G__7959));
});
var G__8234__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7960 = a;
var G__7961 = b;
var G__7962 = c;
var G__7963 = d;
var G__7964 = e;
var G__7965 = f;
var G__7966 = g;
var G__7967 = h;
var G__7968 = i;
var G__7969 = j;
var G__7970 = k;
var G__7971 = l;
var G__7972 = m;
var G__7973 = n;
var G__7974 = o;
var G__7975 = p;
var G__7976 = q;
var G__7977 = r;
var G__7978 = s;
var G__7979 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7960,G__7961,G__7962,G__7963,G__7964,G__7965,G__7966,G__7967,G__7968,G__7969,G__7970,G__7971,G__7972,G__7973,G__7974,G__7975,G__7976,G__7977,G__7978,G__7979) : self__.afn.call(null,G__7960,G__7961,G__7962,G__7963,G__7964,G__7965,G__7966,G__7967,G__7968,G__7969,G__7970,G__7971,G__7972,G__7973,G__7974,G__7975,G__7976,G__7977,G__7978,G__7979));
});
var G__8234__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7980 = self__.afn;
var G__7981 = a;
var G__7982 = b;
var G__7983 = c;
var G__7984 = d;
var G__7985 = e;
var G__7986 = f;
var G__7987 = g;
var G__7988 = h;
var G__7989 = i;
var G__7990 = j;
var G__7991 = k;
var G__7992 = l;
var G__7993 = m;
var G__7994 = n;
var G__7995 = o;
var G__7996 = p;
var G__7997 = q;
var G__7998 = r;
var G__7999 = s;
var G__8000 = t;
var G__8001 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7980,G__7981,G__7982,G__7983,G__7984,G__7985,G__7986,G__7987,G__7988,G__7989,G__7990,G__7991,G__7992,G__7993,G__7994,G__7995,G__7996,G__7997,G__7998,G__7999,G__8000,G__8001) : cljs.core.apply.call(null,G__7980,G__7981,G__7982,G__7983,G__7984,G__7985,G__7986,G__7987,G__7988,G__7989,G__7990,G__7991,G__7992,G__7993,G__7994,G__7995,G__7996,G__7997,G__7998,G__7999,G__8000,G__8001));
});
G__8234 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__8234__1.call(this,self__);
case 2:
return G__8234__2.call(this,self__,a);
case 3:
return G__8234__3.call(this,self__,a,b);
case 4:
return G__8234__4.call(this,self__,a,b,c);
case 5:
return G__8234__5.call(this,self__,a,b,c,d);
case 6:
return G__8234__6.call(this,self__,a,b,c,d,e);
case 7:
return G__8234__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__8234__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__8234__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__8234__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__8234__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__8234__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__8234__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__8234__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__8234__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__8234__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__8234__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__8234__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__8234__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__8234__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__8234__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__8234__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8234.cljs$core$IFn$_invoke$arity$1 = G__8234__1;
G__8234.cljs$core$IFn$_invoke$arity$2 = G__8234__2;
G__8234.cljs$core$IFn$_invoke$arity$3 = G__8234__3;
G__8234.cljs$core$IFn$_invoke$arity$4 = G__8234__4;
G__8234.cljs$core$IFn$_invoke$arity$5 = G__8234__5;
G__8234.cljs$core$IFn$_invoke$arity$6 = G__8234__6;
G__8234.cljs$core$IFn$_invoke$arity$7 = G__8234__7;
G__8234.cljs$core$IFn$_invoke$arity$8 = G__8234__8;
G__8234.cljs$core$IFn$_invoke$arity$9 = G__8234__9;
G__8234.cljs$core$IFn$_invoke$arity$10 = G__8234__10;
G__8234.cljs$core$IFn$_invoke$arity$11 = G__8234__11;
G__8234.cljs$core$IFn$_invoke$arity$12 = G__8234__12;
G__8234.cljs$core$IFn$_invoke$arity$13 = G__8234__13;
G__8234.cljs$core$IFn$_invoke$arity$14 = G__8234__14;
G__8234.cljs$core$IFn$_invoke$arity$15 = G__8234__15;
G__8234.cljs$core$IFn$_invoke$arity$16 = G__8234__16;
G__8234.cljs$core$IFn$_invoke$arity$17 = G__8234__17;
G__8234.cljs$core$IFn$_invoke$arity$18 = G__8234__18;
G__8234.cljs$core$IFn$_invoke$arity$19 = G__8234__19;
G__8234.cljs$core$IFn$_invoke$arity$20 = G__8234__20;
G__8234.cljs$core$IFn$_invoke$arity$21 = G__8234__21;
G__8234.cljs$core$IFn$_invoke$arity$22 = G__8234__22;
return G__8234;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args7769){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7769)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__8002 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__8002) : self__.afn.call(null,G__8002));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__8003 = a;
var G__8004 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__8003,G__8004) : self__.afn.call(null,G__8003,G__8004));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__8005 = a;
var G__8006 = b;
var G__8007 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__8005,G__8006,G__8007) : self__.afn.call(null,G__8005,G__8006,G__8007));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__8008 = a;
var G__8009 = b;
var G__8010 = c;
var G__8011 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__8008,G__8009,G__8010,G__8011) : self__.afn.call(null,G__8008,G__8009,G__8010,G__8011));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__8012 = a;
var G__8013 = b;
var G__8014 = c;
var G__8015 = d;
var G__8016 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__8012,G__8013,G__8014,G__8015,G__8016) : self__.afn.call(null,G__8012,G__8013,G__8014,G__8015,G__8016));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__8017 = a;
var G__8018 = b;
var G__8019 = c;
var G__8020 = d;
var G__8021 = e;
var G__8022 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__8017,G__8018,G__8019,G__8020,G__8021,G__8022) : self__.afn.call(null,G__8017,G__8018,G__8019,G__8020,G__8021,G__8022));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__8023 = a;
var G__8024 = b;
var G__8025 = c;
var G__8026 = d;
var G__8027 = e;
var G__8028 = f;
var G__8029 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__8023,G__8024,G__8025,G__8026,G__8027,G__8028,G__8029) : self__.afn.call(null,G__8023,G__8024,G__8025,G__8026,G__8027,G__8028,G__8029));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__8030 = a;
var G__8031 = b;
var G__8032 = c;
var G__8033 = d;
var G__8034 = e;
var G__8035 = f;
var G__8036 = g;
var G__8037 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__8030,G__8031,G__8032,G__8033,G__8034,G__8035,G__8036,G__8037) : self__.afn.call(null,G__8030,G__8031,G__8032,G__8033,G__8034,G__8035,G__8036,G__8037));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__8038 = a;
var G__8039 = b;
var G__8040 = c;
var G__8041 = d;
var G__8042 = e;
var G__8043 = f;
var G__8044 = g;
var G__8045 = h;
var G__8046 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__8038,G__8039,G__8040,G__8041,G__8042,G__8043,G__8044,G__8045,G__8046) : self__.afn.call(null,G__8038,G__8039,G__8040,G__8041,G__8042,G__8043,G__8044,G__8045,G__8046));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__8047 = a;
var G__8048 = b;
var G__8049 = c;
var G__8050 = d;
var G__8051 = e;
var G__8052 = f;
var G__8053 = g;
var G__8054 = h;
var G__8055 = i;
var G__8056 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053,G__8054,G__8055,G__8056) : self__.afn.call(null,G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053,G__8054,G__8055,G__8056));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__8057 = a;
var G__8058 = b;
var G__8059 = c;
var G__8060 = d;
var G__8061 = e;
var G__8062 = f;
var G__8063 = g;
var G__8064 = h;
var G__8065 = i;
var G__8066 = j;
var G__8067 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__8057,G__8058,G__8059,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066,G__8067) : self__.afn.call(null,G__8057,G__8058,G__8059,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066,G__8067));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__8068 = a;
var G__8069 = b;
var G__8070 = c;
var G__8071 = d;
var G__8072 = e;
var G__8073 = f;
var G__8074 = g;
var G__8075 = h;
var G__8076 = i;
var G__8077 = j;
var G__8078 = k;
var G__8079 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__8068,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079) : self__.afn.call(null,G__8068,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__8080 = a;
var G__8081 = b;
var G__8082 = c;
var G__8083 = d;
var G__8084 = e;
var G__8085 = f;
var G__8086 = g;
var G__8087 = h;
var G__8088 = i;
var G__8089 = j;
var G__8090 = k;
var G__8091 = l;
var G__8092 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__8080,G__8081,G__8082,G__8083,G__8084,G__8085,G__8086,G__8087,G__8088,G__8089,G__8090,G__8091,G__8092) : self__.afn.call(null,G__8080,G__8081,G__8082,G__8083,G__8084,G__8085,G__8086,G__8087,G__8088,G__8089,G__8090,G__8091,G__8092));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__8093 = a;
var G__8094 = b;
var G__8095 = c;
var G__8096 = d;
var G__8097 = e;
var G__8098 = f;
var G__8099 = g;
var G__8100 = h;
var G__8101 = i;
var G__8102 = j;
var G__8103 = k;
var G__8104 = l;
var G__8105 = m;
var G__8106 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__8093,G__8094,G__8095,G__8096,G__8097,G__8098,G__8099,G__8100,G__8101,G__8102,G__8103,G__8104,G__8105,G__8106) : self__.afn.call(null,G__8093,G__8094,G__8095,G__8096,G__8097,G__8098,G__8099,G__8100,G__8101,G__8102,G__8103,G__8104,G__8105,G__8106));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__8107 = a;
var G__8108 = b;
var G__8109 = c;
var G__8110 = d;
var G__8111 = e;
var G__8112 = f;
var G__8113 = g;
var G__8114 = h;
var G__8115 = i;
var G__8116 = j;
var G__8117 = k;
var G__8118 = l;
var G__8119 = m;
var G__8120 = n;
var G__8121 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__8107,G__8108,G__8109,G__8110,G__8111,G__8112,G__8113,G__8114,G__8115,G__8116,G__8117,G__8118,G__8119,G__8120,G__8121) : self__.afn.call(null,G__8107,G__8108,G__8109,G__8110,G__8111,G__8112,G__8113,G__8114,G__8115,G__8116,G__8117,G__8118,G__8119,G__8120,G__8121));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__8122 = a;
var G__8123 = b;
var G__8124 = c;
var G__8125 = d;
var G__8126 = e;
var G__8127 = f;
var G__8128 = g;
var G__8129 = h;
var G__8130 = i;
var G__8131 = j;
var G__8132 = k;
var G__8133 = l;
var G__8134 = m;
var G__8135 = n;
var G__8136 = o;
var G__8137 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__8122,G__8123,G__8124,G__8125,G__8126,G__8127,G__8128,G__8129,G__8130,G__8131,G__8132,G__8133,G__8134,G__8135,G__8136,G__8137) : self__.afn.call(null,G__8122,G__8123,G__8124,G__8125,G__8126,G__8127,G__8128,G__8129,G__8130,G__8131,G__8132,G__8133,G__8134,G__8135,G__8136,G__8137));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__8138 = a;
var G__8139 = b;
var G__8140 = c;
var G__8141 = d;
var G__8142 = e;
var G__8143 = f;
var G__8144 = g;
var G__8145 = h;
var G__8146 = i;
var G__8147 = j;
var G__8148 = k;
var G__8149 = l;
var G__8150 = m;
var G__8151 = n;
var G__8152 = o;
var G__8153 = p;
var G__8154 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__8138,G__8139,G__8140,G__8141,G__8142,G__8143,G__8144,G__8145,G__8146,G__8147,G__8148,G__8149,G__8150,G__8151,G__8152,G__8153,G__8154) : self__.afn.call(null,G__8138,G__8139,G__8140,G__8141,G__8142,G__8143,G__8144,G__8145,G__8146,G__8147,G__8148,G__8149,G__8150,G__8151,G__8152,G__8153,G__8154));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__8155 = a;
var G__8156 = b;
var G__8157 = c;
var G__8158 = d;
var G__8159 = e;
var G__8160 = f;
var G__8161 = g;
var G__8162 = h;
var G__8163 = i;
var G__8164 = j;
var G__8165 = k;
var G__8166 = l;
var G__8167 = m;
var G__8168 = n;
var G__8169 = o;
var G__8170 = p;
var G__8171 = q;
var G__8172 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__8155,G__8156,G__8157,G__8158,G__8159,G__8160,G__8161,G__8162,G__8163,G__8164,G__8165,G__8166,G__8167,G__8168,G__8169,G__8170,G__8171,G__8172) : self__.afn.call(null,G__8155,G__8156,G__8157,G__8158,G__8159,G__8160,G__8161,G__8162,G__8163,G__8164,G__8165,G__8166,G__8167,G__8168,G__8169,G__8170,G__8171,G__8172));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__8173 = a;
var G__8174 = b;
var G__8175 = c;
var G__8176 = d;
var G__8177 = e;
var G__8178 = f;
var G__8179 = g;
var G__8180 = h;
var G__8181 = i;
var G__8182 = j;
var G__8183 = k;
var G__8184 = l;
var G__8185 = m;
var G__8186 = n;
var G__8187 = o;
var G__8188 = p;
var G__8189 = q;
var G__8190 = r;
var G__8191 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__8173,G__8174,G__8175,G__8176,G__8177,G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184,G__8185,G__8186,G__8187,G__8188,G__8189,G__8190,G__8191) : self__.afn.call(null,G__8173,G__8174,G__8175,G__8176,G__8177,G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184,G__8185,G__8186,G__8187,G__8188,G__8189,G__8190,G__8191));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__8192 = a;
var G__8193 = b;
var G__8194 = c;
var G__8195 = d;
var G__8196 = e;
var G__8197 = f;
var G__8198 = g;
var G__8199 = h;
var G__8200 = i;
var G__8201 = j;
var G__8202 = k;
var G__8203 = l;
var G__8204 = m;
var G__8205 = n;
var G__8206 = o;
var G__8207 = p;
var G__8208 = q;
var G__8209 = r;
var G__8210 = s;
var G__8211 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__8192,G__8193,G__8194,G__8195,G__8196,G__8197,G__8198,G__8199,G__8200,G__8201,G__8202,G__8203,G__8204,G__8205,G__8206,G__8207,G__8208,G__8209,G__8210,G__8211) : self__.afn.call(null,G__8192,G__8193,G__8194,G__8195,G__8196,G__8197,G__8198,G__8199,G__8200,G__8201,G__8202,G__8203,G__8204,G__8205,G__8206,G__8207,G__8208,G__8209,G__8210,G__8211));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__8212 = self__.afn;
var G__8213 = a;
var G__8214 = b;
var G__8215 = c;
var G__8216 = d;
var G__8217 = e;
var G__8218 = f;
var G__8219 = g;
var G__8220 = h;
var G__8221 = i;
var G__8222 = j;
var G__8223 = k;
var G__8224 = l;
var G__8225 = m;
var G__8226 = n;
var G__8227 = o;
var G__8228 = p;
var G__8229 = q;
var G__8230 = r;
var G__8231 = s;
var G__8232 = t;
var G__8233 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__8212,G__8213,G__8214,G__8215,G__8216,G__8217,G__8218,G__8219,G__8220,G__8221,G__8222,G__8223,G__8224,G__8225,G__8226,G__8227,G__8228,G__8229,G__8230,G__8231,G__8232,G__8233) : cljs.core.apply.call(null,G__8212,G__8213,G__8214,G__8215,G__8216,G__8217,G__8218,G__8219,G__8220,G__8221,G__8222,G__8223,G__8224,G__8225,G__8226,G__8227,G__8228,G__8229,G__8230,G__8231,G__8232,G__8233));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function cljs$core$__GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function cljs$core$with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__8238 = o;
if(G__8238){
var bit__4229__auto__ = (G__8238.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4229__auto__) || (G__8238.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__8238.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8238);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__8238);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function cljs$core$meta(o){
if((function (){var and__3927__auto__ = !((o == null));
if(and__3927__auto__){
var G__8242 = o;
if(G__8242){
var bit__4229__auto__ = (G__8242.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4229__auto__) || (G__8242.cljs$core$IMeta$)){
return true;
} else {
if((!G__8242.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8242);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__8242);
}
} else {
return and__3927__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function cljs$core$peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function cljs$core$pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var cljs$core$disj = null;
var cljs$core$disj__1 = (function (coll){
return coll;
});
var cljs$core$disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var cljs$core$disj__3 = (function() { 
var G__8245__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__8246 = ret;
var G__8247 = cljs.core.first(ks);
var G__8248 = cljs.core.next(ks);
coll = G__8246;
k = G__8247;
ks = G__8248;
continue;
} else {
return ret;
}
}
break;
}
};
var G__8245 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8249__i = 0, G__8249__a = new Array(arguments.length -  2);
while (G__8249__i < G__8249__a.length) {G__8249__a[G__8249__i] = arguments[G__8249__i + 2]; ++G__8249__i;}
  ks = new cljs.core.IndexedSeq(G__8249__a,0);
} 
return G__8245__delegate.call(this,coll,k,ks);};
G__8245.cljs$lang$maxFixedArity = 2;
G__8245.cljs$lang$applyTo = (function (arglist__8250){
var coll = cljs.core.first(arglist__8250);
arglist__8250 = cljs.core.next(arglist__8250);
var k = cljs.core.first(arglist__8250);
var ks = cljs.core.rest(arglist__8250);
return G__8245__delegate(coll,k,ks);
});
G__8245.cljs$core$IFn$_invoke$arity$variadic = G__8245__delegate;
return G__8245;
})()
;
cljs$core$disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$disj__1.call(this,coll);
case 2:
return cljs$core$disj__2.call(this,coll,k);
default:
var G__8251 = null;
if (arguments.length > 2) {
var G__8252__i = 0, G__8252__a = new Array(arguments.length -  2);
while (G__8252__i < G__8252__a.length) {G__8252__a[G__8252__i] = arguments[G__8252__i + 2]; ++G__8252__i;}
G__8251 = new cljs.core.IndexedSeq(G__8252__a,0);
}
return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__8251);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj.cljs$lang$maxFixedArity = 2;
cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function cljs$core$empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function cljs$core$coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8254 = x;
if(G__8254){
var bit__4229__auto__ = (G__8254.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4229__auto__) || (G__8254.cljs$core$ICollection$)){
return true;
} else {
if((!G__8254.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8254);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__8254);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function cljs$core$set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8256 = x;
if(G__8256){
var bit__4229__auto__ = (G__8256.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4229__auto__) || (G__8256.cljs$core$ISet$)){
return true;
} else {
if((!G__8256.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8256);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__8256);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function cljs$core$associative_QMARK_(x){
var G__8258 = x;
if(G__8258){
var bit__4229__auto__ = (G__8258.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4229__auto__) || (G__8258.cljs$core$IAssociative$)){
return true;
} else {
if((!G__8258.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8258);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__8258);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function cljs$core$sequential_QMARK_(x){
var G__8260 = x;
if(G__8260){
var bit__4229__auto__ = (G__8260.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4229__auto__) || (G__8260.cljs$core$ISequential$)){
return true;
} else {
if((!G__8260.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8260);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__8260);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function cljs$core$sorted_QMARK_(x){
var G__8262 = x;
if(G__8262){
var bit__4229__auto__ = (G__8262.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4229__auto__) || (G__8262.cljs$core$ISorted$)){
return true;
} else {
if((!G__8262.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8262);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__8262);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function cljs$core$reduceable_QMARK_(x){
var G__8264 = x;
if(G__8264){
var bit__4229__auto__ = (G__8264.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4229__auto__) || (G__8264.cljs$core$IReduce$)){
return true;
} else {
if((!G__8264.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8264);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__8264);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function cljs$core$map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__8266 = x;
if(G__8266){
var bit__4229__auto__ = (G__8266.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4229__auto__) || (G__8266.cljs$core$IMap$)){
return true;
} else {
if((!G__8266.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8266);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__8266);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function cljs$core$vector_QMARK_(x){
var G__8268 = x;
if(G__8268){
var bit__4229__auto__ = (G__8268.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4229__auto__) || (G__8268.cljs$core$IVector$)){
return true;
} else {
if((!G__8268.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8268);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__8268);
}
});

/**
 * Return true if x is satisfies IChunkedSeq.
 */
cljs.core.chunked_seq_QMARK_ = (function cljs$core$chunked_seq_QMARK_(x){
var G__8270 = x;
if(G__8270){
var bit__4226__auto__ = (G__8270.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4226__auto__) || (G__8270.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * Create JavaSript object from an even number arguments representing
 * interleaved keys and values.
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var cljs$core$js_obj = null;
var cljs$core$js_obj__0 = (function (){
var obj8276 = {};
return obj8276;
});
var cljs$core$js_obj__1 = (function() { 
var G__8279__delegate = function (keyvals){
var G__8277 = goog.object.create;
var G__8278 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__8277,G__8278) : cljs.core.apply.call(null,G__8277,G__8278));
};
var G__8279 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__8280__i = 0, G__8280__a = new Array(arguments.length -  0);
while (G__8280__i < G__8280__a.length) {G__8280__a[G__8280__i] = arguments[G__8280__i + 0]; ++G__8280__i;}
  keyvals = new cljs.core.IndexedSeq(G__8280__a,0);
} 
return G__8279__delegate.call(this,keyvals);};
G__8279.cljs$lang$maxFixedArity = 0;
G__8279.cljs$lang$applyTo = (function (arglist__8281){
var keyvals = cljs.core.seq(arglist__8281);
return G__8279__delegate(keyvals);
});
G__8279.cljs$core$IFn$_invoke$arity$variadic = G__8279__delegate;
return G__8279;
})()
;
cljs$core$js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return cljs$core$js_obj__0.call(this);
default:
var G__8282 = null;
if (arguments.length > 0) {
var G__8283__i = 0, G__8283__a = new Array(arguments.length -  0);
while (G__8283__i < G__8283__a.length) {G__8283__a[G__8283__i] = arguments[G__8283__i + 0]; ++G__8283__i;}
G__8282 = new cljs.core.IndexedSeq(G__8283__a,0);
}
return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__8282);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js_obj;
})()
;
/**
 * Return the JavaScript keys for an object.
 */
cljs.core.js_keys = (function cljs$core$js_keys(obj){
var keys = [];
var G__8286_8288 = obj;
var G__8287_8289 = ((function (G__8286_8288,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__8286_8288,keys))
;
goog.object.forEach(G__8286_8288,G__8287_8289);

return keys;
});
/**
 * Delete a property from a JavaScript object.
 */
cljs.core.js_delete = (function cljs$core$js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function cljs$core$array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8290 = (i__$1 + (1));
var G__8291 = (j__$1 + (1));
var G__8292 = (len__$1 - (1));
i__$1 = G__8290;
j__$1 = G__8291;
len__$1 = G__8292;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function cljs$core$array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__8293 = (i__$1 - (1));
var G__8294 = (j__$1 - (1));
var G__8295 = (len__$1 - (1));
i__$1 = G__8293;
j__$1 = G__8294;
len__$1 = G__8295;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj8297 = {};
return obj8297;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function cljs$core$false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function cljs$core$true_QMARK_(x){
return x === true;
});
/**
 * Returns true if x identical to the JavaScript undefined value.
 */
cljs.core.undefined_QMARK_ = (function cljs$core$undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function cljs$core$seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__8299 = s;
if(G__8299){
var bit__4229__auto__ = (G__8299.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4229__auto__) || (G__8299.cljs$core$ISeq$)){
return true;
} else {
if((!G__8299.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8299);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__8299);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function cljs$core$seqable_QMARK_(s){
var G__8301 = s;
if(G__8301){
var bit__4229__auto__ = (G__8301.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4229__auto__) || (G__8301.cljs$core$ISeqable$)){
return true;
} else {
if((!G__8301.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8301);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__8301);
}
});
/**
 * Coerce to boolean
 */
cljs.core.boolean$ = (function cljs$core$boolean(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
/**
 * Returns true if f returns true for fn? or satisfies IFn.
 */
cljs.core.ifn_QMARK_ = (function cljs$core$ifn_QMARK_(f){
var or__3935__auto__ = cljs.core.fn_QMARK_(f);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var G__8305 = f;
if(G__8305){
var bit__4229__auto__ = (G__8305.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4229__auto__) || (G__8305.cljs$core$IFn$)){
return true;
} else {
if((!G__8305.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8305);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__8305);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function cljs$core$integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__8318 = n;
return isNaN(G__8318);
})())) && (!((n === Infinity))) && (((function (){var G__8319 = n;
return parseFloat(G__8319);
})() === (function (){var G__8320 = n;
var G__8321 = (10);
return parseInt(G__8320,G__8321);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function cljs$core$contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function cljs$core$find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var cljs$core$distinct_QMARK_ = null;
var cljs$core$distinct_QMARK___1 = (function (x){
return true;
});
var cljs$core$distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$distinct_QMARK___3 = (function() { 
var G__8322__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__8323 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__8324 = etc;
s = G__8323;
xs = G__8324;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__8322 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8325__i = 0, G__8325__a = new Array(arguments.length -  2);
while (G__8325__i < G__8325__a.length) {G__8325__a[G__8325__i] = arguments[G__8325__i + 2]; ++G__8325__i;}
  more = new cljs.core.IndexedSeq(G__8325__a,0);
} 
return G__8322__delegate.call(this,x,y,more);};
G__8322.cljs$lang$maxFixedArity = 2;
G__8322.cljs$lang$applyTo = (function (arglist__8326){
var x = cljs.core.first(arglist__8326);
arglist__8326 = cljs.core.next(arglist__8326);
var y = cljs.core.first(arglist__8326);
var more = cljs.core.rest(arglist__8326);
return G__8322__delegate(x,y,more);
});
G__8322.cljs$core$IFn$_invoke$arity$variadic = G__8322__delegate;
return G__8322;
})()
;
cljs$core$distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$distinct_QMARK___1.call(this,x);
case 2:
return cljs$core$distinct_QMARK___2.call(this,x,y);
default:
var G__8327 = null;
if (arguments.length > 2) {
var G__8328__i = 0, G__8328__a = new Array(arguments.length -  2);
while (G__8328__i < G__8328__a.length) {G__8328__a[G__8328__i] = arguments[G__8328__i + 2]; ++G__8328__i;}
G__8327 = new cljs.core.IndexedSeq(G__8328__a,0);
}
return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8327);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function cljs$core$compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__8332 = x;
if(G__8332){
var bit__4226__auto__ = (G__8332.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4226__auto__) || (G__8332.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__8333 = x;
var G__8334 = y;
return goog.array.defaultCompare(G__8333,G__8334);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var cljs$core$compare_indexed = null;
var cljs$core$compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var cljs$core$compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__8339 = xs;
var G__8340 = ys;
var G__8341 = len;
var G__8342 = (n + (1));
xs = G__8339;
ys = G__8340;
len = G__8341;
n = G__8342;
continue;
} else {
return d;
}
break;
}
});
cljs$core$compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return cljs$core$compare_indexed__2.call(this,xs,ys);
case 4:
return cljs$core$compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
return cljs$core$compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function cljs$core$fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__8347 = x;
var G__8348 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8347,G__8348) : f.call(null,G__8347,G__8348));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__8349 = y;
var G__8350 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8349,G__8350) : f.call(null,G__8349,G__8350));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var cljs$core$sort = null;
var cljs$core$sort__1 = (function (coll){
return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var cljs$core$sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__8356 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8356) : cljs.core.to_array.call(null,G__8356));
})();
var G__8357_8359 = a;
var G__8358_8360 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__8357_8359,G__8358_8360);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
cljs$core$sort = function(comp,coll){
switch(arguments.length){
case 1:
return cljs$core$sort__1.call(this,comp);
case 2:
return cljs$core$sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
return cljs$core$sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var cljs$core$sort_by = null;
var cljs$core$sort_by__2 = (function (keyfn,coll){
return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var cljs$core$sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__8366 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8366) : keyfn.call(null,G__8366));
})(),(function (){var G__8367 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__8367) : keyfn.call(null,G__8367));
})());
}),coll);
});
cljs$core$sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return cljs$core$sort_by__2.call(this,keyfn,comp);
case 3:
return cljs$core$sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
return cljs$core$sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var cljs$core$seq_reduce = null;
var cljs$core$seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__8373 = f;
var G__8374 = cljs.core.first(s);
var G__8375 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__8373,G__8374,G__8375) : cljs.core.reduce.call(null,G__8373,G__8374,G__8375));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var cljs$core$seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__8376 = val__$1;
var G__8377 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8376,G__8377) : f.call(null,G__8376,G__8377));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__8378 = nval;
var G__8379 = cljs.core.next(coll__$1);
val__$1 = G__8378;
coll__$1 = G__8379;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$seq_reduce__2.call(this,f,val);
case 3:
return cljs$core$seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
return cljs$core$seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function cljs$core$shuffle(coll){
var a = (function (){var G__8383 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__8383) : cljs.core.to_array.call(null,G__8383));
})();
var G__8384_8386 = a;
goog.array.shuffle(G__8384_8386);

var G__8385 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__8385) : cljs.core.vec.call(null,G__8385));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var cljs$core$reduce = null;
var cljs$core$reduce__2 = (function (f,coll){
if((function (){var G__8389 = coll;
if(G__8389){
var bit__4226__auto__ = (G__8389.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4226__auto__) || (G__8389.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var cljs$core$reduce__3 = (function (f,val,coll){
if((function (){var G__8390 = coll;
if(G__8390){
var bit__4226__auto__ = (G__8390.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4226__auto__) || (G__8390.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
cljs$core$reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$reduce__2.call(this,f,val);
case 3:
return cljs$core$reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
return cljs$core$reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function cljs$core$reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
/**
 * Returns its argument.
 */
cljs.core.identity = (function cljs$core$identity(x){
return x;
});
/**
 * Takes a reducing function f of 2 args and returns a fn suitable for
 * transduce by adding an arity-1 signature that calls cf (default -
 * identity) on the result argument.
 */
cljs.core.completing = (function() {
var cljs$core$completing = null;
var cljs$core$completing__1 = (function (f){
return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var cljs$core$completing__2 = (function (f,cf){
return (function() {
var G__8399 = null;
var G__8399__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__8399__1 = (function (x){
var G__8396 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__8396) : cf.call(null,G__8396));
});
var G__8399__2 = (function (x,y){
var G__8397 = x;
var G__8398 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8397,G__8398) : f.call(null,G__8397,G__8398));
});
G__8399 = function(x,y){
switch(arguments.length){
case 0:
return G__8399__0.call(this);
case 1:
return G__8399__1.call(this,x);
case 2:
return G__8399__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8399.cljs$core$IFn$_invoke$arity$0 = G__8399__0;
G__8399.cljs$core$IFn$_invoke$arity$1 = G__8399__1;
G__8399.cljs$core$IFn$_invoke$arity$2 = G__8399__2;
return G__8399;
})()
});
cljs$core$completing = function(f,cf){
switch(arguments.length){
case 1:
return cljs$core$completing__1.call(this,f);
case 2:
return cljs$core$completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
return cljs$core$completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var cljs$core$transduce = null;
var cljs$core$transduce__3 = (function (xform,f,coll){
return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var cljs$core$transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__8406 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8406) : xform.call(null,G__8406));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__8407 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__8407) : f__$1.call(null,G__8407));
});
cljs$core$transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return cljs$core$transduce__3.call(this,xform,f,init);
case 4:
return cljs$core$transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
return cljs$core$transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var cljs$core$_PLUS_ = null;
var cljs$core$_PLUS___0 = (function (){
return (0);
});
var cljs$core$_PLUS___1 = (function (x){
return x;
});
var cljs$core$_PLUS___2 = (function (x,y){
return (x + y);
});
var cljs$core$_PLUS___3 = (function() { 
var G__8408__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_,(x + y),more);
};
var G__8408 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8409__i = 0, G__8409__a = new Array(arguments.length -  2);
while (G__8409__i < G__8409__a.length) {G__8409__a[G__8409__i] = arguments[G__8409__i + 2]; ++G__8409__i;}
  more = new cljs.core.IndexedSeq(G__8409__a,0);
} 
return G__8408__delegate.call(this,x,y,more);};
G__8408.cljs$lang$maxFixedArity = 2;
G__8408.cljs$lang$applyTo = (function (arglist__8410){
var x = cljs.core.first(arglist__8410);
arglist__8410 = cljs.core.next(arglist__8410);
var y = cljs.core.first(arglist__8410);
var more = cljs.core.rest(arglist__8410);
return G__8408__delegate(x,y,more);
});
G__8408.cljs$core$IFn$_invoke$arity$variadic = G__8408__delegate;
return G__8408;
})()
;
cljs$core$_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_PLUS___0.call(this);
case 1:
return cljs$core$_PLUS___1.call(this,x);
case 2:
return cljs$core$_PLUS___2.call(this,x,y);
default:
var G__8411 = null;
if (arguments.length > 2) {
var G__8412__i = 0, G__8412__a = new Array(arguments.length -  2);
while (G__8412__i < G__8412__a.length) {G__8412__a[G__8412__i] = arguments[G__8412__i + 2]; ++G__8412__i;}
G__8411 = new cljs.core.IndexedSeq(G__8412__a,0);
}
return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8411);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var cljs$core$_ = null;
var cljs$core$___1 = (function (x){
return (- x);
});
var cljs$core$___2 = (function (x,y){
return (x - y);
});
var cljs$core$___3 = (function() { 
var G__8413__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_,(x - y),more);
};
var G__8413 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8414__i = 0, G__8414__a = new Array(arguments.length -  2);
while (G__8414__i < G__8414__a.length) {G__8414__a[G__8414__i] = arguments[G__8414__i + 2]; ++G__8414__i;}
  more = new cljs.core.IndexedSeq(G__8414__a,0);
} 
return G__8413__delegate.call(this,x,y,more);};
G__8413.cljs$lang$maxFixedArity = 2;
G__8413.cljs$lang$applyTo = (function (arglist__8415){
var x = cljs.core.first(arglist__8415);
arglist__8415 = cljs.core.next(arglist__8415);
var y = cljs.core.first(arglist__8415);
var more = cljs.core.rest(arglist__8415);
return G__8413__delegate(x,y,more);
});
G__8413.cljs$core$IFn$_invoke$arity$variadic = G__8413__delegate;
return G__8413;
})()
;
cljs$core$_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$___1.call(this,x);
case 2:
return cljs$core$___2.call(this,x,y);
default:
var G__8416 = null;
if (arguments.length > 2) {
var G__8417__i = 0, G__8417__a = new Array(arguments.length -  2);
while (G__8417__i < G__8417__a.length) {G__8417__a[G__8417__i] = arguments[G__8417__i + 2]; ++G__8417__i;}
G__8416 = new cljs.core.IndexedSeq(G__8417__a,0);
}
return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8416);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_.cljs$lang$maxFixedArity = 2;
cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var cljs$core$_STAR_ = null;
var cljs$core$_STAR___0 = (function (){
return (1);
});
var cljs$core$_STAR___1 = (function (x){
return x;
});
var cljs$core$_STAR___2 = (function (x,y){
return (x * y);
});
var cljs$core$_STAR___3 = (function() { 
var G__8418__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_,(x * y),more);
};
var G__8418 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8419__i = 0, G__8419__a = new Array(arguments.length -  2);
while (G__8419__i < G__8419__a.length) {G__8419__a[G__8419__i] = arguments[G__8419__i + 2]; ++G__8419__i;}
  more = new cljs.core.IndexedSeq(G__8419__a,0);
} 
return G__8418__delegate.call(this,x,y,more);};
G__8418.cljs$lang$maxFixedArity = 2;
G__8418.cljs$lang$applyTo = (function (arglist__8420){
var x = cljs.core.first(arglist__8420);
arglist__8420 = cljs.core.next(arglist__8420);
var y = cljs.core.first(arglist__8420);
var more = cljs.core.rest(arglist__8420);
return G__8418__delegate(x,y,more);
});
G__8418.cljs$core$IFn$_invoke$arity$variadic = G__8418__delegate;
return G__8418;
})()
;
cljs$core$_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_STAR___0.call(this);
case 1:
return cljs$core$_STAR___1.call(this,x);
case 2:
return cljs$core$_STAR___2.call(this,x,y);
default:
var G__8421 = null;
if (arguments.length > 2) {
var G__8422__i = 0, G__8422__a = new Array(arguments.length -  2);
while (G__8422__i < G__8422__a.length) {G__8422__a[G__8422__i] = arguments[G__8422__i + 2]; ++G__8422__i;}
G__8421 = new cljs.core.IndexedSeq(G__8422__a,0);
}
return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8421);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var cljs$core$_SLASH_ = null;
var cljs$core$_SLASH___1 = (function (x){
return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$_SLASH___2 = (function (x,y){
return (x / y);
});
var cljs$core$_SLASH___3 = (function() { 
var G__8427__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_,cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8427 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8428__i = 0, G__8428__a = new Array(arguments.length -  2);
while (G__8428__i < G__8428__a.length) {G__8428__a[G__8428__i] = arguments[G__8428__i + 2]; ++G__8428__i;}
  more = new cljs.core.IndexedSeq(G__8428__a,0);
} 
return G__8427__delegate.call(this,x,y,more);};
G__8427.cljs$lang$maxFixedArity = 2;
G__8427.cljs$lang$applyTo = (function (arglist__8429){
var x = cljs.core.first(arglist__8429);
arglist__8429 = cljs.core.next(arglist__8429);
var y = cljs.core.first(arglist__8429);
var more = cljs.core.rest(arglist__8429);
return G__8427__delegate(x,y,more);
});
G__8427.cljs$core$IFn$_invoke$arity$variadic = G__8427__delegate;
return G__8427;
})()
;
cljs$core$_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_SLASH___1.call(this,x);
case 2:
return cljs$core$_SLASH___2.call(this,x,y);
default:
var G__8430 = null;
if (arguments.length > 2) {
var G__8431__i = 0, G__8431__a = new Array(arguments.length -  2);
while (G__8431__i < G__8431__a.length) {G__8431__a[G__8431__i] = arguments[G__8431__i + 2]; ++G__8431__i;}
G__8430 = new cljs.core.IndexedSeq(G__8431__a,0);
}
return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8430);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var cljs$core$_LT_ = null;
var cljs$core$_LT___1 = (function (x){
return true;
});
var cljs$core$_LT___2 = (function (x,y){
return (x < y);
});
var cljs$core$_LT___3 = (function() { 
var G__8432__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__8433 = y;
var G__8434 = cljs.core.first(more);
var G__8435 = cljs.core.next(more);
x = G__8433;
y = G__8434;
more = G__8435;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8432 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8436__i = 0, G__8436__a = new Array(arguments.length -  2);
while (G__8436__i < G__8436__a.length) {G__8436__a[G__8436__i] = arguments[G__8436__i + 2]; ++G__8436__i;}
  more = new cljs.core.IndexedSeq(G__8436__a,0);
} 
return G__8432__delegate.call(this,x,y,more);};
G__8432.cljs$lang$maxFixedArity = 2;
G__8432.cljs$lang$applyTo = (function (arglist__8437){
var x = cljs.core.first(arglist__8437);
arglist__8437 = cljs.core.next(arglist__8437);
var y = cljs.core.first(arglist__8437);
var more = cljs.core.rest(arglist__8437);
return G__8432__delegate(x,y,more);
});
G__8432.cljs$core$IFn$_invoke$arity$variadic = G__8432__delegate;
return G__8432;
})()
;
cljs$core$_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT___1.call(this,x);
case 2:
return cljs$core$_LT___2.call(this,x,y);
default:
var G__8438 = null;
if (arguments.length > 2) {
var G__8439__i = 0, G__8439__a = new Array(arguments.length -  2);
while (G__8439__i < G__8439__a.length) {G__8439__a[G__8439__i] = arguments[G__8439__i + 2]; ++G__8439__i;}
G__8438 = new cljs.core.IndexedSeq(G__8439__a,0);
}
return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8438);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var cljs$core$_LT__EQ_ = null;
var cljs$core$_LT__EQ___1 = (function (x){
return true;
});
var cljs$core$_LT__EQ___2 = (function (x,y){
return (x <= y);
});
var cljs$core$_LT__EQ___3 = (function() { 
var G__8440__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__8441 = y;
var G__8442 = cljs.core.first(more);
var G__8443 = cljs.core.next(more);
x = G__8441;
y = G__8442;
more = G__8443;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8440 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8444__i = 0, G__8444__a = new Array(arguments.length -  2);
while (G__8444__i < G__8444__a.length) {G__8444__a[G__8444__i] = arguments[G__8444__i + 2]; ++G__8444__i;}
  more = new cljs.core.IndexedSeq(G__8444__a,0);
} 
return G__8440__delegate.call(this,x,y,more);};
G__8440.cljs$lang$maxFixedArity = 2;
G__8440.cljs$lang$applyTo = (function (arglist__8445){
var x = cljs.core.first(arglist__8445);
arglist__8445 = cljs.core.next(arglist__8445);
var y = cljs.core.first(arglist__8445);
var more = cljs.core.rest(arglist__8445);
return G__8440__delegate(x,y,more);
});
G__8440.cljs$core$IFn$_invoke$arity$variadic = G__8440__delegate;
return G__8440;
})()
;
cljs$core$_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT__EQ___1.call(this,x);
case 2:
return cljs$core$_LT__EQ___2.call(this,x,y);
default:
var G__8446 = null;
if (arguments.length > 2) {
var G__8447__i = 0, G__8447__a = new Array(arguments.length -  2);
while (G__8447__i < G__8447__a.length) {G__8447__a[G__8447__i] = arguments[G__8447__i + 2]; ++G__8447__i;}
G__8446 = new cljs.core.IndexedSeq(G__8447__a,0);
}
return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8446);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var cljs$core$_GT_ = null;
var cljs$core$_GT___1 = (function (x){
return true;
});
var cljs$core$_GT___2 = (function (x,y){
return (x > y);
});
var cljs$core$_GT___3 = (function() { 
var G__8448__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__8449 = y;
var G__8450 = cljs.core.first(more);
var G__8451 = cljs.core.next(more);
x = G__8449;
y = G__8450;
more = G__8451;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8448 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8452__i = 0, G__8452__a = new Array(arguments.length -  2);
while (G__8452__i < G__8452__a.length) {G__8452__a[G__8452__i] = arguments[G__8452__i + 2]; ++G__8452__i;}
  more = new cljs.core.IndexedSeq(G__8452__a,0);
} 
return G__8448__delegate.call(this,x,y,more);};
G__8448.cljs$lang$maxFixedArity = 2;
G__8448.cljs$lang$applyTo = (function (arglist__8453){
var x = cljs.core.first(arglist__8453);
arglist__8453 = cljs.core.next(arglist__8453);
var y = cljs.core.first(arglist__8453);
var more = cljs.core.rest(arglist__8453);
return G__8448__delegate(x,y,more);
});
G__8448.cljs$core$IFn$_invoke$arity$variadic = G__8448__delegate;
return G__8448;
})()
;
cljs$core$_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT___1.call(this,x);
case 2:
return cljs$core$_GT___2.call(this,x,y);
default:
var G__8454 = null;
if (arguments.length > 2) {
var G__8455__i = 0, G__8455__a = new Array(arguments.length -  2);
while (G__8455__i < G__8455__a.length) {G__8455__a[G__8455__i] = arguments[G__8455__i + 2]; ++G__8455__i;}
G__8454 = new cljs.core.IndexedSeq(G__8455__a,0);
}
return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8454);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var cljs$core$_GT__EQ_ = null;
var cljs$core$_GT__EQ___1 = (function (x){
return true;
});
var cljs$core$_GT__EQ___2 = (function (x,y){
return (x >= y);
});
var cljs$core$_GT__EQ___3 = (function() { 
var G__8456__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__8457 = y;
var G__8458 = cljs.core.first(more);
var G__8459 = cljs.core.next(more);
x = G__8457;
y = G__8458;
more = G__8459;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8456 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8460__i = 0, G__8460__a = new Array(arguments.length -  2);
while (G__8460__i < G__8460__a.length) {G__8460__a[G__8460__i] = arguments[G__8460__i + 2]; ++G__8460__i;}
  more = new cljs.core.IndexedSeq(G__8460__a,0);
} 
return G__8456__delegate.call(this,x,y,more);};
G__8456.cljs$lang$maxFixedArity = 2;
G__8456.cljs$lang$applyTo = (function (arglist__8461){
var x = cljs.core.first(arglist__8461);
arglist__8461 = cljs.core.next(arglist__8461);
var y = cljs.core.first(arglist__8461);
var more = cljs.core.rest(arglist__8461);
return G__8456__delegate(x,y,more);
});
G__8456.cljs$core$IFn$_invoke$arity$variadic = G__8456__delegate;
return G__8456;
})()
;
cljs$core$_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT__EQ___1.call(this,x);
case 2:
return cljs$core$_GT__EQ___2.call(this,x,y);
default:
var G__8462 = null;
if (arguments.length > 2) {
var G__8463__i = 0, G__8463__a = new Array(arguments.length -  2);
while (G__8463__i < G__8463__a.length) {G__8463__a[G__8463__i] = arguments[G__8463__i + 2]; ++G__8463__i;}
G__8462 = new cljs.core.IndexedSeq(G__8463__a,0);
}
return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function cljs$core$dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var cljs$core$max = null;
var cljs$core$max__1 = (function (x){
return x;
});
var cljs$core$max__2 = (function (x,y){
var x__4003__auto__ = x;
var y__4004__auto__ = y;
return ((x__4003__auto__ > y__4004__auto__) ? x__4003__auto__ : y__4004__auto__);
});
var cljs$core$max__3 = (function() { 
var G__8464__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max,(function (){var x__4003__auto__ = x;
var y__4004__auto__ = y;
return ((x__4003__auto__ > y__4004__auto__) ? x__4003__auto__ : y__4004__auto__);
})(),more);
};
var G__8464 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8465__i = 0, G__8465__a = new Array(arguments.length -  2);
while (G__8465__i < G__8465__a.length) {G__8465__a[G__8465__i] = arguments[G__8465__i + 2]; ++G__8465__i;}
  more = new cljs.core.IndexedSeq(G__8465__a,0);
} 
return G__8464__delegate.call(this,x,y,more);};
G__8464.cljs$lang$maxFixedArity = 2;
G__8464.cljs$lang$applyTo = (function (arglist__8466){
var x = cljs.core.first(arglist__8466);
arglist__8466 = cljs.core.next(arglist__8466);
var y = cljs.core.first(arglist__8466);
var more = cljs.core.rest(arglist__8466);
return G__8464__delegate(x,y,more);
});
G__8464.cljs$core$IFn$_invoke$arity$variadic = G__8464__delegate;
return G__8464;
})()
;
cljs$core$max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$max__1.call(this,x);
case 2:
return cljs$core$max__2.call(this,x,y);
default:
var G__8467 = null;
if (arguments.length > 2) {
var G__8468__i = 0, G__8468__a = new Array(arguments.length -  2);
while (G__8468__i < G__8468__a.length) {G__8468__a[G__8468__i] = arguments[G__8468__i + 2]; ++G__8468__i;}
G__8467 = new cljs.core.IndexedSeq(G__8468__a,0);
}
return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8467);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max.cljs$lang$maxFixedArity = 2;
cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var cljs$core$min = null;
var cljs$core$min__1 = (function (x){
return x;
});
var cljs$core$min__2 = (function (x,y){
var x__4006__auto__ = x;
var y__4007__auto__ = y;
return ((x__4006__auto__ < y__4007__auto__) ? x__4006__auto__ : y__4007__auto__);
});
var cljs$core$min__3 = (function() { 
var G__8469__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min,(function (){var x__4006__auto__ = x;
var y__4007__auto__ = y;
return ((x__4006__auto__ < y__4007__auto__) ? x__4006__auto__ : y__4007__auto__);
})(),more);
};
var G__8469 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8470__i = 0, G__8470__a = new Array(arguments.length -  2);
while (G__8470__i < G__8470__a.length) {G__8470__a[G__8470__i] = arguments[G__8470__i + 2]; ++G__8470__i;}
  more = new cljs.core.IndexedSeq(G__8470__a,0);
} 
return G__8469__delegate.call(this,x,y,more);};
G__8469.cljs$lang$maxFixedArity = 2;
G__8469.cljs$lang$applyTo = (function (arglist__8471){
var x = cljs.core.first(arglist__8471);
arglist__8471 = cljs.core.next(arglist__8471);
var y = cljs.core.first(arglist__8471);
var more = cljs.core.rest(arglist__8471);
return G__8469__delegate(x,y,more);
});
G__8469.cljs$core$IFn$_invoke$arity$variadic = G__8469__delegate;
return G__8469;
})()
;
cljs$core$min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$min__1.call(this,x);
case 2:
return cljs$core$min__2.call(this,x,y);
default:
var G__8472 = null;
if (arguments.length > 2) {
var G__8473__i = 0, G__8473__a = new Array(arguments.length -  2);
while (G__8473__i < G__8473__a.length) {G__8473__a[G__8473__i] = arguments[G__8473__i + 2]; ++G__8473__i;}
G__8472 = new cljs.core.IndexedSeq(G__8473__a,0);
}
return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8472);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min.cljs$lang$maxFixedArity = 2;
cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min;
})()
;
cljs.core.byte$ = (function cljs$core$byte(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function cljs$core$char(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function cljs$core$short(x){
return x;
});
cljs.core.float$ = (function cljs$core$float(x){
return x;
});
cljs.core.double$ = (function cljs$core$double(x){
return x;
});
cljs.core.unchecked_byte = (function cljs$core$unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function cljs$core$unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function cljs$core$unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function cljs$core$unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function cljs$core$unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var cljs$core$unchecked_add = null;
var cljs$core$unchecked_add__0 = (function (){
return (0);
});
var cljs$core$unchecked_add__1 = (function (x){
return x;
});
var cljs$core$unchecked_add__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add__3 = (function() { 
var G__8474__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add,(x + y),more);
};
var G__8474 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8475__i = 0, G__8475__a = new Array(arguments.length -  2);
while (G__8475__i < G__8475__a.length) {G__8475__a[G__8475__i] = arguments[G__8475__i + 2]; ++G__8475__i;}
  more = new cljs.core.IndexedSeq(G__8475__a,0);
} 
return G__8474__delegate.call(this,x,y,more);};
G__8474.cljs$lang$maxFixedArity = 2;
G__8474.cljs$lang$applyTo = (function (arglist__8476){
var x = cljs.core.first(arglist__8476);
arglist__8476 = cljs.core.next(arglist__8476);
var y = cljs.core.first(arglist__8476);
var more = cljs.core.rest(arglist__8476);
return G__8474__delegate(x,y,more);
});
G__8474.cljs$core$IFn$_invoke$arity$variadic = G__8474__delegate;
return G__8474;
})()
;
cljs$core$unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add__0.call(this);
case 1:
return cljs$core$unchecked_add__1.call(this,x);
case 2:
return cljs$core$unchecked_add__2.call(this,x,y);
default:
var G__8477 = null;
if (arguments.length > 2) {
var G__8478__i = 0, G__8478__a = new Array(arguments.length -  2);
while (G__8478__i < G__8478__a.length) {G__8478__a[G__8478__i] = arguments[G__8478__i + 2]; ++G__8478__i;}
G__8477 = new cljs.core.IndexedSeq(G__8478__a,0);
}
return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8477);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var cljs$core$unchecked_add_int = null;
var cljs$core$unchecked_add_int__0 = (function (){
return (0);
});
var cljs$core$unchecked_add_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add_int__3 = (function() { 
var G__8479__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int,(x + y),more);
};
var G__8479 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8480__i = 0, G__8480__a = new Array(arguments.length -  2);
while (G__8480__i < G__8480__a.length) {G__8480__a[G__8480__i] = arguments[G__8480__i + 2]; ++G__8480__i;}
  more = new cljs.core.IndexedSeq(G__8480__a,0);
} 
return G__8479__delegate.call(this,x,y,more);};
G__8479.cljs$lang$maxFixedArity = 2;
G__8479.cljs$lang$applyTo = (function (arglist__8481){
var x = cljs.core.first(arglist__8481);
arglist__8481 = cljs.core.next(arglist__8481);
var y = cljs.core.first(arglist__8481);
var more = cljs.core.rest(arglist__8481);
return G__8479__delegate(x,y,more);
});
G__8479.cljs$core$IFn$_invoke$arity$variadic = G__8479__delegate;
return G__8479;
})()
;
cljs$core$unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add_int__0.call(this);
case 1:
return cljs$core$unchecked_add_int__1.call(this,x);
case 2:
return cljs$core$unchecked_add_int__2.call(this,x,y);
default:
var G__8482 = null;
if (arguments.length > 2) {
var G__8483__i = 0, G__8483__a = new Array(arguments.length -  2);
while (G__8483__i < G__8483__a.length) {G__8483__a[G__8483__i] = arguments[G__8483__i + 2]; ++G__8483__i;}
G__8482 = new cljs.core.IndexedSeq(G__8483__a,0);
}
return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8482);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add_int;
})()
;
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec = (function cljs$core$unchecked_dec(x){
return (x - (1));
});
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec_int = (function cljs$core$unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var cljs$core$unchecked_divide_int = null;
var cljs$core$unchecked_divide_int__1 = (function (x){
return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var cljs$core$unchecked_divide_int__3 = (function() { 
var G__8488__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int,cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__8488 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8489__i = 0, G__8489__a = new Array(arguments.length -  2);
while (G__8489__i < G__8489__a.length) {G__8489__a[G__8489__i] = arguments[G__8489__i + 2]; ++G__8489__i;}
  more = new cljs.core.IndexedSeq(G__8489__a,0);
} 
return G__8488__delegate.call(this,x,y,more);};
G__8488.cljs$lang$maxFixedArity = 2;
G__8488.cljs$lang$applyTo = (function (arglist__8490){
var x = cljs.core.first(arglist__8490);
arglist__8490 = cljs.core.next(arglist__8490);
var y = cljs.core.first(arglist__8490);
var more = cljs.core.rest(arglist__8490);
return G__8488__delegate(x,y,more);
});
G__8488.cljs$core$IFn$_invoke$arity$variadic = G__8488__delegate;
return G__8488;
})()
;
cljs$core$unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_divide_int__1.call(this,x);
case 2:
return cljs$core$unchecked_divide_int__2.call(this,x,y);
default:
var G__8491 = null;
if (arguments.length > 2) {
var G__8492__i = 0, G__8492__a = new Array(arguments.length -  2);
while (G__8492__i < G__8492__a.length) {G__8492__a[G__8492__i] = arguments[G__8492__i + 2]; ++G__8492__i;}
G__8491 = new cljs.core.IndexedSeq(G__8492__a,0);
}
return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8491);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function cljs$core$unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function cljs$core$unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var cljs$core$unchecked_multiply = null;
var cljs$core$unchecked_multiply__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply__3 = (function() { 
var G__8493__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply,(x * y),more);
};
var G__8493 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8494__i = 0, G__8494__a = new Array(arguments.length -  2);
while (G__8494__i < G__8494__a.length) {G__8494__a[G__8494__i] = arguments[G__8494__i + 2]; ++G__8494__i;}
  more = new cljs.core.IndexedSeq(G__8494__a,0);
} 
return G__8493__delegate.call(this,x,y,more);};
G__8493.cljs$lang$maxFixedArity = 2;
G__8493.cljs$lang$applyTo = (function (arglist__8495){
var x = cljs.core.first(arglist__8495);
arglist__8495 = cljs.core.next(arglist__8495);
var y = cljs.core.first(arglist__8495);
var more = cljs.core.rest(arglist__8495);
return G__8493__delegate(x,y,more);
});
G__8493.cljs$core$IFn$_invoke$arity$variadic = G__8493__delegate;
return G__8493;
})()
;
cljs$core$unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply__0.call(this);
case 1:
return cljs$core$unchecked_multiply__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply__2.call(this,x,y);
default:
var G__8496 = null;
if (arguments.length > 2) {
var G__8497__i = 0, G__8497__a = new Array(arguments.length -  2);
while (G__8497__i < G__8497__a.length) {G__8497__a[G__8497__i] = arguments[G__8497__i + 2]; ++G__8497__i;}
G__8496 = new cljs.core.IndexedSeq(G__8497__a,0);
}
return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8496);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var cljs$core$unchecked_multiply_int = null;
var cljs$core$unchecked_multiply_int__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply_int__3 = (function() { 
var G__8498__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int,(x * y),more);
};
var G__8498 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8499__i = 0, G__8499__a = new Array(arguments.length -  2);
while (G__8499__i < G__8499__a.length) {G__8499__a[G__8499__i] = arguments[G__8499__i + 2]; ++G__8499__i;}
  more = new cljs.core.IndexedSeq(G__8499__a,0);
} 
return G__8498__delegate.call(this,x,y,more);};
G__8498.cljs$lang$maxFixedArity = 2;
G__8498.cljs$lang$applyTo = (function (arglist__8500){
var x = cljs.core.first(arglist__8500);
arglist__8500 = cljs.core.next(arglist__8500);
var y = cljs.core.first(arglist__8500);
var more = cljs.core.rest(arglist__8500);
return G__8498__delegate(x,y,more);
});
G__8498.cljs$core$IFn$_invoke$arity$variadic = G__8498__delegate;
return G__8498;
})()
;
cljs$core$unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply_int__0.call(this);
case 1:
return cljs$core$unchecked_multiply_int__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply_int__2.call(this,x,y);
default:
var G__8501 = null;
if (arguments.length > 2) {
var G__8502__i = 0, G__8502__a = new Array(arguments.length -  2);
while (G__8502__i < G__8502__a.length) {G__8502__a[G__8502__i] = arguments[G__8502__i + 2]; ++G__8502__i;}
G__8501 = new cljs.core.IndexedSeq(G__8502__a,0);
}
return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8501);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function cljs$core$unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function cljs$core$unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function cljs$core$unchecked_remainder_int(x,n){
var G__8505 = x;
var G__8506 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__8505,G__8506) : cljs.core.mod.call(null,G__8505,G__8506));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var cljs$core$unchecked_subtract = null;
var cljs$core$unchecked_subtract__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract__3 = (function() { 
var G__8507__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract,(x - y),more);
};
var G__8507 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8508__i = 0, G__8508__a = new Array(arguments.length -  2);
while (G__8508__i < G__8508__a.length) {G__8508__a[G__8508__i] = arguments[G__8508__i + 2]; ++G__8508__i;}
  more = new cljs.core.IndexedSeq(G__8508__a,0);
} 
return G__8507__delegate.call(this,x,y,more);};
G__8507.cljs$lang$maxFixedArity = 2;
G__8507.cljs$lang$applyTo = (function (arglist__8509){
var x = cljs.core.first(arglist__8509);
arglist__8509 = cljs.core.next(arglist__8509);
var y = cljs.core.first(arglist__8509);
var more = cljs.core.rest(arglist__8509);
return G__8507__delegate(x,y,more);
});
G__8507.cljs$core$IFn$_invoke$arity$variadic = G__8507__delegate;
return G__8507;
})()
;
cljs$core$unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract__2.call(this,x,y);
default:
var G__8510 = null;
if (arguments.length > 2) {
var G__8511__i = 0, G__8511__a = new Array(arguments.length -  2);
while (G__8511__i < G__8511__a.length) {G__8511__a[G__8511__i] = arguments[G__8511__i + 2]; ++G__8511__i;}
G__8510 = new cljs.core.IndexedSeq(G__8511__a,0);
}
return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8510);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var cljs$core$unchecked_subtract_int = null;
var cljs$core$unchecked_subtract_int__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract_int__3 = (function() { 
var G__8512__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int,(x - y),more);
};
var G__8512 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8513__i = 0, G__8513__a = new Array(arguments.length -  2);
while (G__8513__i < G__8513__a.length) {G__8513__a[G__8513__i] = arguments[G__8513__i + 2]; ++G__8513__i;}
  more = new cljs.core.IndexedSeq(G__8513__a,0);
} 
return G__8512__delegate.call(this,x,y,more);};
G__8512.cljs$lang$maxFixedArity = 2;
G__8512.cljs$lang$applyTo = (function (arglist__8514){
var x = cljs.core.first(arglist__8514);
arglist__8514 = cljs.core.next(arglist__8514);
var y = cljs.core.first(arglist__8514);
var more = cljs.core.rest(arglist__8514);
return G__8512__delegate(x,y,more);
});
G__8512.cljs$core$IFn$_invoke$arity$variadic = G__8512__delegate;
return G__8512;
})()
;
cljs$core$unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract_int__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract_int__2.call(this,x,y);
default:
var G__8515 = null;
if (arguments.length > 2) {
var G__8516__i = 0, G__8516__a = new Array(arguments.length -  2);
while (G__8516__i < G__8516__a.length) {G__8516__a[G__8516__i] = arguments[G__8516__i + 2]; ++G__8516__i;}
G__8515 = new cljs.core.IndexedSeq(G__8516__a,0);
}
return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8515);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract_int;
})()
;
cljs.core.fix = (function cljs$core$fix(q){
if((q >= (0))){
var G__8519 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__8519) : Math.floor.call(null,G__8519));
} else {
var G__8520 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__8520) : Math.ceil.call(null,G__8520));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function cljs$core$int(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function cljs$core$unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function cljs$core$long(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function cljs$core$unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function cljs$core$booleans(x){
return x;
});
cljs.core.bytes = (function cljs$core$bytes(x){
return x;
});
cljs.core.chars = (function cljs$core$chars(x){
return x;
});
cljs.core.shorts = (function cljs$core$shorts(x){
return x;
});
cljs.core.ints = (function cljs$core$ints(x){
return x;
});
cljs.core.floats = (function cljs$core$floats(x){
return x;
});
cljs.core.doubles = (function cljs$core$doubles(x){
return x;
});
cljs.core.longs = (function cljs$core$longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function cljs$core$js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function cljs$core$mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function cljs$core$quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function cljs$core$rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var cljs$core$bit_xor = null;
var cljs$core$bit_xor__2 = (function (x,y){
return (x ^ y);
});
var cljs$core$bit_xor__3 = (function() { 
var G__8521__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor,(x ^ y),more);
};
var G__8521 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8522__i = 0, G__8522__a = new Array(arguments.length -  2);
while (G__8522__i < G__8522__a.length) {G__8522__a[G__8522__i] = arguments[G__8522__i + 2]; ++G__8522__i;}
  more = new cljs.core.IndexedSeq(G__8522__a,0);
} 
return G__8521__delegate.call(this,x,y,more);};
G__8521.cljs$lang$maxFixedArity = 2;
G__8521.cljs$lang$applyTo = (function (arglist__8523){
var x = cljs.core.first(arglist__8523);
arglist__8523 = cljs.core.next(arglist__8523);
var y = cljs.core.first(arglist__8523);
var more = cljs.core.rest(arglist__8523);
return G__8521__delegate(x,y,more);
});
G__8521.cljs$core$IFn$_invoke$arity$variadic = G__8521__delegate;
return G__8521;
})()
;
cljs$core$bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_xor__2.call(this,x,y);
default:
var G__8524 = null;
if (arguments.length > 2) {
var G__8525__i = 0, G__8525__a = new Array(arguments.length -  2);
while (G__8525__i < G__8525__a.length) {G__8525__a[G__8525__i] = arguments[G__8525__i + 2]; ++G__8525__i;}
G__8524 = new cljs.core.IndexedSeq(G__8525__a,0);
}
return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8524);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var cljs$core$bit_and = null;
var cljs$core$bit_and__2 = (function (x,y){
return (x & y);
});
var cljs$core$bit_and__3 = (function() { 
var G__8526__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and,(x & y),more);
};
var G__8526 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8527__i = 0, G__8527__a = new Array(arguments.length -  2);
while (G__8527__i < G__8527__a.length) {G__8527__a[G__8527__i] = arguments[G__8527__i + 2]; ++G__8527__i;}
  more = new cljs.core.IndexedSeq(G__8527__a,0);
} 
return G__8526__delegate.call(this,x,y,more);};
G__8526.cljs$lang$maxFixedArity = 2;
G__8526.cljs$lang$applyTo = (function (arglist__8528){
var x = cljs.core.first(arglist__8528);
arglist__8528 = cljs.core.next(arglist__8528);
var y = cljs.core.first(arglist__8528);
var more = cljs.core.rest(arglist__8528);
return G__8526__delegate(x,y,more);
});
G__8526.cljs$core$IFn$_invoke$arity$variadic = G__8526__delegate;
return G__8526;
})()
;
cljs$core$bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and__2.call(this,x,y);
default:
var G__8529 = null;
if (arguments.length > 2) {
var G__8530__i = 0, G__8530__a = new Array(arguments.length -  2);
while (G__8530__i < G__8530__a.length) {G__8530__a[G__8530__i] = arguments[G__8530__i + 2]; ++G__8530__i;}
G__8529 = new cljs.core.IndexedSeq(G__8530__a,0);
}
return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8529);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var cljs$core$bit_or = null;
var cljs$core$bit_or__2 = (function (x,y){
return (x | y);
});
var cljs$core$bit_or__3 = (function() { 
var G__8531__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or,(x | y),more);
};
var G__8531 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8532__i = 0, G__8532__a = new Array(arguments.length -  2);
while (G__8532__i < G__8532__a.length) {G__8532__a[G__8532__i] = arguments[G__8532__i + 2]; ++G__8532__i;}
  more = new cljs.core.IndexedSeq(G__8532__a,0);
} 
return G__8531__delegate.call(this,x,y,more);};
G__8531.cljs$lang$maxFixedArity = 2;
G__8531.cljs$lang$applyTo = (function (arglist__8533){
var x = cljs.core.first(arglist__8533);
arglist__8533 = cljs.core.next(arglist__8533);
var y = cljs.core.first(arglist__8533);
var more = cljs.core.rest(arglist__8533);
return G__8531__delegate(x,y,more);
});
G__8531.cljs$core$IFn$_invoke$arity$variadic = G__8531__delegate;
return G__8531;
})()
;
cljs$core$bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_or__2.call(this,x,y);
default:
var G__8534 = null;
if (arguments.length > 2) {
var G__8535__i = 0, G__8535__a = new Array(arguments.length -  2);
while (G__8535__i < G__8535__a.length) {G__8535__a[G__8535__i] = arguments[G__8535__i + 2]; ++G__8535__i;}
G__8534 = new cljs.core.IndexedSeq(G__8535__a,0);
}
return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8534);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var cljs$core$bit_and_not = null;
var cljs$core$bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var cljs$core$bit_and_not__3 = (function() { 
var G__8536__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not,(x & ~y),more);
};
var G__8536 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8537__i = 0, G__8537__a = new Array(arguments.length -  2);
while (G__8537__i < G__8537__a.length) {G__8537__a[G__8537__i] = arguments[G__8537__i + 2]; ++G__8537__i;}
  more = new cljs.core.IndexedSeq(G__8537__a,0);
} 
return G__8536__delegate.call(this,x,y,more);};
G__8536.cljs$lang$maxFixedArity = 2;
G__8536.cljs$lang$applyTo = (function (arglist__8538){
var x = cljs.core.first(arglist__8538);
arglist__8538 = cljs.core.next(arglist__8538);
var y = cljs.core.first(arglist__8538);
var more = cljs.core.rest(arglist__8538);
return G__8536__delegate(x,y,more);
});
G__8536.cljs$core$IFn$_invoke$arity$variadic = G__8536__delegate;
return G__8536;
})()
;
cljs$core$bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and_not__2.call(this,x,y);
default:
var G__8539 = null;
if (arguments.length > 2) {
var G__8540__i = 0, G__8540__a = new Array(arguments.length -  2);
while (G__8540__i < G__8540__a.length) {G__8540__a[G__8540__i] = arguments[G__8540__i + 2]; ++G__8540__i;}
G__8539 = new cljs.core.IndexedSeq(G__8540__a,0);
}
return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8539);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function cljs$core$bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function cljs$core$bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function cljs$core$bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function cljs$core$bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function cljs$core$bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function cljs$core$bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function cljs$core$bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function cljs$core$bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function cljs$core$unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function cljs$core$bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var cljs$core$_EQ__EQ_ = null;
var cljs$core$_EQ__EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var cljs$core$_EQ__EQ___3 = (function() { 
var G__8545__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__8546 = y;
var G__8547 = cljs.core.first(more);
var G__8548 = cljs.core.next(more);
x = G__8546;
y = G__8547;
more = G__8548;
continue;
} else {
return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__8545 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8549__i = 0, G__8549__a = new Array(arguments.length -  2);
while (G__8549__i < G__8549__a.length) {G__8549__a[G__8549__i] = arguments[G__8549__i + 2]; ++G__8549__i;}
  more = new cljs.core.IndexedSeq(G__8549__a,0);
} 
return G__8545__delegate.call(this,x,y,more);};
G__8545.cljs$lang$maxFixedArity = 2;
G__8545.cljs$lang$applyTo = (function (arglist__8550){
var x = cljs.core.first(arglist__8550);
arglist__8550 = cljs.core.next(arglist__8550);
var y = cljs.core.first(arglist__8550);
var more = cljs.core.rest(arglist__8550);
return G__8545__delegate(x,y,more);
});
G__8545.cljs$core$IFn$_invoke$arity$variadic = G__8545__delegate;
return G__8545;
})()
;
cljs$core$_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ__EQ___1.call(this,x);
case 2:
return cljs$core$_EQ__EQ___2.call(this,x,y);
default:
var G__8551 = null;
if (arguments.length > 2) {
var G__8552__i = 0, G__8552__a = new Array(arguments.length -  2);
while (G__8552__i < G__8552__a.length) {G__8552__a[G__8552__i] = arguments[G__8552__i + 2]; ++G__8552__i;}
G__8551 = new cljs.core.IndexedSeq(G__8552__a,0);
}
return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8551);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function cljs$core$pos_QMARK_(n){
return (n > (0));
});
/**
 * Returns true if num is zero, else false
 */
cljs.core.zero_QMARK_ = (function cljs$core$zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function cljs$core$neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function cljs$core$nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__8553 = (n__$1 - (1));
var G__8554 = cljs.core.next(xs);
n__$1 = G__8553;
xs = G__8554;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var cljs$core$str = null;
var cljs$core$str__0 = (function (){
return "";
});
var cljs$core$str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__8558 = x;
return goog.string.buildString(G__8558);
}
});
var cljs$core$str__2 = (function() { 
var G__8559__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__8560 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__8561 = cljs.core.next(more);
sb = G__8560;
more = G__8561;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__8559 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__8562__i = 0, G__8562__a = new Array(arguments.length -  1);
while (G__8562__i < G__8562__a.length) {G__8562__a[G__8562__i] = arguments[G__8562__i + 1]; ++G__8562__i;}
  ys = new cljs.core.IndexedSeq(G__8562__a,0);
} 
return G__8559__delegate.call(this,x,ys);};
G__8559.cljs$lang$maxFixedArity = 1;
G__8559.cljs$lang$applyTo = (function (arglist__8563){
var x = cljs.core.first(arglist__8563);
var ys = cljs.core.rest(arglist__8563);
return G__8559__delegate(x,ys);
});
G__8559.cljs$core$IFn$_invoke$arity$variadic = G__8559__delegate;
return G__8559;
})()
;
cljs$core$str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return cljs$core$str__0.call(this);
case 1:
return cljs$core$str__1.call(this,x);
default:
var G__8564 = null;
if (arguments.length > 1) {
var G__8565__i = 0, G__8565__a = new Array(arguments.length -  1);
while (G__8565__i < G__8565__a.length) {G__8565__a[G__8565__i] = arguments[G__8565__i + 1]; ++G__8565__i;}
G__8564 = new cljs.core.IndexedSeq(G__8565__a,0);
}
return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8564);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$str.cljs$lang$maxFixedArity = 1;
cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var cljs$core$subs = null;
var cljs$core$subs__2 = (function (s,start){
return s.substring(start);
});
var cljs$core$subs__3 = (function (s,start,end){
return s.substring(start,end);
});
cljs$core$subs = function(s,start,end){
switch(arguments.length){
case 2:
return cljs$core$subs__2.call(this,s,start);
case 3:
return cljs$core$subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
return cljs$core$subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function cljs$core$equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__8566 = cljs.core.next(xs);
var G__8567 = cljs.core.next(ys);
xs = G__8566;
ys = G__8567;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function cljs$core$hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__8568 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__8569 = cljs.core.next(s);
res = G__8568;
s = G__8569;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function cljs$core$hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__8574 = ((h + (cljs.core.hash((function (){var G__8572 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8572) : cljs.core.key.call(null,G__8572));
})()) ^ cljs.core.hash((function (){var G__8573 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8573) : cljs.core.val.call(null,G__8573));
})()))) % (4503599627370496));
var G__8575 = cljs.core.next(s);
h = G__8574;
s = G__8575;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function cljs$core$hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__8576 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__8577 = cljs.core.next(s__$1);
h = G__8576;
s__$1 = G__8577;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function cljs$core$extend_object_BANG_(obj,fn_map){
var seq__8588_8598 = cljs.core.seq(fn_map);
var chunk__8589_8599 = null;
var count__8590_8600 = (0);
var i__8591_8601 = (0);
while(true){
if((i__8591_8601 < count__8590_8600)){
var vec__8592_8602 = chunk__8589_8599.cljs$core$IIndexed$_nth$arity$2(null,i__8591_8601);
var key_name_8603 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8592_8602,(0),null);
var f_8604 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8592_8602,(1),null);
var str_name_8605 = (function (){var G__8593 = key_name_8603;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8593) : cljs.core.name.call(null,G__8593));
})();
(obj[str_name_8605] = f_8604);

var G__8606 = seq__8588_8598;
var G__8607 = chunk__8589_8599;
var G__8608 = count__8590_8600;
var G__8609 = (i__8591_8601 + (1));
seq__8588_8598 = G__8606;
chunk__8589_8599 = G__8607;
count__8590_8600 = G__8608;
i__8591_8601 = G__8609;
continue;
} else {
var temp__4126__auto___8610 = cljs.core.seq(seq__8588_8598);
if(temp__4126__auto___8610){
var seq__8588_8611__$1 = temp__4126__auto___8610;
if(cljs.core.chunked_seq_QMARK_(seq__8588_8611__$1)){
var c__4304__auto___8612 = (function (){var G__8594 = seq__8588_8611__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__8594) : cljs.core.chunk_first.call(null,G__8594));
})();
var G__8613 = (function (){var G__8595 = seq__8588_8611__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__8595) : cljs.core.chunk_rest.call(null,G__8595));
})();
var G__8614 = c__4304__auto___8612;
var G__8615 = cljs.core.count(c__4304__auto___8612);
var G__8616 = (0);
seq__8588_8598 = G__8613;
chunk__8589_8599 = G__8614;
count__8590_8600 = G__8615;
i__8591_8601 = G__8616;
continue;
} else {
var vec__8596_8617 = cljs.core.first(seq__8588_8611__$1);
var key_name_8618 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8596_8617,(0),null);
var f_8619 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8596_8617,(1),null);
var str_name_8620 = (function (){var G__8597 = key_name_8618;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8597) : cljs.core.name.call(null,G__8597));
})();
(obj[str_name_8620] = f_8619);

var G__8621 = cljs.core.next(seq__8588_8611__$1);
var G__8622 = null;
var G__8623 = (0);
var G__8624 = (0);
seq__8588_8598 = G__8621;
chunk__8589_8599 = G__8622;
count__8590_8600 = G__8623;
i__8591_8601 = G__8624;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function cljs$core$__GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function cljs$core$__GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
/**
 * Returns true if coll satisfies? IReversible.
 */
cljs.core.reversible_QMARK_ = (function cljs$core$reversible_QMARK_(coll){
var G__8626 = coll;
if(G__8626){
var bit__4229__auto__ = (G__8626.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4229__auto__) || (G__8626.cljs$core$IReversible$)){
return true;
} else {
if((!G__8626.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__8626);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__8626);
}
});
/**
 * Returns, in constant time, a seq of the items in rev (which
 * can be a vector or sorted-map), in reverse order. If rev is empty returns nil
 */
cljs.core.rseq = (function cljs$core$rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function cljs$core$reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * Creates a new list containing the items.
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var cljs$core$list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__8627 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__8627;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__8628 = (i - (1));
var G__8629 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__8628;
r = G__8629;
continue;
} else {
return r;
}
break;
}
};
var cljs$core$list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__8630__i = 0, G__8630__a = new Array(arguments.length -  0);
while (G__8630__i < G__8630__a.length) {G__8630__a[G__8630__i] = arguments[G__8630__i + 0]; ++G__8630__i;}
  xs = new cljs.core.IndexedSeq(G__8630__a,0);
} 
return cljs$core$list__delegate.call(this,xs);};
cljs$core$list.cljs$lang$maxFixedArity = 0;
cljs$core$list.cljs$lang$applyTo = (function (arglist__8631){
var xs = cljs.core.seq(arglist__8631);
return cljs$core$list__delegate(xs);
});
cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
return cljs$core$list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function cljs$core$__GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cljs$core$cons(x,coll){
if((function (){var or__3935__auto__ = (coll == null);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var G__8635 = coll;
if(G__8635){
var bit__4226__auto__ = (G__8635.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4226__auto__) || (G__8635.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
/**
 * Returns true if x implements IList
 */
cljs.core.list_QMARK_ = (function cljs$core$list_QMARK_(x){
var G__8637 = x;
if(G__8637){
var bit__4229__auto__ = (G__8637.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4229__auto__) || (G__8637.cljs$core$IList$)){
return true;
} else {
if((!G__8637.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__8637);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__8637);
}
});
cljs.core.hash_keyword = (function cljs$core$hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function cljs$core$compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3927__auto__ = cljs.core.not(a.ns);
if(and__3927__auto__){
return b.ns;
} else {
return and__3927__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__8644 = a.ns;
var G__8645 = b.ns;
return goog.array.defaultCompare(G__8644,G__8645);
})();
if(((0) === nsc)){
var G__8646 = a.name;
var G__8647 = b.name;
return goog.array.defaultCompare(G__8646,G__8647);
} else {
return nsc;
}
}
} else {
var G__8648 = a.name;
var G__8649 = b.name;
return goog.array.defaultCompare(G__8648,G__8649);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4027__auto__ = self__._hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__8651 = null;
var G__8651__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__8651__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__8651 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__8651__2.call(this,self__,coll);
case 3:
return G__8651__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8651.cljs$core$IFn$_invoke$arity$2 = G__8651__2;
G__8651.cljs$core$IFn$_invoke$arity$3 = G__8651__3;
return G__8651;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args8650){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8650)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

/**
 * Return true if x is a Keyword
 */
cljs.core.keyword_QMARK_ = (function cljs$core$keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
/**
 * Efficient test to determine that two keywords are identical.
 */
cljs.core.keyword_identical_QMARK_ = (function cljs$core$keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function cljs$core$namespace(x){
if((function (){var G__8653 = x;
if(G__8653){
var bit__4226__auto__ = (G__8653.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4226__auto__) || (G__8653.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var cljs$core$keyword = null;
var cljs$core$keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__8655 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__8655) : cljs.core.name.call(null,G__8655));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var cljs$core$keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
cljs$core$keyword = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$keyword__1.call(this,ns);
case 2:
return cljs$core$keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
return cljs$core$keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__8656 = ls.sval();
ls = G__8656;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function cljs$core$__GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function cljs$core$chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function cljs$core$__GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var cljs$core$array_chunk = null;
var cljs$core$array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var cljs$core$array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var cljs$core$array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
cljs$core$array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return cljs$core$array_chunk__1.call(this,arr);
case 2:
return cljs$core$array_chunk__2.call(this,arr,off);
case 3:
return cljs$core$array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
return cljs$core$array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
cljs.core.chunk_cons = (function cljs$core$chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function cljs$core$chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function cljs$core$chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function cljs$core$chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function cljs$core$chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function cljs$core$chunk_next(s){
if((function (){var G__8658 = s;
if(G__8658){
var bit__4226__auto__ = (G__8658.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4226__auto__) || (G__8658.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function cljs$core$to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__8659 = cljs.core.next(s__$1);
s__$1 = G__8659;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function cljs$core$to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_8660 = (0);
var xs_8661 = cljs.core.seq(coll);
while(true){
if(xs_8661){
(ret[i_8660] = cljs.core.to_array(cljs.core.first(xs_8661)));

var G__8662 = (i_8660 + (1));
var G__8663 = cljs.core.next(xs_8661);
i_8660 = G__8662;
xs_8661 = G__8663;
continue;
} else {
}
break;
}

return ret;
});
/**
 * Creates an array of ints. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.int_array = (function() {
var cljs$core$int_array = null;
var cljs$core$int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8666 = (i + (1));
var G__8667 = cljs.core.next(s__$1);
i = G__8666;
s__$1 = G__8667;
continue;
} else {
return a;
}
break;
}
} else {
var n__4356__auto___8668 = size;
var i_8669 = (0);
while(true){
if((i_8669 < n__4356__auto___8668)){
(a[i_8669] = init_val_or_seq);

var G__8670 = (i_8669 + (1));
i_8669 = G__8670;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$int_array__1.call(this,size);
case 2:
return cljs$core$int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
return cljs$core$int_array;
})()
;
/**
 * Creates an array of longs. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.long_array = (function() {
var cljs$core$long_array = null;
var cljs$core$long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8673 = (i + (1));
var G__8674 = cljs.core.next(s__$1);
i = G__8673;
s__$1 = G__8674;
continue;
} else {
return a;
}
break;
}
} else {
var n__4356__auto___8675 = size;
var i_8676 = (0);
while(true){
if((i_8676 < n__4356__auto___8675)){
(a[i_8676] = init_val_or_seq);

var G__8677 = (i_8676 + (1));
i_8676 = G__8677;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$long_array__1.call(this,size);
case 2:
return cljs$core$long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
return cljs$core$long_array;
})()
;
/**
 * Creates an array of doubles. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.double_array = (function() {
var cljs$core$double_array = null;
var cljs$core$double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8680 = (i + (1));
var G__8681 = cljs.core.next(s__$1);
i = G__8680;
s__$1 = G__8681;
continue;
} else {
return a;
}
break;
}
} else {
var n__4356__auto___8682 = size;
var i_8683 = (0);
while(true){
if((i_8683 < n__4356__auto___8682)){
(a[i_8683] = init_val_or_seq);

var G__8684 = (i_8683 + (1));
i_8683 = G__8684;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$double_array__1.call(this,size);
case 2:
return cljs$core$double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
return cljs$core$double_array;
})()
;
/**
 * Creates an array of objects. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.object_array = (function() {
var cljs$core$object_array = null;
var cljs$core$object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__8687 = (i + (1));
var G__8688 = cljs.core.next(s__$1);
i = G__8687;
s__$1 = G__8688;
continue;
} else {
return a;
}
break;
}
} else {
var n__4356__auto___8689 = size;
var i_8690 = (0);
while(true){
if((i_8690 < n__4356__auto___8689)){
(a[i_8690] = init_val_or_seq);

var G__8691 = (i_8690 + (1));
i_8690 = G__8691;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$object_array__1.call(this,size);
case 2:
return cljs$core$object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
return cljs$core$object_array;
})()
;
cljs.core.bounded_count = (function cljs$core$bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__8692 = cljs.core.next(s__$1);
var G__8693 = (i - (1));
var G__8694 = (sum + (1));
s__$1 = G__8692;
i = G__8693;
sum = G__8694;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function cljs$core$spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),cljs$core$spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var cljs$core$concat = null;
var cljs$core$concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var cljs$core$concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var cljs$core$concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var cljs$core$concat__3 = (function() { 
var G__8714__delegate = function (x,y,zs){
var cat = (function cljs$core$concat_$_cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$concat_$_cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cljs$core$concat_$_cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__8714 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8715__i = 0, G__8715__a = new Array(arguments.length -  2);
while (G__8715__i < G__8715__a.length) {G__8715__a[G__8715__i] = arguments[G__8715__i + 2]; ++G__8715__i;}
  zs = new cljs.core.IndexedSeq(G__8715__a,0);
} 
return G__8714__delegate.call(this,x,y,zs);};
G__8714.cljs$lang$maxFixedArity = 2;
G__8714.cljs$lang$applyTo = (function (arglist__8716){
var x = cljs.core.first(arglist__8716);
arglist__8716 = cljs.core.next(arglist__8716);
var y = cljs.core.first(arglist__8716);
var zs = cljs.core.rest(arglist__8716);
return G__8714__delegate(x,y,zs);
});
G__8714.cljs$core$IFn$_invoke$arity$variadic = G__8714__delegate;
return G__8714;
})()
;
cljs$core$concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return cljs$core$concat__0.call(this);
case 1:
return cljs$core$concat__1.call(this,x);
case 2:
return cljs$core$concat__2.call(this,x,y);
default:
var G__8717 = null;
if (arguments.length > 2) {
var G__8718__i = 0, G__8718__a = new Array(arguments.length -  2);
while (G__8718__i < G__8718__a.length) {G__8718__a[G__8718__i] = arguments[G__8718__i + 2]; ++G__8718__i;}
G__8717 = new cljs.core.IndexedSeq(G__8718__a,0);
}
return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8717);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$concat.cljs$lang$maxFixedArity = 2;
cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var cljs$core$list_STAR_ = null;
var cljs$core$list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var cljs$core$list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var cljs$core$list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var cljs$core$list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var cljs$core$list_STAR___5 = (function() { 
var G__8719__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__8719 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__8720__i = 0, G__8720__a = new Array(arguments.length -  4);
while (G__8720__i < G__8720__a.length) {G__8720__a[G__8720__i] = arguments[G__8720__i + 4]; ++G__8720__i;}
  more = new cljs.core.IndexedSeq(G__8720__a,0);
} 
return G__8719__delegate.call(this,a,b,c,d,more);};
G__8719.cljs$lang$maxFixedArity = 4;
G__8719.cljs$lang$applyTo = (function (arglist__8721){
var a = cljs.core.first(arglist__8721);
arglist__8721 = cljs.core.next(arglist__8721);
var b = cljs.core.first(arglist__8721);
arglist__8721 = cljs.core.next(arglist__8721);
var c = cljs.core.first(arglist__8721);
arglist__8721 = cljs.core.next(arglist__8721);
var d = cljs.core.first(arglist__8721);
var more = cljs.core.rest(arglist__8721);
return G__8719__delegate(a,b,c,d,more);
});
G__8719.cljs$core$IFn$_invoke$arity$variadic = G__8719__delegate;
return G__8719;
})()
;
cljs$core$list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$list_STAR___1.call(this,a);
case 2:
return cljs$core$list_STAR___2.call(this,a,b);
case 3:
return cljs$core$list_STAR___3.call(this,a,b,c);
case 4:
return cljs$core$list_STAR___4.call(this,a,b,c,d);
default:
var G__8722 = null;
if (arguments.length > 4) {
var G__8723__i = 0, G__8723__a = new Array(arguments.length -  4);
while (G__8723__i < G__8723__a.length) {G__8723__a[G__8723__i] = arguments[G__8723__i + 4]; ++G__8723__i;}
G__8722 = new cljs.core.IndexedSeq(G__8723__a,0);
}
return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__8722);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function cljs$core$transient(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function cljs$core$persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var cljs$core$conj_BANG_ = null;
var cljs$core$conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var cljs$core$conj_BANG___1 = (function (coll){
return coll;
});
var cljs$core$conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var cljs$core$conj_BANG___3 = (function() { 
var G__8724__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__8725 = ntcoll;
var G__8726 = cljs.core.first(vals);
var G__8727 = cljs.core.next(vals);
tcoll = G__8725;
val = G__8726;
vals = G__8727;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8724 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__8728__i = 0, G__8728__a = new Array(arguments.length -  2);
while (G__8728__i < G__8728__a.length) {G__8728__a[G__8728__i] = arguments[G__8728__i + 2]; ++G__8728__i;}
  vals = new cljs.core.IndexedSeq(G__8728__a,0);
} 
return G__8724__delegate.call(this,tcoll,val,vals);};
G__8724.cljs$lang$maxFixedArity = 2;
G__8724.cljs$lang$applyTo = (function (arglist__8729){
var tcoll = cljs.core.first(arglist__8729);
arglist__8729 = cljs.core.next(arglist__8729);
var val = cljs.core.first(arglist__8729);
var vals = cljs.core.rest(arglist__8729);
return G__8724__delegate(tcoll,val,vals);
});
G__8724.cljs$core$IFn$_invoke$arity$variadic = G__8724__delegate;
return G__8724;
})()
;
cljs$core$conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj_BANG___0.call(this);
case 1:
return cljs$core$conj_BANG___1.call(this,tcoll);
case 2:
return cljs$core$conj_BANG___2.call(this,tcoll,val);
default:
var G__8730 = null;
if (arguments.length > 2) {
var G__8731__i = 0, G__8731__a = new Array(arguments.length -  2);
while (G__8731__i < G__8731__a.length) {G__8731__a[G__8731__i] = arguments[G__8731__i + 2]; ++G__8731__i;}
G__8730 = new cljs.core.IndexedSeq(G__8731__a,0);
}
return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__8730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var cljs$core$assoc_BANG_ = null;
var cljs$core$assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var cljs$core$assoc_BANG___4 = (function() { 
var G__8732__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__8733 = ntcoll;
var G__8734 = cljs.core.first(kvs);
var G__8735 = cljs.core.second(kvs);
var G__8736 = cljs.core.nnext(kvs);
tcoll = G__8733;
key = G__8734;
val = G__8735;
kvs = G__8736;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8732 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__8737__i = 0, G__8737__a = new Array(arguments.length -  3);
while (G__8737__i < G__8737__a.length) {G__8737__a[G__8737__i] = arguments[G__8737__i + 3]; ++G__8737__i;}
  kvs = new cljs.core.IndexedSeq(G__8737__a,0);
} 
return G__8732__delegate.call(this,tcoll,key,val,kvs);};
G__8732.cljs$lang$maxFixedArity = 3;
G__8732.cljs$lang$applyTo = (function (arglist__8738){
var tcoll = cljs.core.first(arglist__8738);
arglist__8738 = cljs.core.next(arglist__8738);
var key = cljs.core.first(arglist__8738);
arglist__8738 = cljs.core.next(arglist__8738);
var val = cljs.core.first(arglist__8738);
var kvs = cljs.core.rest(arglist__8738);
return G__8732__delegate(tcoll,key,val,kvs);
});
G__8732.cljs$core$IFn$_invoke$arity$variadic = G__8732__delegate;
return G__8732;
})()
;
cljs$core$assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__8739 = null;
if (arguments.length > 3) {
var G__8740__i = 0, G__8740__a = new Array(arguments.length -  3);
while (G__8740__i < G__8740__a.length) {G__8740__a[G__8740__i] = arguments[G__8740__i + 3]; ++G__8740__i;}
G__8739 = new cljs.core.IndexedSeq(G__8740__a,0);
}
return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__8739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var cljs$core$dissoc_BANG_ = null;
var cljs$core$dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var cljs$core$dissoc_BANG___3 = (function() { 
var G__8741__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__8742 = ntcoll;
var G__8743 = cljs.core.first(ks);
var G__8744 = cljs.core.next(ks);
tcoll = G__8742;
key = G__8743;
ks = G__8744;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8741 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__8745__i = 0, G__8745__a = new Array(arguments.length -  2);
while (G__8745__i < G__8745__a.length) {G__8745__a[G__8745__i] = arguments[G__8745__i + 2]; ++G__8745__i;}
  ks = new cljs.core.IndexedSeq(G__8745__a,0);
} 
return G__8741__delegate.call(this,tcoll,key,ks);};
G__8741.cljs$lang$maxFixedArity = 2;
G__8741.cljs$lang$applyTo = (function (arglist__8746){
var tcoll = cljs.core.first(arglist__8746);
arglist__8746 = cljs.core.next(arglist__8746);
var key = cljs.core.first(arglist__8746);
var ks = cljs.core.rest(arglist__8746);
return G__8741__delegate(tcoll,key,ks);
});
G__8741.cljs$core$IFn$_invoke$arity$variadic = G__8741__delegate;
return G__8741;
})()
;
cljs$core$dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return cljs$core$dissoc_BANG___2.call(this,tcoll,key);
default:
var G__8747 = null;
if (arguments.length > 2) {
var G__8748__i = 0, G__8748__a = new Array(arguments.length -  2);
while (G__8748__i < G__8748__a.length) {G__8748__a[G__8748__i] = arguments[G__8748__i + 2]; ++G__8748__i;}
G__8747 = new cljs.core.IndexedSeq(G__8748__a,0);
}
return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__8747);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function cljs$core$pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var cljs$core$disj_BANG_ = null;
var cljs$core$disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var cljs$core$disj_BANG___3 = (function() { 
var G__8749__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__8750 = ntcoll;
var G__8751 = cljs.core.first(vals);
var G__8752 = cljs.core.next(vals);
tcoll = G__8750;
val = G__8751;
vals = G__8752;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__8749 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__8753__i = 0, G__8753__a = new Array(arguments.length -  2);
while (G__8753__i < G__8753__a.length) {G__8753__a[G__8753__i] = arguments[G__8753__i + 2]; ++G__8753__i;}
  vals = new cljs.core.IndexedSeq(G__8753__a,0);
} 
return G__8749__delegate.call(this,tcoll,val,vals);};
G__8749.cljs$lang$maxFixedArity = 2;
G__8749.cljs$lang$applyTo = (function (arglist__8754){
var tcoll = cljs.core.first(arglist__8754);
arglist__8754 = cljs.core.next(arglist__8754);
var val = cljs.core.first(arglist__8754);
var vals = cljs.core.rest(arglist__8754);
return G__8749__delegate(tcoll,val,vals);
});
G__8749.cljs$core$IFn$_invoke$arity$variadic = G__8749__delegate;
return G__8749;
})()
;
cljs$core$disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return cljs$core$disj_BANG___2.call(this,tcoll,val);
default:
var G__8755 = null;
if (arguments.length > 2) {
var G__8756__i = 0, G__8756__a = new Array(arguments.length -  2);
while (G__8756__i < G__8756__a.length) {G__8756__a[G__8756__i] = arguments[G__8756__i + 2]; ++G__8756__i;}
G__8755 = new cljs.core.IndexedSeq(G__8756__a,0);
}
return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__8755);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj_BANG_;
})()
;

cljs.core.apply_to = (function cljs$core$apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a387 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a387);
} else {
var G__8967 = a387;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8967) : f.call(null,G__8967));
}
} else {
var b388 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a387,b388);
} else {
var G__8968 = a387;
var G__8969 = b388;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8968,G__8969) : f.call(null,G__8968,G__8969));
}
} else {
var c389 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a387,b388,c389);
} else {
var G__8970 = a387;
var G__8971 = b388;
var G__8972 = c389;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8970,G__8971,G__8972) : f.call(null,G__8970,G__8971,G__8972));
}
} else {
var d390 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a387,b388,c389,d390);
} else {
var G__8973 = a387;
var G__8974 = b388;
var G__8975 = c389;
var G__8976 = d390;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8973,G__8974,G__8975,G__8976) : f.call(null,G__8973,G__8974,G__8975,G__8976));
}
} else {
var e391 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a387,b388,c389,d390,e391);
} else {
var G__8977 = a387;
var G__8978 = b388;
var G__8979 = c389;
var G__8980 = d390;
var G__8981 = e391;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8977,G__8978,G__8979,G__8980,G__8981) : f.call(null,G__8977,G__8978,G__8979,G__8980,G__8981));
}
} else {
var f392 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a387,b388,c389,d390,e391,f392);
} else {
var G__8982 = a387;
var G__8983 = b388;
var G__8984 = c389;
var G__8985 = d390;
var G__8986 = e391;
var G__8987 = f392;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8982,G__8983,G__8984,G__8985,G__8986,G__8987) : f.call(null,G__8982,G__8983,G__8984,G__8985,G__8986,G__8987));
}
} else {
var g393 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a387,b388,c389,d390,e391,f392,g393);
} else {
var G__8988 = a387;
var G__8989 = b388;
var G__8990 = c389;
var G__8991 = d390;
var G__8992 = e391;
var G__8993 = f392;
var G__8994 = g393;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__8988,G__8989,G__8990,G__8991,G__8992,G__8993,G__8994) : f.call(null,G__8988,G__8989,G__8990,G__8991,G__8992,G__8993,G__8994));
}
} else {
var h394 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a387,b388,c389,d390,e391,f392,g393,h394);
} else {
var G__8995 = a387;
var G__8996 = b388;
var G__8997 = c389;
var G__8998 = d390;
var G__8999 = e391;
var G__9000 = f392;
var G__9001 = g393;
var G__9002 = h394;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__8995,G__8996,G__8997,G__8998,G__8999,G__9000,G__9001,G__9002) : f.call(null,G__8995,G__8996,G__8997,G__8998,G__8999,G__9000,G__9001,G__9002));
}
} else {
var i395 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a387,b388,c389,d390,e391,f392,g393,h394,i395);
} else {
var G__9003 = a387;
var G__9004 = b388;
var G__9005 = c389;
var G__9006 = d390;
var G__9007 = e391;
var G__9008 = f392;
var G__9009 = g393;
var G__9010 = h394;
var G__9011 = i395;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__9003,G__9004,G__9005,G__9006,G__9007,G__9008,G__9009,G__9010,G__9011) : f.call(null,G__9003,G__9004,G__9005,G__9006,G__9007,G__9008,G__9009,G__9010,G__9011));
}
} else {
var j396 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a387,b388,c389,d390,e391,f392,g393,h394,i395,j396);
} else {
var G__9012 = a387;
var G__9013 = b388;
var G__9014 = c389;
var G__9015 = d390;
var G__9016 = e391;
var G__9017 = f392;
var G__9018 = g393;
var G__9019 = h394;
var G__9020 = i395;
var G__9021 = j396;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__9012,G__9013,G__9014,G__9015,G__9016,G__9017,G__9018,G__9019,G__9020,G__9021) : f.call(null,G__9012,G__9013,G__9014,G__9015,G__9016,G__9017,G__9018,G__9019,G__9020,G__9021));
}
} else {
var k397 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a387,b388,c389,d390,e391,f392,g393,h394,i395,j396,k397);
} else {
var G__9022 = a387;
var G__9023 = b388;
var G__9024 = c389;
var G__9025 = d390;
var G__9026 = e391;
var G__9027 = f392;
var G__9028 = g393;
var G__9029 = h394;
var G__9030 = i395;
var G__9031 = j396;
var G__9032 = k397;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__9022,G__9023,G__9024,G__9025,G__9026,G__9027,G__9028,G__9029,G__9030,G__9031,G__9032) : f.call(null,G__9022,G__9023,G__9024,G__9025,G__9026,G__9027,G__9028,G__9029,G__9030,G__9031,G__9032));
}
} else {
var l398 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a387,b388,c389,d390,e391,f392,g393,h394,i395,j396,k397,l398);
} else {
var G__9033 = a387;
var G__9034 = b388;
var G__9035 = c389;
var G__9036 = d390;
var G__9037 = e391;
var G__9038 = f392;
var G__9039 = g393;
var G__9040 = h394;
var G__9041 = i395;
var G__9042 = j396;
var G__9043 = k397;
var G__9044 = l398;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__9033,G__9034,G__9035,G__9036,G__9037,G__9038,G__9039,G__9040,G__9041,G__9042,G__9043,G__9044) : f.call(null,G__9033,G__9034,G__9035,G__9036,G__9037,G__9038,G__9039,G__9040,G__9041,G__9042,G__9043,G__9044));
}
} else {
var m399 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a387,b388,c389,d390,e391,f392,g393,h394,i395,j396,k397,l398,m399);
} else {
var G__9045 = a387;
var G__9046 = b388;
var G__9047 = c389;
var G__9048 = d390;
var G__9049 = e391;
var G__9050 = f392;
var G__9051 = g393;
var G__9052 = h394;
var G__9053 = i395;
var G__9054 = j396;
var G__9055 = k397;
var G__9056 = l398;
var G__9057 = m399;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__9045,G__9046,G__9047,G__9048,G__9049,G__9050,G__9051,G__9052,G__9053,G__9054,G__9055,G__9056,G__9057) : f.call(null,G__9045,G__9046,G__9047,G__9048,G__9049,G__9050,G__9051,G__9052,G__9053,G__9054,G__9055,G__9056,G__9057));
}
} else {
var n400 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a387,b388,c389,d390,e391,f392,g393,h394,i395,j396,k397,l398,m399,n400);
} else {
var G__9058 = a387;
var G__9059 = b388;
var G__9060 = c389;
var G__9061 = d390;
var G__9062 = e391;
var G__9063 = f392;
var G__9064 = g393;
var G__9065 = h394;
var G__9066 = i395;
var G__9067 = j396;
var G__9068 = k397;
var G__9069 = l398;
var G__9070 = m399;
var G__9071 = n400;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__9058,G__9059,G__9060,G__9061,G__9062,G__9063,G__9064,G__9065,G__9066,G__9067,G__9068,G__9069,G__9070,G__9071) : f.call(null,G__9058,G__9059,G__9060,G__9061,G__9062,G__9063,G__9064,G__9065,G__9066,G__9067,G__9068,G__9069,G__9070,G__9071));
}
} else {
var o401 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a387,b388,c389,d390,e391,f392,g393,h394,i395,j396,k397,l398,m399,n400,o401);
} else {
var G__9072 = a387;
var G__9073 = b388;
var G__9074 = c389;
var G__9075 = d390;
var G__9076 = e391;
var G__9077 = f392;
var G__9078 = g393;
var G__9079 = h394;
var G__9080 = i395;
var G__9081 = j396;
var G__9082 = k397;
var G__9083 = l398;
var G__9084 = m399;
var G__9085 = n400;
var G__9086 = o401;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__9072,G__9073,G__9074,G__9075,G__9076,G__9077,G__9078,G__9079,G__9080,G__9081,G__9082,G__9083,G__9084,G__9085,G__9086) : f.call(null,G__9072,G__9073,G__9074,G__9075,G__9076,G__9077,G__9078,G__9079,G__9080,G__9081,G__9082,G__9083,G__9084,G__9085,G__9086));
}
} else {
var p402 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a387,b388,c389,d390,e391,f392,g393,h394,i395,j396,k397,l398,m399,n400,o401,p402);
} else {
var G__9087 = a387;
var G__9088 = b388;
var G__9089 = c389;
var G__9090 = d390;
var G__9091 = e391;
var G__9092 = f392;
var G__9093 = g393;
var G__9094 = h394;
var G__9095 = i395;
var G__9096 = j396;
var G__9097 = k397;
var G__9098 = l398;
var G__9099 = m399;
var G__9100 = n400;
var G__9101 = o401;
var G__9102 = p402;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__9087,G__9088,G__9089,G__9090,G__9091,G__9092,G__9093,G__9094,G__9095,G__9096,G__9097,G__9098,G__9099,G__9100,G__9101,G__9102) : f.call(null,G__9087,G__9088,G__9089,G__9090,G__9091,G__9092,G__9093,G__9094,G__9095,G__9096,G__9097,G__9098,G__9099,G__9100,G__9101,G__9102));
}
} else {
var q403 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a387,b388,c389,d390,e391,f392,g393,h394,i395,j396,k397,l398,m399,n400,o401,p402,q403);
} else {
var G__9103 = a387;
var G__9104 = b388;
var G__9105 = c389;
var G__9106 = d390;
var G__9107 = e391;
var G__9108 = f392;
var G__9109 = g393;
var G__9110 = h394;
var G__9111 = i395;
var G__9112 = j396;
var G__9113 = k397;
var G__9114 = l398;
var G__9115 = m399;
var G__9116 = n400;
var G__9117 = o401;
var G__9118 = p402;
var G__9119 = q403;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__9103,G__9104,G__9105,G__9106,G__9107,G__9108,G__9109,G__9110,G__9111,G__9112,G__9113,G__9114,G__9115,G__9116,G__9117,G__9118,G__9119) : f.call(null,G__9103,G__9104,G__9105,G__9106,G__9107,G__9108,G__9109,G__9110,G__9111,G__9112,G__9113,G__9114,G__9115,G__9116,G__9117,G__9118,G__9119));
}
} else {
var r404 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a387,b388,c389,d390,e391,f392,g393,h394,i395,j396,k397,l398,m399,n400,o401,p402,q403,r404);
} else {
var G__9120 = a387;
var G__9121 = b388;
var G__9122 = c389;
var G__9123 = d390;
var G__9124 = e391;
var G__9125 = f392;
var G__9126 = g393;
var G__9127 = h394;
var G__9128 = i395;
var G__9129 = j396;
var G__9130 = k397;
var G__9131 = l398;
var G__9132 = m399;
var G__9133 = n400;
var G__9134 = o401;
var G__9135 = p402;
var G__9136 = q403;
var G__9137 = r404;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__9120,G__9121,G__9122,G__9123,G__9124,G__9125,G__9126,G__9127,G__9128,G__9129,G__9130,G__9131,G__9132,G__9133,G__9134,G__9135,G__9136,G__9137) : f.call(null,G__9120,G__9121,G__9122,G__9123,G__9124,G__9125,G__9126,G__9127,G__9128,G__9129,G__9130,G__9131,G__9132,G__9133,G__9134,G__9135,G__9136,G__9137));
}
} else {
var s405 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a387,b388,c389,d390,e391,f392,g393,h394,i395,j396,k397,l398,m399,n400,o401,p402,q403,r404,s405);
} else {
var G__9138 = a387;
var G__9139 = b388;
var G__9140 = c389;
var G__9141 = d390;
var G__9142 = e391;
var G__9143 = f392;
var G__9144 = g393;
var G__9145 = h394;
var G__9146 = i395;
var G__9147 = j396;
var G__9148 = k397;
var G__9149 = l398;
var G__9150 = m399;
var G__9151 = n400;
var G__9152 = o401;
var G__9153 = p402;
var G__9154 = q403;
var G__9155 = r404;
var G__9156 = s405;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__9138,G__9139,G__9140,G__9141,G__9142,G__9143,G__9144,G__9145,G__9146,G__9147,G__9148,G__9149,G__9150,G__9151,G__9152,G__9153,G__9154,G__9155,G__9156) : f.call(null,G__9138,G__9139,G__9140,G__9141,G__9142,G__9143,G__9144,G__9145,G__9146,G__9147,G__9148,G__9149,G__9150,G__9151,G__9152,G__9153,G__9154,G__9155,G__9156));
}
} else {
var t406 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a387,b388,c389,d390,e391,f392,g393,h394,i395,j396,k397,l398,m399,n400,o401,p402,q403,r404,s405,t406);
} else {
var G__9157 = a387;
var G__9158 = b388;
var G__9159 = c389;
var G__9160 = d390;
var G__9161 = e391;
var G__9162 = f392;
var G__9163 = g393;
var G__9164 = h394;
var G__9165 = i395;
var G__9166 = j396;
var G__9167 = k397;
var G__9168 = l398;
var G__9169 = m399;
var G__9170 = n400;
var G__9171 = o401;
var G__9172 = p402;
var G__9173 = q403;
var G__9174 = r404;
var G__9175 = s405;
var G__9176 = t406;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__9157,G__9158,G__9159,G__9160,G__9161,G__9162,G__9163,G__9164,G__9165,G__9166,G__9167,G__9168,G__9169,G__9170,G__9171,G__9172,G__9173,G__9174,G__9175,G__9176) : f.call(null,G__9157,G__9158,G__9159,G__9160,G__9161,G__9162,G__9163,G__9164,G__9165,G__9166,G__9167,G__9168,G__9169,G__9170,G__9171,G__9172,G__9173,G__9174,G__9175,G__9176));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var cljs$core$apply = null;
var cljs$core$apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var cljs$core$apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__6 = (function() { 
var G__9177__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__9177 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__9178__i = 0, G__9178__a = new Array(arguments.length -  5);
while (G__9178__i < G__9178__a.length) {G__9178__a[G__9178__i] = arguments[G__9178__i + 5]; ++G__9178__i;}
  args = new cljs.core.IndexedSeq(G__9178__a,0);
} 
return G__9177__delegate.call(this,f,a,b,c,d,args);};
G__9177.cljs$lang$maxFixedArity = 5;
G__9177.cljs$lang$applyTo = (function (arglist__9179){
var f = cljs.core.first(arglist__9179);
arglist__9179 = cljs.core.next(arglist__9179);
var a = cljs.core.first(arglist__9179);
arglist__9179 = cljs.core.next(arglist__9179);
var b = cljs.core.first(arglist__9179);
arglist__9179 = cljs.core.next(arglist__9179);
var c = cljs.core.first(arglist__9179);
arglist__9179 = cljs.core.next(arglist__9179);
var d = cljs.core.first(arglist__9179);
var args = cljs.core.rest(arglist__9179);
return G__9177__delegate(f,a,b,c,d,args);
});
G__9177.cljs$core$IFn$_invoke$arity$variadic = G__9177__delegate;
return G__9177;
})()
;
cljs$core$apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$apply__2.call(this,f,a);
case 3:
return cljs$core$apply__3.call(this,f,a,b);
case 4:
return cljs$core$apply__4.call(this,f,a,b,c);
case 5:
return cljs$core$apply__5.call(this,f,a,b,c,d);
default:
var G__9180 = null;
if (arguments.length > 5) {
var G__9181__i = 0, G__9181__a = new Array(arguments.length -  5);
while (G__9181__i < G__9181__a.length) {G__9181__a[G__9181__i] = arguments[G__9181__i + 5]; ++G__9181__i;}
G__9180 = new cljs.core.IndexedSeq(G__9181__a,0);
}
return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__9180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$apply.cljs$lang$maxFixedArity = 5;
cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var cljs$core$vary_meta = null;
var cljs$core$vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__9197 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9197) : f.call(null,G__9197));
})());
});
var cljs$core$vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__9198 = cljs.core.meta(obj);
var G__9199 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9198,G__9199) : f.call(null,G__9198,G__9199));
})());
});
var cljs$core$vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__9200 = cljs.core.meta(obj);
var G__9201 = a;
var G__9202 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9200,G__9201,G__9202) : f.call(null,G__9200,G__9201,G__9202));
})());
});
var cljs$core$vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__9203 = cljs.core.meta(obj);
var G__9204 = a;
var G__9205 = b;
var G__9206 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9203,G__9204,G__9205,G__9206) : f.call(null,G__9203,G__9204,G__9205,G__9206));
})());
});
var cljs$core$vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__9207 = cljs.core.meta(obj);
var G__9208 = a;
var G__9209 = b;
var G__9210 = c;
var G__9211 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9207,G__9208,G__9209,G__9210,G__9211) : f.call(null,G__9207,G__9208,G__9209,G__9210,G__9211));
})());
});
var cljs$core$vary_meta__7 = (function() { 
var G__9212__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__9212 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__9213__i = 0, G__9213__a = new Array(arguments.length -  6);
while (G__9213__i < G__9213__a.length) {G__9213__a[G__9213__i] = arguments[G__9213__i + 6]; ++G__9213__i;}
  args = new cljs.core.IndexedSeq(G__9213__a,0);
} 
return G__9212__delegate.call(this,obj,f,a,b,c,d,args);};
G__9212.cljs$lang$maxFixedArity = 6;
G__9212.cljs$lang$applyTo = (function (arglist__9214){
var obj = cljs.core.first(arglist__9214);
arglist__9214 = cljs.core.next(arglist__9214);
var f = cljs.core.first(arglist__9214);
arglist__9214 = cljs.core.next(arglist__9214);
var a = cljs.core.first(arglist__9214);
arglist__9214 = cljs.core.next(arglist__9214);
var b = cljs.core.first(arglist__9214);
arglist__9214 = cljs.core.next(arglist__9214);
var c = cljs.core.first(arglist__9214);
arglist__9214 = cljs.core.next(arglist__9214);
var d = cljs.core.first(arglist__9214);
var args = cljs.core.rest(arglist__9214);
return G__9212__delegate(obj,f,a,b,c,d,args);
});
G__9212.cljs$core$IFn$_invoke$arity$variadic = G__9212__delegate;
return G__9212;
})()
;
cljs$core$vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$vary_meta__2.call(this,obj,f);
case 3:
return cljs$core$vary_meta__3.call(this,obj,f,a);
case 4:
return cljs$core$vary_meta__4.call(this,obj,f,a,b);
case 5:
return cljs$core$vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return cljs$core$vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__9215 = null;
if (arguments.length > 6) {
var G__9216__i = 0, G__9216__a = new Array(arguments.length -  6);
while (G__9216__i < G__9216__a.length) {G__9216__a[G__9216__i] = arguments[G__9216__i + 6]; ++G__9216__i;}
G__9215 = new cljs.core.IndexedSeq(G__9216__a,0);
}
return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__9215);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var cljs$core$not_EQ_ = null;
var cljs$core$not_EQ___1 = (function (x){
return false;
});
var cljs$core$not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$not_EQ___3 = (function() { 
var G__9217__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__9217 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9218__i = 0, G__9218__a = new Array(arguments.length -  2);
while (G__9218__i < G__9218__a.length) {G__9218__a[G__9218__i] = arguments[G__9218__i + 2]; ++G__9218__i;}
  more = new cljs.core.IndexedSeq(G__9218__a,0);
} 
return G__9217__delegate.call(this,x,y,more);};
G__9217.cljs$lang$maxFixedArity = 2;
G__9217.cljs$lang$applyTo = (function (arglist__9219){
var x = cljs.core.first(arglist__9219);
arglist__9219 = cljs.core.next(arglist__9219);
var y = cljs.core.first(arglist__9219);
var more = cljs.core.rest(arglist__9219);
return G__9217__delegate(x,y,more);
});
G__9217.cljs$core$IFn$_invoke$arity$variadic = G__9217__delegate;
return G__9217;
})()
;
cljs$core$not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$not_EQ___1.call(this,x);
case 2:
return cljs$core$not_EQ___2.call(this,x,y);
default:
var G__9220 = null;
if (arguments.length > 2) {
var G__9221__i = 0, G__9221__a = new Array(arguments.length -  2);
while (G__9221__i < G__9221__a.length) {G__9221__a[G__9221__i] = arguments[G__9221__i + 2]; ++G__9221__i;}
G__9220 = new cljs.core.IndexedSeq(G__9221__a,0);
}
return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9220);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function cljs$core$not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function cljs$core$nil_iter(){
if(typeof cljs.core.t9225 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t9225 = (function (nil_iter,meta9226){
this.nil_iter = nil_iter;
this.meta9226 = meta9226;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t9225.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t9225.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t9225.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t9225.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_9227){
var self__ = this;
var _9227__$1 = this;
return self__.meta9226;
});

cljs.core.t9225.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_9227,meta9226__$1){
var self__ = this;
var _9227__$1 = this;
return (new cljs.core.t9225(self__.nil_iter,meta9226__$1));
});

cljs.core.t9225.cljs$lang$type = true;

cljs.core.t9225.cljs$lang$ctorStr = "cljs.core/t9225";

cljs.core.t9225.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/t9225");
});

cljs.core.__GT_t9225 = (function cljs$core$nil_iter_$___GT_t9225(nil_iter__$1,meta9226){
return (new cljs.core.t9225(nil_iter__$1,meta9226));
});

}

return (new cljs.core.t9225(cljs$core$nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function cljs$core$__GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function cljs$core$string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function cljs$core$__GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function cljs$core$array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function cljs$core$__GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function cljs$core$seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function cljs$core$iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function cljs$core$lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3927__auto__ = !((lt.stepper == null));
if(and__3927__auto__){
return self__.iter.hasNext();
} else {
return and__3927__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__9228 = lt;
var G__9229 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__9228,G__9229) : self__.xform.call(null,G__9228,G__9229));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9230 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9230) : self__.xform.call(null,G__9230));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function cljs$core$__GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function cljs$core$stepper(xform,iter){
var stepfn = (function() {
var cljs$core$stepper_$_stepfn = null;
var cljs$core$stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var cljs$core$stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
return cljs$core$stepper_$_stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__9232 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9232) : xform.call(null,G__9232));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__9234 = cljs.core.next(iters__$1);
iters__$1 = G__9234;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4356__auto___9235 = self__.iters.length;
var i_9236 = (0);
while(true){
if((i_9236 < n__4356__auto___9235)){
(self__.nexts[i_9236] = (self__.iters[i_9236]).next());

var G__9237 = (i_9236 + (1));
i_9236 = G__9237;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3927__auto__ = !((lt.stepper == null));
if(and__3927__auto__){
return this$.hasNext();
} else {
return and__3927__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__9233 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__9233) : self__.xform.call(null,G__9233));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function cljs$core$__GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var cljs$core$multi_stepper = null;
var cljs$core$multi_stepper__2 = (function (xform,iters){
return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var cljs$core$multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var cljs$core$multi_stepper_$_stepfn = null;
var cljs$core$multi_stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var cljs$core$multi_stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$multi_stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$multi_stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$multi_stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
return cljs$core$multi_stepper_$_stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__9242 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__9242) : xform.call(null,G__9242));
})(),iters,nexts));
});
cljs$core$multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return cljs$core$multi_stepper__2.call(this,xform,iters);
case 3:
return cljs$core$multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
return cljs$core$multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function cljs$core$__GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__9243_9247 = cljs.core.seq(colls);
var chunk__9244_9248 = null;
var count__9245_9249 = (0);
var i__9246_9250 = (0);
while(true){
if((i__9246_9250 < count__9245_9249)){
var coll_9251 = chunk__9244_9248.cljs$core$IIndexed$_nth$arity$2(null,i__9246_9250);
iters.push(cljs.core.iter(coll_9251));

var G__9252 = seq__9243_9247;
var G__9253 = chunk__9244_9248;
var G__9254 = count__9245_9249;
var G__9255 = (i__9246_9250 + (1));
seq__9243_9247 = G__9252;
chunk__9244_9248 = G__9253;
count__9245_9249 = G__9254;
i__9246_9250 = G__9255;
continue;
} else {
var temp__4126__auto___9256 = cljs.core.seq(seq__9243_9247);
if(temp__4126__auto___9256){
var seq__9243_9257__$1 = temp__4126__auto___9256;
if(cljs.core.chunked_seq_QMARK_(seq__9243_9257__$1)){
var c__4304__auto___9258 = cljs.core.chunk_first(seq__9243_9257__$1);
var G__9259 = cljs.core.chunk_rest(seq__9243_9257__$1);
var G__9260 = c__4304__auto___9258;
var G__9261 = cljs.core.count(c__4304__auto___9258);
var G__9262 = (0);
seq__9243_9247 = G__9259;
chunk__9244_9248 = G__9260;
count__9245_9249 = G__9261;
i__9246_9250 = G__9262;
continue;
} else {
var coll_9263 = cljs.core.first(seq__9243_9257__$1);
iters.push(cljs.core.iter(coll_9263));

var G__9264 = cljs.core.next(seq__9243_9257__$1);
var G__9265 = null;
var G__9266 = (0);
var G__9267 = (0);
seq__9243_9247 = G__9264;
chunk__9244_9248 = G__9265;
count__9245_9249 = G__9266;
i__9246_9250 = G__9267;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var cljs$core$sequence = null;
var cljs$core$sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3935__auto__ = cljs.core.seq(coll);
if(or__3935__auto__){
return or__3935__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var cljs$core$sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var cljs$core$sequence__3 = (function() { 
var G__9268__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__9268 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9269__i = 0, G__9269__a = new Array(arguments.length -  2);
while (G__9269__i < G__9269__a.length) {G__9269__a[G__9269__i] = arguments[G__9269__i + 2]; ++G__9269__i;}
  colls = new cljs.core.IndexedSeq(G__9269__a,0);
} 
return G__9268__delegate.call(this,xform,coll,colls);};
G__9268.cljs$lang$maxFixedArity = 2;
G__9268.cljs$lang$applyTo = (function (arglist__9270){
var xform = cljs.core.first(arglist__9270);
arglist__9270 = cljs.core.next(arglist__9270);
var coll = cljs.core.first(arglist__9270);
var colls = cljs.core.rest(arglist__9270);
return G__9268__delegate(xform,coll,colls);
});
G__9268.cljs$core$IFn$_invoke$arity$variadic = G__9268__delegate;
return G__9268;
})()
;
cljs$core$sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$sequence__1.call(this,xform);
case 2:
return cljs$core$sequence__2.call(this,xform,coll);
default:
var G__9271 = null;
if (arguments.length > 2) {
var G__9272__i = 0, G__9272__a = new Array(arguments.length -  2);
while (G__9272__i < G__9272__a.length) {G__9272__a[G__9272__i] = arguments[G__9272__i + 2]; ++G__9272__i;}
G__9271 = new cljs.core.IndexedSeq(G__9272__a,0);
}
return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__9271);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sequence.cljs$lang$maxFixedArity = 2;
cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function cljs$core$every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__9274 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9274) : pred.call(null,G__9274));
})())){
var G__9275 = pred;
var G__9276 = cljs.core.next(coll);
pred = G__9275;
coll = G__9276;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function cljs$core$not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function cljs$core$some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3935__auto__ = (function (){var G__9280 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9280) : pred.call(null,G__9280));
})();
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
var G__9281 = pred;
var G__9282 = cljs.core.next(coll);
pred = G__9281;
coll = G__9282;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function cljs$core$not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function cljs$core$even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function cljs$core$odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function cljs$core$complement(f){
return (function() {
var G__9289 = null;
var G__9289__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__9289__1 = (function (x){
return cljs.core.not((function (){var G__9286 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9286) : f.call(null,G__9286));
})());
});
var G__9289__2 = (function (x,y){
return cljs.core.not((function (){var G__9287 = x;
var G__9288 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9287,G__9288) : f.call(null,G__9287,G__9288));
})());
});
var G__9289__3 = (function() { 
var G__9290__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__9290 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__9291__i = 0, G__9291__a = new Array(arguments.length -  2);
while (G__9291__i < G__9291__a.length) {G__9291__a[G__9291__i] = arguments[G__9291__i + 2]; ++G__9291__i;}
  zs = new cljs.core.IndexedSeq(G__9291__a,0);
} 
return G__9290__delegate.call(this,x,y,zs);};
G__9290.cljs$lang$maxFixedArity = 2;
G__9290.cljs$lang$applyTo = (function (arglist__9292){
var x = cljs.core.first(arglist__9292);
arglist__9292 = cljs.core.next(arglist__9292);
var y = cljs.core.first(arglist__9292);
var zs = cljs.core.rest(arglist__9292);
return G__9290__delegate(x,y,zs);
});
G__9290.cljs$core$IFn$_invoke$arity$variadic = G__9290__delegate;
return G__9290;
})()
;
G__9289 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__9289__0.call(this);
case 1:
return G__9289__1.call(this,x);
case 2:
return G__9289__2.call(this,x,y);
default:
var G__9293 = null;
if (arguments.length > 2) {
var G__9294__i = 0, G__9294__a = new Array(arguments.length -  2);
while (G__9294__i < G__9294__a.length) {G__9294__a[G__9294__i] = arguments[G__9294__i + 2]; ++G__9294__i;}
G__9293 = new cljs.core.IndexedSeq(G__9294__a,0);
}
return G__9289__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9293);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9289.cljs$lang$maxFixedArity = 2;
G__9289.cljs$lang$applyTo = G__9289__3.cljs$lang$applyTo;
G__9289.cljs$core$IFn$_invoke$arity$0 = G__9289__0;
G__9289.cljs$core$IFn$_invoke$arity$1 = G__9289__1;
G__9289.cljs$core$IFn$_invoke$arity$2 = G__9289__2;
G__9289.cljs$core$IFn$_invoke$arity$variadic = G__9289__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9289;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function cljs$core$constantly(x){
return (function() { 
var G__9295__delegate = function (args){
return x;
};
var G__9295 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9296__i = 0, G__9296__a = new Array(arguments.length -  0);
while (G__9296__i < G__9296__a.length) {G__9296__a[G__9296__i] = arguments[G__9296__i + 0]; ++G__9296__i;}
  args = new cljs.core.IndexedSeq(G__9296__a,0);
} 
return G__9295__delegate.call(this,args);};
G__9295.cljs$lang$maxFixedArity = 0;
G__9295.cljs$lang$applyTo = (function (arglist__9297){
var args = cljs.core.seq(arglist__9297);
return G__9295__delegate(args);
});
G__9295.cljs$core$IFn$_invoke$arity$variadic = G__9295__delegate;
return G__9295;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var cljs$core$comp = null;
var cljs$core$comp__0 = (function (){
return cljs.core.identity;
});
var cljs$core$comp__1 = (function (f){
return f;
});
var cljs$core$comp__2 = (function (f,g){
return (function() {
var G__9352 = null;
var G__9352__0 = (function (){
var G__9325 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9325) : f.call(null,G__9325));
});
var G__9352__1 = (function (x){
var G__9326 = (function (){var G__9327 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9327) : g.call(null,G__9327));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9326) : f.call(null,G__9326));
});
var G__9352__2 = (function (x,y){
var G__9328 = (function (){var G__9329 = x;
var G__9330 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9329,G__9330) : g.call(null,G__9329,G__9330));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9328) : f.call(null,G__9328));
});
var G__9352__3 = (function (x,y,z){
var G__9331 = (function (){var G__9332 = x;
var G__9333 = y;
var G__9334 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9332,G__9333,G__9334) : g.call(null,G__9332,G__9333,G__9334));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9331) : f.call(null,G__9331));
});
var G__9352__4 = (function() { 
var G__9353__delegate = function (x,y,z,args){
var G__9335 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9335) : f.call(null,G__9335));
};
var G__9353 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9354__i = 0, G__9354__a = new Array(arguments.length -  3);
while (G__9354__i < G__9354__a.length) {G__9354__a[G__9354__i] = arguments[G__9354__i + 3]; ++G__9354__i;}
  args = new cljs.core.IndexedSeq(G__9354__a,0);
} 
return G__9353__delegate.call(this,x,y,z,args);};
G__9353.cljs$lang$maxFixedArity = 3;
G__9353.cljs$lang$applyTo = (function (arglist__9355){
var x = cljs.core.first(arglist__9355);
arglist__9355 = cljs.core.next(arglist__9355);
var y = cljs.core.first(arglist__9355);
arglist__9355 = cljs.core.next(arglist__9355);
var z = cljs.core.first(arglist__9355);
var args = cljs.core.rest(arglist__9355);
return G__9353__delegate(x,y,z,args);
});
G__9353.cljs$core$IFn$_invoke$arity$variadic = G__9353__delegate;
return G__9353;
})()
;
G__9352 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9352__0.call(this);
case 1:
return G__9352__1.call(this,x);
case 2:
return G__9352__2.call(this,x,y);
case 3:
return G__9352__3.call(this,x,y,z);
default:
var G__9356 = null;
if (arguments.length > 3) {
var G__9357__i = 0, G__9357__a = new Array(arguments.length -  3);
while (G__9357__i < G__9357__a.length) {G__9357__a[G__9357__i] = arguments[G__9357__i + 3]; ++G__9357__i;}
G__9356 = new cljs.core.IndexedSeq(G__9357__a,0);
}
return G__9352__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9356);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9352.cljs$lang$maxFixedArity = 3;
G__9352.cljs$lang$applyTo = G__9352__4.cljs$lang$applyTo;
G__9352.cljs$core$IFn$_invoke$arity$0 = G__9352__0;
G__9352.cljs$core$IFn$_invoke$arity$1 = G__9352__1;
G__9352.cljs$core$IFn$_invoke$arity$2 = G__9352__2;
G__9352.cljs$core$IFn$_invoke$arity$3 = G__9352__3;
G__9352.cljs$core$IFn$_invoke$arity$variadic = G__9352__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9352;
})()
});
var cljs$core$comp__3 = (function (f,g,h){
return (function() {
var G__9358 = null;
var G__9358__0 = (function (){
var G__9336 = (function (){var G__9337 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9337) : g.call(null,G__9337));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9336) : f.call(null,G__9336));
});
var G__9358__1 = (function (x){
var G__9338 = (function (){var G__9339 = (function (){var G__9340 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9340) : h.call(null,G__9340));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9339) : g.call(null,G__9339));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9338) : f.call(null,G__9338));
});
var G__9358__2 = (function (x,y){
var G__9341 = (function (){var G__9342 = (function (){var G__9343 = x;
var G__9344 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9343,G__9344) : h.call(null,G__9343,G__9344));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9342) : g.call(null,G__9342));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9341) : f.call(null,G__9341));
});
var G__9358__3 = (function (x,y,z){
var G__9345 = (function (){var G__9346 = (function (){var G__9347 = x;
var G__9348 = y;
var G__9349 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9347,G__9348,G__9349) : h.call(null,G__9347,G__9348,G__9349));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9346) : g.call(null,G__9346));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9345) : f.call(null,G__9345));
});
var G__9358__4 = (function() { 
var G__9359__delegate = function (x,y,z,args){
var G__9350 = (function (){var G__9351 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9351) : g.call(null,G__9351));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9350) : f.call(null,G__9350));
};
var G__9359 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9360__i = 0, G__9360__a = new Array(arguments.length -  3);
while (G__9360__i < G__9360__a.length) {G__9360__a[G__9360__i] = arguments[G__9360__i + 3]; ++G__9360__i;}
  args = new cljs.core.IndexedSeq(G__9360__a,0);
} 
return G__9359__delegate.call(this,x,y,z,args);};
G__9359.cljs$lang$maxFixedArity = 3;
G__9359.cljs$lang$applyTo = (function (arglist__9361){
var x = cljs.core.first(arglist__9361);
arglist__9361 = cljs.core.next(arglist__9361);
var y = cljs.core.first(arglist__9361);
arglist__9361 = cljs.core.next(arglist__9361);
var z = cljs.core.first(arglist__9361);
var args = cljs.core.rest(arglist__9361);
return G__9359__delegate(x,y,z,args);
});
G__9359.cljs$core$IFn$_invoke$arity$variadic = G__9359__delegate;
return G__9359;
})()
;
G__9358 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9358__0.call(this);
case 1:
return G__9358__1.call(this,x);
case 2:
return G__9358__2.call(this,x,y);
case 3:
return G__9358__3.call(this,x,y,z);
default:
var G__9362 = null;
if (arguments.length > 3) {
var G__9363__i = 0, G__9363__a = new Array(arguments.length -  3);
while (G__9363__i < G__9363__a.length) {G__9363__a[G__9363__i] = arguments[G__9363__i + 3]; ++G__9363__i;}
G__9362 = new cljs.core.IndexedSeq(G__9363__a,0);
}
return G__9358__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9362);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9358.cljs$lang$maxFixedArity = 3;
G__9358.cljs$lang$applyTo = G__9358__4.cljs$lang$applyTo;
G__9358.cljs$core$IFn$_invoke$arity$0 = G__9358__0;
G__9358.cljs$core$IFn$_invoke$arity$1 = G__9358__1;
G__9358.cljs$core$IFn$_invoke$arity$2 = G__9358__2;
G__9358.cljs$core$IFn$_invoke$arity$3 = G__9358__3;
G__9358.cljs$core$IFn$_invoke$arity$variadic = G__9358__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9358;
})()
});
var cljs$core$comp__4 = (function() { 
var G__9364__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__9365__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__9366 = cljs.core.first(fs__$2).call(null,ret);
var G__9367 = cljs.core.next(fs__$2);
ret = G__9366;
fs__$2 = G__9367;
continue;
} else {
return ret;
}
break;
}
};
var G__9365 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9368__i = 0, G__9368__a = new Array(arguments.length -  0);
while (G__9368__i < G__9368__a.length) {G__9368__a[G__9368__i] = arguments[G__9368__i + 0]; ++G__9368__i;}
  args = new cljs.core.IndexedSeq(G__9368__a,0);
} 
return G__9365__delegate.call(this,args);};
G__9365.cljs$lang$maxFixedArity = 0;
G__9365.cljs$lang$applyTo = (function (arglist__9369){
var args = cljs.core.seq(arglist__9369);
return G__9365__delegate(args);
});
G__9365.cljs$core$IFn$_invoke$arity$variadic = G__9365__delegate;
return G__9365;
})()
;
;})(fs__$1))
};
var G__9364 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__9370__i = 0, G__9370__a = new Array(arguments.length -  3);
while (G__9370__i < G__9370__a.length) {G__9370__a[G__9370__i] = arguments[G__9370__i + 3]; ++G__9370__i;}
  fs = new cljs.core.IndexedSeq(G__9370__a,0);
} 
return G__9364__delegate.call(this,f1,f2,f3,fs);};
G__9364.cljs$lang$maxFixedArity = 3;
G__9364.cljs$lang$applyTo = (function (arglist__9371){
var f1 = cljs.core.first(arglist__9371);
arglist__9371 = cljs.core.next(arglist__9371);
var f2 = cljs.core.first(arglist__9371);
arglist__9371 = cljs.core.next(arglist__9371);
var f3 = cljs.core.first(arglist__9371);
var fs = cljs.core.rest(arglist__9371);
return G__9364__delegate(f1,f2,f3,fs);
});
G__9364.cljs$core$IFn$_invoke$arity$variadic = G__9364__delegate;
return G__9364;
})()
;
cljs$core$comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return cljs$core$comp__0.call(this);
case 1:
return cljs$core$comp__1.call(this,f1);
case 2:
return cljs$core$comp__2.call(this,f1,f2);
case 3:
return cljs$core$comp__3.call(this,f1,f2,f3);
default:
var G__9372 = null;
if (arguments.length > 3) {
var G__9373__i = 0, G__9373__a = new Array(arguments.length -  3);
while (G__9373__i < G__9373__a.length) {G__9373__a[G__9373__i] = arguments[G__9373__i + 3]; ++G__9373__i;}
G__9372 = new cljs.core.IndexedSeq(G__9373__a,0);
}
return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__9372);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$comp.cljs$lang$maxFixedArity = 3;
cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var cljs$core$partial = null;
var cljs$core$partial__1 = (function (f){
return f;
});
var cljs$core$partial__2 = (function (f,arg1){
return (function() {
var G__9458 = null;
var G__9458__0 = (function (){
var G__9416 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9416) : f.call(null,G__9416));
});
var G__9458__1 = (function (x){
var G__9417 = arg1;
var G__9418 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9417,G__9418) : f.call(null,G__9417,G__9418));
});
var G__9458__2 = (function (x,y){
var G__9419 = arg1;
var G__9420 = x;
var G__9421 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9419,G__9420,G__9421) : f.call(null,G__9419,G__9420,G__9421));
});
var G__9458__3 = (function (x,y,z){
var G__9422 = arg1;
var G__9423 = x;
var G__9424 = y;
var G__9425 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9422,G__9423,G__9424,G__9425) : f.call(null,G__9422,G__9423,G__9424,G__9425));
});
var G__9458__4 = (function() { 
var G__9459__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__9459 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9460__i = 0, G__9460__a = new Array(arguments.length -  3);
while (G__9460__i < G__9460__a.length) {G__9460__a[G__9460__i] = arguments[G__9460__i + 3]; ++G__9460__i;}
  args = new cljs.core.IndexedSeq(G__9460__a,0);
} 
return G__9459__delegate.call(this,x,y,z,args);};
G__9459.cljs$lang$maxFixedArity = 3;
G__9459.cljs$lang$applyTo = (function (arglist__9461){
var x = cljs.core.first(arglist__9461);
arglist__9461 = cljs.core.next(arglist__9461);
var y = cljs.core.first(arglist__9461);
arglist__9461 = cljs.core.next(arglist__9461);
var z = cljs.core.first(arglist__9461);
var args = cljs.core.rest(arglist__9461);
return G__9459__delegate(x,y,z,args);
});
G__9459.cljs$core$IFn$_invoke$arity$variadic = G__9459__delegate;
return G__9459;
})()
;
G__9458 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9458__0.call(this);
case 1:
return G__9458__1.call(this,x);
case 2:
return G__9458__2.call(this,x,y);
case 3:
return G__9458__3.call(this,x,y,z);
default:
var G__9462 = null;
if (arguments.length > 3) {
var G__9463__i = 0, G__9463__a = new Array(arguments.length -  3);
while (G__9463__i < G__9463__a.length) {G__9463__a[G__9463__i] = arguments[G__9463__i + 3]; ++G__9463__i;}
G__9462 = new cljs.core.IndexedSeq(G__9463__a,0);
}
return G__9458__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9458.cljs$lang$maxFixedArity = 3;
G__9458.cljs$lang$applyTo = G__9458__4.cljs$lang$applyTo;
G__9458.cljs$core$IFn$_invoke$arity$0 = G__9458__0;
G__9458.cljs$core$IFn$_invoke$arity$1 = G__9458__1;
G__9458.cljs$core$IFn$_invoke$arity$2 = G__9458__2;
G__9458.cljs$core$IFn$_invoke$arity$3 = G__9458__3;
G__9458.cljs$core$IFn$_invoke$arity$variadic = G__9458__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9458;
})()
});
var cljs$core$partial__3 = (function (f,arg1,arg2){
return (function() {
var G__9464 = null;
var G__9464__0 = (function (){
var G__9426 = arg1;
var G__9427 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9426,G__9427) : f.call(null,G__9426,G__9427));
});
var G__9464__1 = (function (x){
var G__9428 = arg1;
var G__9429 = arg2;
var G__9430 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9428,G__9429,G__9430) : f.call(null,G__9428,G__9429,G__9430));
});
var G__9464__2 = (function (x,y){
var G__9431 = arg1;
var G__9432 = arg2;
var G__9433 = x;
var G__9434 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9431,G__9432,G__9433,G__9434) : f.call(null,G__9431,G__9432,G__9433,G__9434));
});
var G__9464__3 = (function (x,y,z){
var G__9435 = arg1;
var G__9436 = arg2;
var G__9437 = x;
var G__9438 = y;
var G__9439 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9435,G__9436,G__9437,G__9438,G__9439) : f.call(null,G__9435,G__9436,G__9437,G__9438,G__9439));
});
var G__9464__4 = (function() { 
var G__9465__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__9465 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9466__i = 0, G__9466__a = new Array(arguments.length -  3);
while (G__9466__i < G__9466__a.length) {G__9466__a[G__9466__i] = arguments[G__9466__i + 3]; ++G__9466__i;}
  args = new cljs.core.IndexedSeq(G__9466__a,0);
} 
return G__9465__delegate.call(this,x,y,z,args);};
G__9465.cljs$lang$maxFixedArity = 3;
G__9465.cljs$lang$applyTo = (function (arglist__9467){
var x = cljs.core.first(arglist__9467);
arglist__9467 = cljs.core.next(arglist__9467);
var y = cljs.core.first(arglist__9467);
arglist__9467 = cljs.core.next(arglist__9467);
var z = cljs.core.first(arglist__9467);
var args = cljs.core.rest(arglist__9467);
return G__9465__delegate(x,y,z,args);
});
G__9465.cljs$core$IFn$_invoke$arity$variadic = G__9465__delegate;
return G__9465;
})()
;
G__9464 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9464__0.call(this);
case 1:
return G__9464__1.call(this,x);
case 2:
return G__9464__2.call(this,x,y);
case 3:
return G__9464__3.call(this,x,y,z);
default:
var G__9468 = null;
if (arguments.length > 3) {
var G__9469__i = 0, G__9469__a = new Array(arguments.length -  3);
while (G__9469__i < G__9469__a.length) {G__9469__a[G__9469__i] = arguments[G__9469__i + 3]; ++G__9469__i;}
G__9468 = new cljs.core.IndexedSeq(G__9469__a,0);
}
return G__9464__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9468);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9464.cljs$lang$maxFixedArity = 3;
G__9464.cljs$lang$applyTo = G__9464__4.cljs$lang$applyTo;
G__9464.cljs$core$IFn$_invoke$arity$0 = G__9464__0;
G__9464.cljs$core$IFn$_invoke$arity$1 = G__9464__1;
G__9464.cljs$core$IFn$_invoke$arity$2 = G__9464__2;
G__9464.cljs$core$IFn$_invoke$arity$3 = G__9464__3;
G__9464.cljs$core$IFn$_invoke$arity$variadic = G__9464__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9464;
})()
});
var cljs$core$partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__9470 = null;
var G__9470__0 = (function (){
var G__9440 = arg1;
var G__9441 = arg2;
var G__9442 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9440,G__9441,G__9442) : f.call(null,G__9440,G__9441,G__9442));
});
var G__9470__1 = (function (x){
var G__9443 = arg1;
var G__9444 = arg2;
var G__9445 = arg3;
var G__9446 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9443,G__9444,G__9445,G__9446) : f.call(null,G__9443,G__9444,G__9445,G__9446));
});
var G__9470__2 = (function (x,y){
var G__9447 = arg1;
var G__9448 = arg2;
var G__9449 = arg3;
var G__9450 = x;
var G__9451 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__9447,G__9448,G__9449,G__9450,G__9451) : f.call(null,G__9447,G__9448,G__9449,G__9450,G__9451));
});
var G__9470__3 = (function (x,y,z){
var G__9452 = arg1;
var G__9453 = arg2;
var G__9454 = arg3;
var G__9455 = x;
var G__9456 = y;
var G__9457 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__9452,G__9453,G__9454,G__9455,G__9456,G__9457) : f.call(null,G__9452,G__9453,G__9454,G__9455,G__9456,G__9457));
});
var G__9470__4 = (function() { 
var G__9471__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__9471 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9472__i = 0, G__9472__a = new Array(arguments.length -  3);
while (G__9472__i < G__9472__a.length) {G__9472__a[G__9472__i] = arguments[G__9472__i + 3]; ++G__9472__i;}
  args = new cljs.core.IndexedSeq(G__9472__a,0);
} 
return G__9471__delegate.call(this,x,y,z,args);};
G__9471.cljs$lang$maxFixedArity = 3;
G__9471.cljs$lang$applyTo = (function (arglist__9473){
var x = cljs.core.first(arglist__9473);
arglist__9473 = cljs.core.next(arglist__9473);
var y = cljs.core.first(arglist__9473);
arglist__9473 = cljs.core.next(arglist__9473);
var z = cljs.core.first(arglist__9473);
var args = cljs.core.rest(arglist__9473);
return G__9471__delegate(x,y,z,args);
});
G__9471.cljs$core$IFn$_invoke$arity$variadic = G__9471__delegate;
return G__9471;
})()
;
G__9470 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9470__0.call(this);
case 1:
return G__9470__1.call(this,x);
case 2:
return G__9470__2.call(this,x,y);
case 3:
return G__9470__3.call(this,x,y,z);
default:
var G__9474 = null;
if (arguments.length > 3) {
var G__9475__i = 0, G__9475__a = new Array(arguments.length -  3);
while (G__9475__i < G__9475__a.length) {G__9475__a[G__9475__i] = arguments[G__9475__i + 3]; ++G__9475__i;}
G__9474 = new cljs.core.IndexedSeq(G__9475__a,0);
}
return G__9470__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9474);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9470.cljs$lang$maxFixedArity = 3;
G__9470.cljs$lang$applyTo = G__9470__4.cljs$lang$applyTo;
G__9470.cljs$core$IFn$_invoke$arity$0 = G__9470__0;
G__9470.cljs$core$IFn$_invoke$arity$1 = G__9470__1;
G__9470.cljs$core$IFn$_invoke$arity$2 = G__9470__2;
G__9470.cljs$core$IFn$_invoke$arity$3 = G__9470__3;
G__9470.cljs$core$IFn$_invoke$arity$variadic = G__9470__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9470;
})()
});
var cljs$core$partial__5 = (function() { 
var G__9476__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__9477__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__9477 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9478__i = 0, G__9478__a = new Array(arguments.length -  0);
while (G__9478__i < G__9478__a.length) {G__9478__a[G__9478__i] = arguments[G__9478__i + 0]; ++G__9478__i;}
  args = new cljs.core.IndexedSeq(G__9478__a,0);
} 
return G__9477__delegate.call(this,args);};
G__9477.cljs$lang$maxFixedArity = 0;
G__9477.cljs$lang$applyTo = (function (arglist__9479){
var args = cljs.core.seq(arglist__9479);
return G__9477__delegate(args);
});
G__9477.cljs$core$IFn$_invoke$arity$variadic = G__9477__delegate;
return G__9477;
})()
;
};
var G__9476 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__9480__i = 0, G__9480__a = new Array(arguments.length -  4);
while (G__9480__i < G__9480__a.length) {G__9480__a[G__9480__i] = arguments[G__9480__i + 4]; ++G__9480__i;}
  more = new cljs.core.IndexedSeq(G__9480__a,0);
} 
return G__9476__delegate.call(this,f,arg1,arg2,arg3,more);};
G__9476.cljs$lang$maxFixedArity = 4;
G__9476.cljs$lang$applyTo = (function (arglist__9481){
var f = cljs.core.first(arglist__9481);
arglist__9481 = cljs.core.next(arglist__9481);
var arg1 = cljs.core.first(arglist__9481);
arglist__9481 = cljs.core.next(arglist__9481);
var arg2 = cljs.core.first(arglist__9481);
arglist__9481 = cljs.core.next(arglist__9481);
var arg3 = cljs.core.first(arglist__9481);
var more = cljs.core.rest(arglist__9481);
return G__9476__delegate(f,arg1,arg2,arg3,more);
});
G__9476.cljs$core$IFn$_invoke$arity$variadic = G__9476__delegate;
return G__9476;
})()
;
cljs$core$partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$partial__1.call(this,f);
case 2:
return cljs$core$partial__2.call(this,f,arg1);
case 3:
return cljs$core$partial__3.call(this,f,arg1,arg2);
case 4:
return cljs$core$partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__9482 = null;
if (arguments.length > 4) {
var G__9483__i = 0, G__9483__a = new Array(arguments.length -  4);
while (G__9483__i < G__9483__a.length) {G__9483__a[G__9483__i] = arguments[G__9483__i + 4]; ++G__9483__i;}
G__9482 = new cljs.core.IndexedSeq(G__9483__a,0);
}
return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__9482);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partial.cljs$lang$maxFixedArity = 4;
cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var cljs$core$fnil = null;
var cljs$core$fnil__2 = (function (f,x){
return (function() {
var G__9516 = null;
var G__9516__1 = (function (a){
var G__9500 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9500) : f.call(null,G__9500));
});
var G__9516__2 = (function (a,b){
var G__9501 = (((a == null))?x:a);
var G__9502 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9501,G__9502) : f.call(null,G__9501,G__9502));
});
var G__9516__3 = (function (a,b,c){
var G__9503 = (((a == null))?x:a);
var G__9504 = b;
var G__9505 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9503,G__9504,G__9505) : f.call(null,G__9503,G__9504,G__9505));
});
var G__9516__4 = (function() { 
var G__9517__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__9517 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9518__i = 0, G__9518__a = new Array(arguments.length -  3);
while (G__9518__i < G__9518__a.length) {G__9518__a[G__9518__i] = arguments[G__9518__i + 3]; ++G__9518__i;}
  ds = new cljs.core.IndexedSeq(G__9518__a,0);
} 
return G__9517__delegate.call(this,a,b,c,ds);};
G__9517.cljs$lang$maxFixedArity = 3;
G__9517.cljs$lang$applyTo = (function (arglist__9519){
var a = cljs.core.first(arglist__9519);
arglist__9519 = cljs.core.next(arglist__9519);
var b = cljs.core.first(arglist__9519);
arglist__9519 = cljs.core.next(arglist__9519);
var c = cljs.core.first(arglist__9519);
var ds = cljs.core.rest(arglist__9519);
return G__9517__delegate(a,b,c,ds);
});
G__9517.cljs$core$IFn$_invoke$arity$variadic = G__9517__delegate;
return G__9517;
})()
;
G__9516 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__9516__1.call(this,a);
case 2:
return G__9516__2.call(this,a,b);
case 3:
return G__9516__3.call(this,a,b,c);
default:
var G__9520 = null;
if (arguments.length > 3) {
var G__9521__i = 0, G__9521__a = new Array(arguments.length -  3);
while (G__9521__i < G__9521__a.length) {G__9521__a[G__9521__i] = arguments[G__9521__i + 3]; ++G__9521__i;}
G__9520 = new cljs.core.IndexedSeq(G__9521__a,0);
}
return G__9516__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9520);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9516.cljs$lang$maxFixedArity = 3;
G__9516.cljs$lang$applyTo = G__9516__4.cljs$lang$applyTo;
G__9516.cljs$core$IFn$_invoke$arity$1 = G__9516__1;
G__9516.cljs$core$IFn$_invoke$arity$2 = G__9516__2;
G__9516.cljs$core$IFn$_invoke$arity$3 = G__9516__3;
G__9516.cljs$core$IFn$_invoke$arity$variadic = G__9516__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9516;
})()
});
var cljs$core$fnil__3 = (function (f,x,y){
return (function() {
var G__9522 = null;
var G__9522__2 = (function (a,b){
var G__9506 = (((a == null))?x:a);
var G__9507 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9506,G__9507) : f.call(null,G__9506,G__9507));
});
var G__9522__3 = (function (a,b,c){
var G__9508 = (((a == null))?x:a);
var G__9509 = (((b == null))?y:b);
var G__9510 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9508,G__9509,G__9510) : f.call(null,G__9508,G__9509,G__9510));
});
var G__9522__4 = (function() { 
var G__9523__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__9523 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9524__i = 0, G__9524__a = new Array(arguments.length -  3);
while (G__9524__i < G__9524__a.length) {G__9524__a[G__9524__i] = arguments[G__9524__i + 3]; ++G__9524__i;}
  ds = new cljs.core.IndexedSeq(G__9524__a,0);
} 
return G__9523__delegate.call(this,a,b,c,ds);};
G__9523.cljs$lang$maxFixedArity = 3;
G__9523.cljs$lang$applyTo = (function (arglist__9525){
var a = cljs.core.first(arglist__9525);
arglist__9525 = cljs.core.next(arglist__9525);
var b = cljs.core.first(arglist__9525);
arglist__9525 = cljs.core.next(arglist__9525);
var c = cljs.core.first(arglist__9525);
var ds = cljs.core.rest(arglist__9525);
return G__9523__delegate(a,b,c,ds);
});
G__9523.cljs$core$IFn$_invoke$arity$variadic = G__9523__delegate;
return G__9523;
})()
;
G__9522 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__9522__2.call(this,a,b);
case 3:
return G__9522__3.call(this,a,b,c);
default:
var G__9526 = null;
if (arguments.length > 3) {
var G__9527__i = 0, G__9527__a = new Array(arguments.length -  3);
while (G__9527__i < G__9527__a.length) {G__9527__a[G__9527__i] = arguments[G__9527__i + 3]; ++G__9527__i;}
G__9526 = new cljs.core.IndexedSeq(G__9527__a,0);
}
return G__9522__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9526);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9522.cljs$lang$maxFixedArity = 3;
G__9522.cljs$lang$applyTo = G__9522__4.cljs$lang$applyTo;
G__9522.cljs$core$IFn$_invoke$arity$2 = G__9522__2;
G__9522.cljs$core$IFn$_invoke$arity$3 = G__9522__3;
G__9522.cljs$core$IFn$_invoke$arity$variadic = G__9522__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9522;
})()
});
var cljs$core$fnil__4 = (function (f,x,y,z){
return (function() {
var G__9528 = null;
var G__9528__2 = (function (a,b){
var G__9511 = (((a == null))?x:a);
var G__9512 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9511,G__9512) : f.call(null,G__9511,G__9512));
});
var G__9528__3 = (function (a,b,c){
var G__9513 = (((a == null))?x:a);
var G__9514 = (((b == null))?y:b);
var G__9515 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9513,G__9514,G__9515) : f.call(null,G__9513,G__9514,G__9515));
});
var G__9528__4 = (function() { 
var G__9529__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__9529 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__9530__i = 0, G__9530__a = new Array(arguments.length -  3);
while (G__9530__i < G__9530__a.length) {G__9530__a[G__9530__i] = arguments[G__9530__i + 3]; ++G__9530__i;}
  ds = new cljs.core.IndexedSeq(G__9530__a,0);
} 
return G__9529__delegate.call(this,a,b,c,ds);};
G__9529.cljs$lang$maxFixedArity = 3;
G__9529.cljs$lang$applyTo = (function (arglist__9531){
var a = cljs.core.first(arglist__9531);
arglist__9531 = cljs.core.next(arglist__9531);
var b = cljs.core.first(arglist__9531);
arglist__9531 = cljs.core.next(arglist__9531);
var c = cljs.core.first(arglist__9531);
var ds = cljs.core.rest(arglist__9531);
return G__9529__delegate(a,b,c,ds);
});
G__9529.cljs$core$IFn$_invoke$arity$variadic = G__9529__delegate;
return G__9529;
})()
;
G__9528 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__9528__2.call(this,a,b);
case 3:
return G__9528__3.call(this,a,b,c);
default:
var G__9532 = null;
if (arguments.length > 3) {
var G__9533__i = 0, G__9533__a = new Array(arguments.length -  3);
while (G__9533__i < G__9533__a.length) {G__9533__a[G__9533__i] = arguments[G__9533__i + 3]; ++G__9533__i;}
G__9532 = new cljs.core.IndexedSeq(G__9533__a,0);
}
return G__9528__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__9532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9528.cljs$lang$maxFixedArity = 3;
G__9528.cljs$lang$applyTo = G__9528__4.cljs$lang$applyTo;
G__9528.cljs$core$IFn$_invoke$arity$2 = G__9528__2;
G__9528.cljs$core$IFn$_invoke$arity$3 = G__9528__3;
G__9528.cljs$core$IFn$_invoke$arity$variadic = G__9528__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9528;
})()
});
cljs$core$fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return cljs$core$fnil__2.call(this,f,x);
case 3:
return cljs$core$fnil__3.call(this,f,x,y);
case 4:
return cljs$core$fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
return cljs$core$fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var cljs$core$map_indexed = null;
var cljs$core$map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__9564 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__9564) : cljs.core.volatile_BANG_.call(null,G__9564));
})();
return ((function (i){
return (function() {
var G__9594 = null;
var G__9594__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9594__1 = (function (result){
var G__9565 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9565) : rf.call(null,G__9565));
});
var G__9594__2 = (function (result,input){
var G__9566 = result;
var G__9567 = (function (){var G__9568 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__9569 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9568,G__9569) : f.call(null,G__9568,G__9569));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9566,G__9567) : rf.call(null,G__9566,G__9567));
});
G__9594 = function(result,input){
switch(arguments.length){
case 0:
return G__9594__0.call(this);
case 1:
return G__9594__1.call(this,result);
case 2:
return G__9594__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9594.cljs$core$IFn$_invoke$arity$0 = G__9594__0;
G__9594.cljs$core$IFn$_invoke$arity$1 = G__9594__1;
G__9594.cljs$core$IFn$_invoke$arity$2 = G__9594__2;
return G__9594;
})()
;})(i))
});
});
var cljs$core$map_indexed__2 = (function (f,coll){
var mapi = (function cljs$core$map_indexed_$_mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4356__auto___9595 = size;
var i_9596 = (0);
while(true){
if((i_9596 < n__4356__auto___9595)){
cljs.core.chunk_append(b,(function (){var G__9590 = (idx + i_9596);
var G__9591 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9596);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9590,G__9591) : f.call(null,G__9590,G__9591));
})());

var G__9597 = (i_9596 + (1));
i_9596 = G__9597;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map_indexed_$_mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9592 = idx;
var G__9593 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9592,G__9593) : f.call(null,G__9592,G__9593));
})(),cljs$core$map_indexed_$_mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
cljs$core$map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$map_indexed__1.call(this,f);
case 2:
return cljs$core$map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
return cljs$core$map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var cljs$core$keep = null;
var cljs$core$keep__1 = (function (f){
return (function (rf){
return (function() {
var G__9616 = null;
var G__9616__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9616__1 = (function (result){
var G__9610 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9610) : rf.call(null,G__9610));
});
var G__9616__2 = (function (result,input){
var v = (function (){var G__9611 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9611) : f.call(null,G__9611));
})();
if((v == null)){
return result;
} else {
var G__9612 = result;
var G__9613 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9612,G__9613) : rf.call(null,G__9612,G__9613));
}
});
G__9616 = function(result,input){
switch(arguments.length){
case 0:
return G__9616__0.call(this);
case 1:
return G__9616__1.call(this,result);
case 2:
return G__9616__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9616.cljs$core$IFn$_invoke$arity$0 = G__9616__0;
G__9616.cljs$core$IFn$_invoke$arity$1 = G__9616__1;
G__9616.cljs$core$IFn$_invoke$arity$2 = G__9616__2;
return G__9616;
})()
});
});
var cljs$core$keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4356__auto___9617 = size;
var i_9618 = (0);
while(true){
if((i_9618 < n__4356__auto___9617)){
var x_9619 = (function (){var G__9614 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9618);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9614) : f.call(null,G__9614));
})();
if((x_9619 == null)){
} else {
cljs.core.chunk_append(b,x_9619);
}

var G__9620 = (i_9618 + (1));
i_9618 = G__9620;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__9615 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9615) : f.call(null,G__9615));
})();
if((x == null)){
return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$keep = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep__1.call(this,f);
case 2:
return cljs$core$keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
return cljs$core$keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__9621 = this$__$1;
return goog.getUid(G__9621);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__9622 = cljs.core.seq(self__.watches);
var chunk__9623 = null;
var count__9624 = (0);
var i__9625 = (0);
while(true){
if((i__9625 < count__9624)){
var vec__9626 = chunk__9623.cljs$core$IIndexed$_nth$arity$2(null,i__9625);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9626,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9626,(1),null);
var G__9627_9636 = key;
var G__9628_9637 = this$__$1;
var G__9629_9638 = oldval;
var G__9630_9639 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9627_9636,G__9628_9637,G__9629_9638,G__9630_9639) : f.call(null,G__9627_9636,G__9628_9637,G__9629_9638,G__9630_9639));

var G__9640 = seq__9622;
var G__9641 = chunk__9623;
var G__9642 = count__9624;
var G__9643 = (i__9625 + (1));
seq__9622 = G__9640;
chunk__9623 = G__9641;
count__9624 = G__9642;
i__9625 = G__9643;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9622);
if(temp__4126__auto__){
var seq__9622__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9622__$1)){
var c__4304__auto__ = cljs.core.chunk_first(seq__9622__$1);
var G__9644 = cljs.core.chunk_rest(seq__9622__$1);
var G__9645 = c__4304__auto__;
var G__9646 = cljs.core.count(c__4304__auto__);
var G__9647 = (0);
seq__9622 = G__9644;
chunk__9623 = G__9645;
count__9624 = G__9646;
i__9625 = G__9647;
continue;
} else {
var vec__9631 = cljs.core.first(seq__9622__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9631,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9631,(1),null);
var G__9632_9648 = key;
var G__9633_9649 = this$__$1;
var G__9634_9650 = oldval;
var G__9635_9651 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9632_9648,G__9633_9649,G__9634_9650,G__9635_9651) : f.call(null,G__9632_9648,G__9633_9649,G__9634_9650,G__9635_9651));

var G__9652 = cljs.core.next(seq__9622__$1);
var G__9653 = null;
var G__9654 = (0);
var G__9655 = (0);
seq__9622 = G__9652;
chunk__9623 = G__9653;
count__9624 = G__9654;
i__9625 = G__9655;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function cljs$core$__GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var cljs$core$atom = null;
var cljs$core$atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var cljs$core$atom__2 = (function() { 
var G__9659__delegate = function (x,p__9656){
var map__9658 = p__9656;
var map__9658__$1 = ((cljs.core.seq_QMARK_(map__9658))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9658):map__9658);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9658__$1,cljs.core.constant$keyword$validator);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9658__$1,cljs.core.constant$keyword$meta);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__9659 = function (x,var_args){
var p__9656 = null;
if (arguments.length > 1) {
var G__9660__i = 0, G__9660__a = new Array(arguments.length -  1);
while (G__9660__i < G__9660__a.length) {G__9660__a[G__9660__i] = arguments[G__9660__i + 1]; ++G__9660__i;}
  p__9656 = new cljs.core.IndexedSeq(G__9660__a,0);
} 
return G__9659__delegate.call(this,x,p__9656);};
G__9659.cljs$lang$maxFixedArity = 1;
G__9659.cljs$lang$applyTo = (function (arglist__9661){
var x = cljs.core.first(arglist__9661);
var p__9656 = cljs.core.rest(arglist__9661);
return G__9659__delegate(x,p__9656);
});
G__9659.cljs$core$IFn$_invoke$arity$variadic = G__9659__delegate;
return G__9659;
})()
;
cljs$core$atom = function(x,var_args){
var p__9656 = var_args;
switch(arguments.length){
case 1:
return cljs$core$atom__1.call(this,x);
default:
var G__9662 = null;
if (arguments.length > 1) {
var G__9663__i = 0, G__9663__a = new Array(arguments.length -  1);
while (G__9663__i < G__9663__a.length) {G__9663__a[G__9663__i] = arguments[G__9663__i + 1]; ++G__9663__i;}
G__9662 = new cljs.core.IndexedSeq(G__9663__a,0);
}
return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__9662);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$atom.cljs$lang$maxFixedArity = 1;
cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function cljs$core$reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__9666 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__9666) : validate.call(null,G__9666));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__9667 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__9667) : cljs.core.pr_str.call(null,G__9667));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var cljs$core$swap_BANG_ = null;
var cljs$core$swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9674 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9674) : f.call(null,G__9674));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var cljs$core$swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9675 = a.state;
var G__9676 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9675,G__9676) : f.call(null,G__9675,G__9676));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var cljs$core$swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__9677 = a.state;
var G__9678 = x;
var G__9679 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9677,G__9678,G__9679) : f.call(null,G__9677,G__9678,G__9679));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var cljs$core$swap_BANG___5 = (function() { 
var G__9680__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__9680 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__9681__i = 0, G__9681__a = new Array(arguments.length -  4);
while (G__9681__i < G__9681__a.length) {G__9681__a[G__9681__i] = arguments[G__9681__i + 4]; ++G__9681__i;}
  more = new cljs.core.IndexedSeq(G__9681__a,0);
} 
return G__9680__delegate.call(this,a,f,x,y,more);};
G__9680.cljs$lang$maxFixedArity = 4;
G__9680.cljs$lang$applyTo = (function (arglist__9682){
var a = cljs.core.first(arglist__9682);
arglist__9682 = cljs.core.next(arglist__9682);
var f = cljs.core.first(arglist__9682);
arglist__9682 = cljs.core.next(arglist__9682);
var x = cljs.core.first(arglist__9682);
arglist__9682 = cljs.core.next(arglist__9682);
var y = cljs.core.first(arglist__9682);
var more = cljs.core.rest(arglist__9682);
return G__9680__delegate(a,f,x,y,more);
});
G__9680.cljs$core$IFn$_invoke$arity$variadic = G__9680__delegate;
return G__9680;
})()
;
cljs$core$swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$swap_BANG___2.call(this,a,f);
case 3:
return cljs$core$swap_BANG___3.call(this,a,f,x);
case 4:
return cljs$core$swap_BANG___4.call(this,a,f,x,y);
default:
var G__9683 = null;
if (arguments.length > 4) {
var G__9684__i = 0, G__9684__a = new Array(arguments.length -  4);
while (G__9684__i < G__9684__a.length) {G__9684__a[G__9684__i] = arguments[G__9684__i + 4]; ++G__9684__i;}
G__9683 = new cljs.core.IndexedSeq(G__9684__a,0);
}
return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__9683);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function cljs$core$compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function cljs$core$set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function cljs$core$get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function cljs$core$__GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function cljs$core$volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function cljs$core$volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function cljs$core$vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var cljs$core$keep_indexed = null;
var cljs$core$keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__9751 = null;
var G__9751__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9751__1 = (function (result){
var G__9718 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9718) : rf.call(null,G__9718));
});
var G__9751__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__9719 = i;
var G__9720 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9719,G__9720) : f.call(null,G__9719,G__9720));
})();
if((v == null)){
return result;
} else {
var G__9721 = result;
var G__9722 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9721,G__9722) : rf.call(null,G__9721,G__9722));
}
});
G__9751 = function(result,input){
switch(arguments.length){
case 0:
return G__9751__0.call(this);
case 1:
return G__9751__1.call(this,result);
case 2:
return G__9751__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9751.cljs$core$IFn$_invoke$arity$0 = G__9751__0;
G__9751.cljs$core$IFn$_invoke$arity$1 = G__9751__1;
G__9751.cljs$core$IFn$_invoke$arity$2 = G__9751__2;
return G__9751;
})()
;})(ia))
});
});
var cljs$core$keep_indexed__2 = (function (f,coll){
var keepi = (function cljs$core$keep_indexed_$_keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4356__auto___9752 = size;
var i_9753 = (0);
while(true){
if((i_9753 < n__4356__auto___9752)){
var x_9754 = (function (){var G__9747 = (idx + i_9753);
var G__9748 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9753);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9747,G__9748) : f.call(null,G__9747,G__9748));
})();
if((x_9754 == null)){
} else {
cljs.core.chunk_append(b,x_9754);
}

var G__9755 = (i_9753 + (1));
i_9753 = G__9755;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep_indexed_$_keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__9749 = idx;
var G__9750 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9749,G__9750) : f.call(null,G__9749,G__9750));
})();
if((x == null)){
return cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
cljs$core$keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep_indexed__1.call(this,f);
case 2:
return cljs$core$keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
return cljs$core$keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var cljs$core$every_pred = null;
var cljs$core$every_pred__1 = (function (p){
return (function() {
var cljs$core$every_pred_$_ep1 = null;
var cljs$core$every_pred_$_ep1__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__9969 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9969) : p.call(null,G__9969));
})());
});
var cljs$core$every_pred_$_ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3927__auto__ = (function (){var G__9971 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9971) : p.call(null,G__9971));
})();
if(cljs.core.truth_(and__3927__auto__)){
var G__9972 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9972) : p.call(null,G__9972));
} else {
return and__3927__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3927__auto__ = (function (){var G__9974 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9974) : p.call(null,G__9974));
})();
if(cljs.core.truth_(and__3927__auto__)){
var and__3927__auto____$1 = (function (){var G__9976 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9976) : p.call(null,G__9976));
})();
if(cljs.core.truth_(and__3927__auto____$1)){
var G__9977 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9977) : p.call(null,G__9977));
} else {
return and__3927__auto____$1;
}
} else {
return and__3927__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__4 = (function() { 
var G__10146__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__10146 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10147__i = 0, G__10147__a = new Array(arguments.length -  3);
while (G__10147__i < G__10147__a.length) {G__10147__a[G__10147__i] = arguments[G__10147__i + 3]; ++G__10147__i;}
  args = new cljs.core.IndexedSeq(G__10147__a,0);
} 
return G__10146__delegate.call(this,x,y,z,args);};
G__10146.cljs$lang$maxFixedArity = 3;
G__10146.cljs$lang$applyTo = (function (arglist__10148){
var x = cljs.core.first(arglist__10148);
arglist__10148 = cljs.core.next(arglist__10148);
var y = cljs.core.first(arglist__10148);
arglist__10148 = cljs.core.next(arglist__10148);
var z = cljs.core.first(arglist__10148);
var args = cljs.core.rest(arglist__10148);
return G__10146__delegate(x,y,z,args);
});
G__10146.cljs$core$IFn$_invoke$arity$variadic = G__10146__delegate;
return G__10146;
})()
;
cljs$core$every_pred_$_ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep1__0.call(this);
case 1:
return cljs$core$every_pred_$_ep1__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep1__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep1__3.call(this,x,y,z);
default:
var G__10149 = null;
if (arguments.length > 3) {
var G__10150__i = 0, G__10150__a = new Array(arguments.length -  3);
while (G__10150__i < G__10150__a.length) {G__10150__a[G__10150__i] = arguments[G__10150__i + 3]; ++G__10150__i;}
G__10149 = new cljs.core.IndexedSeq(G__10150__a,0);
}
return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10149);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep1;
})()
});
var cljs$core$every_pred__2 = (function (p1,p2){
return (function() {
var cljs$core$every_pred_$_ep2 = null;
var cljs$core$every_pred_$_ep2__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3927__auto__ = (function (){var G__10009 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10009) : p1.call(null,G__10009));
})();
if(cljs.core.truth_(and__3927__auto__)){
var G__10010 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10010) : p2.call(null,G__10010));
} else {
return and__3927__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3927__auto__ = (function (){var G__10012 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10012) : p1.call(null,G__10012));
})();
if(cljs.core.truth_(and__3927__auto__)){
var and__3927__auto____$1 = (function (){var G__10014 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10014) : p1.call(null,G__10014));
})();
if(cljs.core.truth_(and__3927__auto____$1)){
var and__3927__auto____$2 = (function (){var G__10016 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10016) : p2.call(null,G__10016));
})();
if(cljs.core.truth_(and__3927__auto____$2)){
var G__10017 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10017) : p2.call(null,G__10017));
} else {
return and__3927__auto____$2;
}
} else {
return and__3927__auto____$1;
}
} else {
return and__3927__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3927__auto__ = (function (){var G__10019 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10019) : p1.call(null,G__10019));
})();
if(cljs.core.truth_(and__3927__auto__)){
var and__3927__auto____$1 = (function (){var G__10021 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10021) : p1.call(null,G__10021));
})();
if(cljs.core.truth_(and__3927__auto____$1)){
var and__3927__auto____$2 = (function (){var G__10023 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10023) : p1.call(null,G__10023));
})();
if(cljs.core.truth_(and__3927__auto____$2)){
var and__3927__auto____$3 = (function (){var G__10025 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10025) : p2.call(null,G__10025));
})();
if(cljs.core.truth_(and__3927__auto____$3)){
var and__3927__auto____$4 = (function (){var G__10027 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10027) : p2.call(null,G__10027));
})();
if(cljs.core.truth_(and__3927__auto____$4)){
var G__10028 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10028) : p2.call(null,G__10028));
} else {
return and__3927__auto____$4;
}
} else {
return and__3927__auto____$3;
}
} else {
return and__3927__auto____$2;
}
} else {
return and__3927__auto____$1;
}
} else {
return and__3927__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__4 = (function() { 
var G__10151__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__9756_SHARP_){
var and__3927__auto__ = (function (){var G__10033 = p1__9756_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10033) : p1.call(null,G__10033));
})();
if(cljs.core.truth_(and__3927__auto__)){
var G__10034 = p1__9756_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10034) : p2.call(null,G__10034));
} else {
return and__3927__auto__;
}
}),args)));
};
var G__10151 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10152__i = 0, G__10152__a = new Array(arguments.length -  3);
while (G__10152__i < G__10152__a.length) {G__10152__a[G__10152__i] = arguments[G__10152__i + 3]; ++G__10152__i;}
  args = new cljs.core.IndexedSeq(G__10152__a,0);
} 
return G__10151__delegate.call(this,x,y,z,args);};
G__10151.cljs$lang$maxFixedArity = 3;
G__10151.cljs$lang$applyTo = (function (arglist__10153){
var x = cljs.core.first(arglist__10153);
arglist__10153 = cljs.core.next(arglist__10153);
var y = cljs.core.first(arglist__10153);
arglist__10153 = cljs.core.next(arglist__10153);
var z = cljs.core.first(arglist__10153);
var args = cljs.core.rest(arglist__10153);
return G__10151__delegate(x,y,z,args);
});
G__10151.cljs$core$IFn$_invoke$arity$variadic = G__10151__delegate;
return G__10151;
})()
;
cljs$core$every_pred_$_ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep2__0.call(this);
case 1:
return cljs$core$every_pred_$_ep2__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep2__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep2__3.call(this,x,y,z);
default:
var G__10154 = null;
if (arguments.length > 3) {
var G__10155__i = 0, G__10155__a = new Array(arguments.length -  3);
while (G__10155__i < G__10155__a.length) {G__10155__a[G__10155__i] = arguments[G__10155__i + 3]; ++G__10155__i;}
G__10154 = new cljs.core.IndexedSeq(G__10155__a,0);
}
return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10154);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep2;
})()
});
var cljs$core$every_pred__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$every_pred_$_ep3 = null;
var cljs$core$every_pred_$_ep3__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3927__auto__ = (function (){var G__10080 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10080) : p1.call(null,G__10080));
})();
if(cljs.core.truth_(and__3927__auto__)){
var and__3927__auto____$1 = (function (){var G__10082 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10082) : p2.call(null,G__10082));
})();
if(cljs.core.truth_(and__3927__auto____$1)){
var G__10083 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10083) : p3.call(null,G__10083));
} else {
return and__3927__auto____$1;
}
} else {
return and__3927__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3927__auto__ = (function (){var G__10085 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10085) : p1.call(null,G__10085));
})();
if(cljs.core.truth_(and__3927__auto__)){
var and__3927__auto____$1 = (function (){var G__10087 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10087) : p2.call(null,G__10087));
})();
if(cljs.core.truth_(and__3927__auto____$1)){
var and__3927__auto____$2 = (function (){var G__10089 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10089) : p3.call(null,G__10089));
})();
if(cljs.core.truth_(and__3927__auto____$2)){
var and__3927__auto____$3 = (function (){var G__10091 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10091) : p1.call(null,G__10091));
})();
if(cljs.core.truth_(and__3927__auto____$3)){
var and__3927__auto____$4 = (function (){var G__10093 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10093) : p2.call(null,G__10093));
})();
if(cljs.core.truth_(and__3927__auto____$4)){
var G__10094 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10094) : p3.call(null,G__10094));
} else {
return and__3927__auto____$4;
}
} else {
return and__3927__auto____$3;
}
} else {
return and__3927__auto____$2;
}
} else {
return and__3927__auto____$1;
}
} else {
return and__3927__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3927__auto__ = (function (){var G__10096 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10096) : p1.call(null,G__10096));
})();
if(cljs.core.truth_(and__3927__auto__)){
var and__3927__auto____$1 = (function (){var G__10098 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10098) : p2.call(null,G__10098));
})();
if(cljs.core.truth_(and__3927__auto____$1)){
var and__3927__auto____$2 = (function (){var G__10100 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10100) : p3.call(null,G__10100));
})();
if(cljs.core.truth_(and__3927__auto____$2)){
var and__3927__auto____$3 = (function (){var G__10102 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10102) : p1.call(null,G__10102));
})();
if(cljs.core.truth_(and__3927__auto____$3)){
var and__3927__auto____$4 = (function (){var G__10104 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10104) : p2.call(null,G__10104));
})();
if(cljs.core.truth_(and__3927__auto____$4)){
var and__3927__auto____$5 = (function (){var G__10106 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10106) : p3.call(null,G__10106));
})();
if(cljs.core.truth_(and__3927__auto____$5)){
var and__3927__auto____$6 = (function (){var G__10108 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10108) : p1.call(null,G__10108));
})();
if(cljs.core.truth_(and__3927__auto____$6)){
var and__3927__auto____$7 = (function (){var G__10110 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10110) : p2.call(null,G__10110));
})();
if(cljs.core.truth_(and__3927__auto____$7)){
var G__10111 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10111) : p3.call(null,G__10111));
} else {
return and__3927__auto____$7;
}
} else {
return and__3927__auto____$6;
}
} else {
return and__3927__auto____$5;
}
} else {
return and__3927__auto____$4;
}
} else {
return and__3927__auto____$3;
}
} else {
return and__3927__auto____$2;
}
} else {
return and__3927__auto____$1;
}
} else {
return and__3927__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__4 = (function() { 
var G__10156__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__9757_SHARP_){
var and__3927__auto__ = (function (){var G__10118 = p1__9757_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10118) : p1.call(null,G__10118));
})();
if(cljs.core.truth_(and__3927__auto__)){
var and__3927__auto____$1 = (function (){var G__10120 = p1__9757_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10120) : p2.call(null,G__10120));
})();
if(cljs.core.truth_(and__3927__auto____$1)){
var G__10121 = p1__9757_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10121) : p3.call(null,G__10121));
} else {
return and__3927__auto____$1;
}
} else {
return and__3927__auto__;
}
}),args)));
};
var G__10156 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10157__i = 0, G__10157__a = new Array(arguments.length -  3);
while (G__10157__i < G__10157__a.length) {G__10157__a[G__10157__i] = arguments[G__10157__i + 3]; ++G__10157__i;}
  args = new cljs.core.IndexedSeq(G__10157__a,0);
} 
return G__10156__delegate.call(this,x,y,z,args);};
G__10156.cljs$lang$maxFixedArity = 3;
G__10156.cljs$lang$applyTo = (function (arglist__10158){
var x = cljs.core.first(arglist__10158);
arglist__10158 = cljs.core.next(arglist__10158);
var y = cljs.core.first(arglist__10158);
arglist__10158 = cljs.core.next(arglist__10158);
var z = cljs.core.first(arglist__10158);
var args = cljs.core.rest(arglist__10158);
return G__10156__delegate(x,y,z,args);
});
G__10156.cljs$core$IFn$_invoke$arity$variadic = G__10156__delegate;
return G__10156;
})()
;
cljs$core$every_pred_$_ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep3__0.call(this);
case 1:
return cljs$core$every_pred_$_ep3__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep3__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep3__3.call(this,x,y,z);
default:
var G__10159 = null;
if (arguments.length > 3) {
var G__10160__i = 0, G__10160__a = new Array(arguments.length -  3);
while (G__10160__i < G__10160__a.length) {G__10160__a[G__10160__i] = arguments[G__10160__i + 3]; ++G__10160__i;}
G__10159 = new cljs.core.IndexedSeq(G__10160__a,0);
}
return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10159);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep3;
})()
});
var cljs$core$every_pred__4 = (function() { 
var G__10161__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$every_pred_$_epn = null;
var cljs$core$every_pred_$_epn__0 = (function (){
return true;
});
var cljs$core$every_pred_$_epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9758_SHARP_){
var G__10137 = x;
return (p1__9758_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9758_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10137) : p1__9758_SHARP_.call(null,G__10137));
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9759_SHARP_){
var and__3927__auto__ = (function (){var G__10139 = x;
return (p1__9759_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9759_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10139) : p1__9759_SHARP_.call(null,G__10139));
})();
if(cljs.core.truth_(and__3927__auto__)){
var G__10140 = y;
return (p1__9759_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9759_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10140) : p1__9759_SHARP_.call(null,G__10140));
} else {
return and__3927__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9760_SHARP_){
var and__3927__auto__ = (function (){var G__10142 = x;
return (p1__9760_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9760_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10142) : p1__9760_SHARP_.call(null,G__10142));
})();
if(cljs.core.truth_(and__3927__auto__)){
var and__3927__auto____$1 = (function (){var G__10144 = y;
return (p1__9760_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9760_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10144) : p1__9760_SHARP_.call(null,G__10144));
})();
if(cljs.core.truth_(and__3927__auto____$1)){
var G__10145 = z;
return (p1__9760_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9760_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10145) : p1__9760_SHARP_.call(null,G__10145));
} else {
return and__3927__auto____$1;
}
} else {
return and__3927__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__4 = (function() { 
var G__10162__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__9761_SHARP_){
return cljs.core.every_QMARK_(p1__9761_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__10162 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10163__i = 0, G__10163__a = new Array(arguments.length -  3);
while (G__10163__i < G__10163__a.length) {G__10163__a[G__10163__i] = arguments[G__10163__i + 3]; ++G__10163__i;}
  args = new cljs.core.IndexedSeq(G__10163__a,0);
} 
return G__10162__delegate.call(this,x,y,z,args);};
G__10162.cljs$lang$maxFixedArity = 3;
G__10162.cljs$lang$applyTo = (function (arglist__10164){
var x = cljs.core.first(arglist__10164);
arglist__10164 = cljs.core.next(arglist__10164);
var y = cljs.core.first(arglist__10164);
arglist__10164 = cljs.core.next(arglist__10164);
var z = cljs.core.first(arglist__10164);
var args = cljs.core.rest(arglist__10164);
return G__10162__delegate(x,y,z,args);
});
G__10162.cljs$core$IFn$_invoke$arity$variadic = G__10162__delegate;
return G__10162;
})()
;
cljs$core$every_pred_$_epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_epn__0.call(this);
case 1:
return cljs$core$every_pred_$_epn__1.call(this,x);
case 2:
return cljs$core$every_pred_$_epn__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_epn__3.call(this,x,y,z);
default:
var G__10165 = null;
if (arguments.length > 3) {
var G__10166__i = 0, G__10166__a = new Array(arguments.length -  3);
while (G__10166__i < G__10166__a.length) {G__10166__a[G__10166__i] = arguments[G__10166__i + 3]; ++G__10166__i;}
G__10165 = new cljs.core.IndexedSeq(G__10166__a,0);
}
return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10165);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_epn;
})()
;})(ps__$1))
};
var G__10161 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__10167__i = 0, G__10167__a = new Array(arguments.length -  3);
while (G__10167__i < G__10167__a.length) {G__10167__a[G__10167__i] = arguments[G__10167__i + 3]; ++G__10167__i;}
  ps = new cljs.core.IndexedSeq(G__10167__a,0);
} 
return G__10161__delegate.call(this,p1,p2,p3,ps);};
G__10161.cljs$lang$maxFixedArity = 3;
G__10161.cljs$lang$applyTo = (function (arglist__10168){
var p1 = cljs.core.first(arglist__10168);
arglist__10168 = cljs.core.next(arglist__10168);
var p2 = cljs.core.first(arglist__10168);
arglist__10168 = cljs.core.next(arglist__10168);
var p3 = cljs.core.first(arglist__10168);
var ps = cljs.core.rest(arglist__10168);
return G__10161__delegate(p1,p2,p3,ps);
});
G__10161.cljs$core$IFn$_invoke$arity$variadic = G__10161__delegate;
return G__10161;
})()
;
cljs$core$every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$every_pred__1.call(this,p1);
case 2:
return cljs$core$every_pred__2.call(this,p1,p2);
case 3:
return cljs$core$every_pred__3.call(this,p1,p2,p3);
default:
var G__10169 = null;
if (arguments.length > 3) {
var G__10170__i = 0, G__10170__a = new Array(arguments.length -  3);
while (G__10170__i < G__10170__a.length) {G__10170__a[G__10170__i] = arguments[G__10170__i + 3]; ++G__10170__i;}
G__10169 = new cljs.core.IndexedSeq(G__10170__a,0);
}
return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__10169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var cljs$core$some_fn = null;
var cljs$core$some_fn__1 = (function (p){
return (function() {
var cljs$core$some_fn_$_sp1 = null;
var cljs$core$some_fn_$_sp1__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp1__1 = (function (x){
var G__10376 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10376) : p.call(null,G__10376));
});
var cljs$core$some_fn_$_sp1__2 = (function (x,y){
var or__3935__auto__ = (function (){var G__10378 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10378) : p.call(null,G__10378));
})();
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
var G__10379 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10379) : p.call(null,G__10379));
}
});
var cljs$core$some_fn_$_sp1__3 = (function (x,y,z){
var or__3935__auto__ = (function (){var G__10381 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10381) : p.call(null,G__10381));
})();
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (function (){var G__10383 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10383) : p.call(null,G__10383));
})();
if(cljs.core.truth_(or__3935__auto____$1)){
return or__3935__auto____$1;
} else {
var G__10384 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__10384) : p.call(null,G__10384));
}
}
});
var cljs$core$some_fn_$_sp1__4 = (function() { 
var G__10545__delegate = function (x,y,z,args){
var or__3935__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__10545 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10546__i = 0, G__10546__a = new Array(arguments.length -  3);
while (G__10546__i < G__10546__a.length) {G__10546__a[G__10546__i] = arguments[G__10546__i + 3]; ++G__10546__i;}
  args = new cljs.core.IndexedSeq(G__10546__a,0);
} 
return G__10545__delegate.call(this,x,y,z,args);};
G__10545.cljs$lang$maxFixedArity = 3;
G__10545.cljs$lang$applyTo = (function (arglist__10547){
var x = cljs.core.first(arglist__10547);
arglist__10547 = cljs.core.next(arglist__10547);
var y = cljs.core.first(arglist__10547);
arglist__10547 = cljs.core.next(arglist__10547);
var z = cljs.core.first(arglist__10547);
var args = cljs.core.rest(arglist__10547);
return G__10545__delegate(x,y,z,args);
});
G__10545.cljs$core$IFn$_invoke$arity$variadic = G__10545__delegate;
return G__10545;
})()
;
cljs$core$some_fn_$_sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp1__0.call(this);
case 1:
return cljs$core$some_fn_$_sp1__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp1__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp1__3.call(this,x,y,z);
default:
var G__10548 = null;
if (arguments.length > 3) {
var G__10549__i = 0, G__10549__a = new Array(arguments.length -  3);
while (G__10549__i < G__10549__a.length) {G__10549__a[G__10549__i] = arguments[G__10549__i + 3]; ++G__10549__i;}
G__10548 = new cljs.core.IndexedSeq(G__10549__a,0);
}
return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10548);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp1;
})()
});
var cljs$core$some_fn__2 = (function (p1,p2){
return (function() {
var cljs$core$some_fn_$_sp2 = null;
var cljs$core$some_fn_$_sp2__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp2__1 = (function (x){
var or__3935__auto__ = (function (){var G__10416 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10416) : p1.call(null,G__10416));
})();
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
var G__10417 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10417) : p2.call(null,G__10417));
}
});
var cljs$core$some_fn_$_sp2__2 = (function (x,y){
var or__3935__auto__ = (function (){var G__10419 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10419) : p1.call(null,G__10419));
})();
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (function (){var G__10421 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10421) : p1.call(null,G__10421));
})();
if(cljs.core.truth_(or__3935__auto____$1)){
return or__3935__auto____$1;
} else {
var or__3935__auto____$2 = (function (){var G__10423 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10423) : p2.call(null,G__10423));
})();
if(cljs.core.truth_(or__3935__auto____$2)){
return or__3935__auto____$2;
} else {
var G__10424 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10424) : p2.call(null,G__10424));
}
}
}
});
var cljs$core$some_fn_$_sp2__3 = (function (x,y,z){
var or__3935__auto__ = (function (){var G__10426 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10426) : p1.call(null,G__10426));
})();
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (function (){var G__10428 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10428) : p1.call(null,G__10428));
})();
if(cljs.core.truth_(or__3935__auto____$1)){
return or__3935__auto____$1;
} else {
var or__3935__auto____$2 = (function (){var G__10430 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10430) : p1.call(null,G__10430));
})();
if(cljs.core.truth_(or__3935__auto____$2)){
return or__3935__auto____$2;
} else {
var or__3935__auto____$3 = (function (){var G__10432 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10432) : p2.call(null,G__10432));
})();
if(cljs.core.truth_(or__3935__auto____$3)){
return or__3935__auto____$3;
} else {
var or__3935__auto____$4 = (function (){var G__10434 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10434) : p2.call(null,G__10434));
})();
if(cljs.core.truth_(or__3935__auto____$4)){
return or__3935__auto____$4;
} else {
var G__10435 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10435) : p2.call(null,G__10435));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp2__4 = (function() { 
var G__10550__delegate = function (x,y,z,args){
var or__3935__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return cljs.core.some(((function (or__3935__auto__){
return (function (p1__10171_SHARP_){
var or__3935__auto____$1 = (function (){var G__10437 = p1__10171_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10437) : p1.call(null,G__10437));
})();
if(cljs.core.truth_(or__3935__auto____$1)){
return or__3935__auto____$1;
} else {
var G__10438 = p1__10171_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10438) : p2.call(null,G__10438));
}
});})(or__3935__auto__))
,args);
}
};
var G__10550 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10551__i = 0, G__10551__a = new Array(arguments.length -  3);
while (G__10551__i < G__10551__a.length) {G__10551__a[G__10551__i] = arguments[G__10551__i + 3]; ++G__10551__i;}
  args = new cljs.core.IndexedSeq(G__10551__a,0);
} 
return G__10550__delegate.call(this,x,y,z,args);};
G__10550.cljs$lang$maxFixedArity = 3;
G__10550.cljs$lang$applyTo = (function (arglist__10552){
var x = cljs.core.first(arglist__10552);
arglist__10552 = cljs.core.next(arglist__10552);
var y = cljs.core.first(arglist__10552);
arglist__10552 = cljs.core.next(arglist__10552);
var z = cljs.core.first(arglist__10552);
var args = cljs.core.rest(arglist__10552);
return G__10550__delegate(x,y,z,args);
});
G__10550.cljs$core$IFn$_invoke$arity$variadic = G__10550__delegate;
return G__10550;
})()
;
cljs$core$some_fn_$_sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp2__0.call(this);
case 1:
return cljs$core$some_fn_$_sp2__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp2__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp2__3.call(this,x,y,z);
default:
var G__10553 = null;
if (arguments.length > 3) {
var G__10554__i = 0, G__10554__a = new Array(arguments.length -  3);
while (G__10554__i < G__10554__a.length) {G__10554__a[G__10554__i] = arguments[G__10554__i + 3]; ++G__10554__i;}
G__10553 = new cljs.core.IndexedSeq(G__10554__a,0);
}
return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10553);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp2;
})()
});
var cljs$core$some_fn__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$some_fn_$_sp3 = null;
var cljs$core$some_fn_$_sp3__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp3__1 = (function (x){
var or__3935__auto__ = (function (){var G__10484 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10484) : p1.call(null,G__10484));
})();
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (function (){var G__10486 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10486) : p2.call(null,G__10486));
})();
if(cljs.core.truth_(or__3935__auto____$1)){
return or__3935__auto____$1;
} else {
var G__10487 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10487) : p3.call(null,G__10487));
}
}
});
var cljs$core$some_fn_$_sp3__2 = (function (x,y){
var or__3935__auto__ = (function (){var G__10489 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10489) : p1.call(null,G__10489));
})();
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (function (){var G__10491 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10491) : p2.call(null,G__10491));
})();
if(cljs.core.truth_(or__3935__auto____$1)){
return or__3935__auto____$1;
} else {
var or__3935__auto____$2 = (function (){var G__10493 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10493) : p3.call(null,G__10493));
})();
if(cljs.core.truth_(or__3935__auto____$2)){
return or__3935__auto____$2;
} else {
var or__3935__auto____$3 = (function (){var G__10495 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10495) : p1.call(null,G__10495));
})();
if(cljs.core.truth_(or__3935__auto____$3)){
return or__3935__auto____$3;
} else {
var or__3935__auto____$4 = (function (){var G__10497 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10497) : p2.call(null,G__10497));
})();
if(cljs.core.truth_(or__3935__auto____$4)){
return or__3935__auto____$4;
} else {
var G__10498 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10498) : p3.call(null,G__10498));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__3 = (function (x,y,z){
var or__3935__auto__ = (function (){var G__10500 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10500) : p1.call(null,G__10500));
})();
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (function (){var G__10502 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10502) : p2.call(null,G__10502));
})();
if(cljs.core.truth_(or__3935__auto____$1)){
return or__3935__auto____$1;
} else {
var or__3935__auto____$2 = (function (){var G__10504 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10504) : p3.call(null,G__10504));
})();
if(cljs.core.truth_(or__3935__auto____$2)){
return or__3935__auto____$2;
} else {
var or__3935__auto____$3 = (function (){var G__10506 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10506) : p1.call(null,G__10506));
})();
if(cljs.core.truth_(or__3935__auto____$3)){
return or__3935__auto____$3;
} else {
var or__3935__auto____$4 = (function (){var G__10508 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10508) : p2.call(null,G__10508));
})();
if(cljs.core.truth_(or__3935__auto____$4)){
return or__3935__auto____$4;
} else {
var or__3935__auto____$5 = (function (){var G__10510 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10510) : p3.call(null,G__10510));
})();
if(cljs.core.truth_(or__3935__auto____$5)){
return or__3935__auto____$5;
} else {
var or__3935__auto____$6 = (function (){var G__10512 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10512) : p1.call(null,G__10512));
})();
if(cljs.core.truth_(or__3935__auto____$6)){
return or__3935__auto____$6;
} else {
var or__3935__auto____$7 = (function (){var G__10514 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10514) : p2.call(null,G__10514));
})();
if(cljs.core.truth_(or__3935__auto____$7)){
return or__3935__auto____$7;
} else {
var G__10515 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10515) : p3.call(null,G__10515));
}
}
}
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__4 = (function() { 
var G__10555__delegate = function (x,y,z,args){
var or__3935__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return cljs.core.some(((function (or__3935__auto__){
return (function (p1__10172_SHARP_){
var or__3935__auto____$1 = (function (){var G__10517 = p1__10172_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__10517) : p1.call(null,G__10517));
})();
if(cljs.core.truth_(or__3935__auto____$1)){
return or__3935__auto____$1;
} else {
var or__3935__auto____$2 = (function (){var G__10519 = p1__10172_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__10519) : p2.call(null,G__10519));
})();
if(cljs.core.truth_(or__3935__auto____$2)){
return or__3935__auto____$2;
} else {
var G__10520 = p1__10172_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__10520) : p3.call(null,G__10520));
}
}
});})(or__3935__auto__))
,args);
}
};
var G__10555 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10556__i = 0, G__10556__a = new Array(arguments.length -  3);
while (G__10556__i < G__10556__a.length) {G__10556__a[G__10556__i] = arguments[G__10556__i + 3]; ++G__10556__i;}
  args = new cljs.core.IndexedSeq(G__10556__a,0);
} 
return G__10555__delegate.call(this,x,y,z,args);};
G__10555.cljs$lang$maxFixedArity = 3;
G__10555.cljs$lang$applyTo = (function (arglist__10557){
var x = cljs.core.first(arglist__10557);
arglist__10557 = cljs.core.next(arglist__10557);
var y = cljs.core.first(arglist__10557);
arglist__10557 = cljs.core.next(arglist__10557);
var z = cljs.core.first(arglist__10557);
var args = cljs.core.rest(arglist__10557);
return G__10555__delegate(x,y,z,args);
});
G__10555.cljs$core$IFn$_invoke$arity$variadic = G__10555__delegate;
return G__10555;
})()
;
cljs$core$some_fn_$_sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp3__0.call(this);
case 1:
return cljs$core$some_fn_$_sp3__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp3__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp3__3.call(this,x,y,z);
default:
var G__10558 = null;
if (arguments.length > 3) {
var G__10559__i = 0, G__10559__a = new Array(arguments.length -  3);
while (G__10559__i < G__10559__a.length) {G__10559__a[G__10559__i] = arguments[G__10559__i + 3]; ++G__10559__i;}
G__10558 = new cljs.core.IndexedSeq(G__10559__a,0);
}
return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10558);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp3;
})()
});
var cljs$core$some_fn__4 = (function() { 
var G__10560__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$some_fn_$_spn = null;
var cljs$core$some_fn_$_spn__0 = (function (){
return null;
});
var cljs$core$some_fn_$_spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__10173_SHARP_){
var G__10536 = x;
return (p1__10173_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10173_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10536) : p1__10173_SHARP_.call(null,G__10536));
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__10174_SHARP_){
var or__3935__auto__ = (function (){var G__10538 = x;
return (p1__10174_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10174_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10538) : p1__10174_SHARP_.call(null,G__10538));
})();
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
var G__10539 = y;
return (p1__10174_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10174_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10539) : p1__10174_SHARP_.call(null,G__10539));
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__10175_SHARP_){
var or__3935__auto__ = (function (){var G__10541 = x;
return (p1__10175_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10175_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10541) : p1__10175_SHARP_.call(null,G__10541));
})();
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (function (){var G__10543 = y;
return (p1__10175_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10175_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10543) : p1__10175_SHARP_.call(null,G__10543));
})();
if(cljs.core.truth_(or__3935__auto____$1)){
return or__3935__auto____$1;
} else {
var G__10544 = z;
return (p1__10175_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10175_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10544) : p1__10175_SHARP_.call(null,G__10544));
}
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__4 = (function() { 
var G__10561__delegate = function (x,y,z,args){
var or__3935__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return cljs.core.some(((function (or__3935__auto__,ps__$1){
return (function (p1__10176_SHARP_){
return cljs.core.some(p1__10176_SHARP_,args);
});})(or__3935__auto__,ps__$1))
,ps__$1);
}
};
var G__10561 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10562__i = 0, G__10562__a = new Array(arguments.length -  3);
while (G__10562__i < G__10562__a.length) {G__10562__a[G__10562__i] = arguments[G__10562__i + 3]; ++G__10562__i;}
  args = new cljs.core.IndexedSeq(G__10562__a,0);
} 
return G__10561__delegate.call(this,x,y,z,args);};
G__10561.cljs$lang$maxFixedArity = 3;
G__10561.cljs$lang$applyTo = (function (arglist__10563){
var x = cljs.core.first(arglist__10563);
arglist__10563 = cljs.core.next(arglist__10563);
var y = cljs.core.first(arglist__10563);
arglist__10563 = cljs.core.next(arglist__10563);
var z = cljs.core.first(arglist__10563);
var args = cljs.core.rest(arglist__10563);
return G__10561__delegate(x,y,z,args);
});
G__10561.cljs$core$IFn$_invoke$arity$variadic = G__10561__delegate;
return G__10561;
})()
;
cljs$core$some_fn_$_spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_spn__0.call(this);
case 1:
return cljs$core$some_fn_$_spn__1.call(this,x);
case 2:
return cljs$core$some_fn_$_spn__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_spn__3.call(this,x,y,z);
default:
var G__10564 = null;
if (arguments.length > 3) {
var G__10565__i = 0, G__10565__a = new Array(arguments.length -  3);
while (G__10565__i < G__10565__a.length) {G__10565__a[G__10565__i] = arguments[G__10565__i + 3]; ++G__10565__i;}
G__10564 = new cljs.core.IndexedSeq(G__10565__a,0);
}
return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10564);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_spn;
})()
;})(ps__$1))
};
var G__10560 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__10566__i = 0, G__10566__a = new Array(arguments.length -  3);
while (G__10566__i < G__10566__a.length) {G__10566__a[G__10566__i] = arguments[G__10566__i + 3]; ++G__10566__i;}
  ps = new cljs.core.IndexedSeq(G__10566__a,0);
} 
return G__10560__delegate.call(this,p1,p2,p3,ps);};
G__10560.cljs$lang$maxFixedArity = 3;
G__10560.cljs$lang$applyTo = (function (arglist__10567){
var p1 = cljs.core.first(arglist__10567);
arglist__10567 = cljs.core.next(arglist__10567);
var p2 = cljs.core.first(arglist__10567);
arglist__10567 = cljs.core.next(arglist__10567);
var p3 = cljs.core.first(arglist__10567);
var ps = cljs.core.rest(arglist__10567);
return G__10560__delegate(p1,p2,p3,ps);
});
G__10560.cljs$core$IFn$_invoke$arity$variadic = G__10560__delegate;
return G__10560;
})()
;
cljs$core$some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$some_fn__1.call(this,p1);
case 2:
return cljs$core$some_fn__2.call(this,p1,p2);
case 3:
return cljs$core$some_fn__3.call(this,p1,p2,p3);
default:
var G__10568 = null;
if (arguments.length > 3) {
var G__10569__i = 0, G__10569__a = new Array(arguments.length -  3);
while (G__10569__i < G__10569__a.length) {G__10569__a[G__10569__i] = arguments[G__10569__i + 3]; ++G__10569__i;}
G__10568 = new cljs.core.IndexedSeq(G__10569__a,0);
}
return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__10568);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var cljs$core$map = null;
var cljs$core$map__1 = (function (f){
return (function (rf){
return (function() {
var G__10624 = null;
var G__10624__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10624__1 = (function (result){
var G__10610 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10610) : rf.call(null,G__10610));
});
var G__10624__2 = (function (result,input){
var G__10611 = result;
var G__10612 = (function (){var G__10613 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10613) : f.call(null,G__10613));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10611,G__10612) : rf.call(null,G__10611,G__10612));
});
var G__10624__3 = (function() { 
var G__10625__delegate = function (result,input,inputs){
var G__10614 = result;
var G__10615 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10614,G__10615) : rf.call(null,G__10614,G__10615));
};
var G__10625 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__10626__i = 0, G__10626__a = new Array(arguments.length -  2);
while (G__10626__i < G__10626__a.length) {G__10626__a[G__10626__i] = arguments[G__10626__i + 2]; ++G__10626__i;}
  inputs = new cljs.core.IndexedSeq(G__10626__a,0);
} 
return G__10625__delegate.call(this,result,input,inputs);};
G__10625.cljs$lang$maxFixedArity = 2;
G__10625.cljs$lang$applyTo = (function (arglist__10627){
var result = cljs.core.first(arglist__10627);
arglist__10627 = cljs.core.next(arglist__10627);
var input = cljs.core.first(arglist__10627);
var inputs = cljs.core.rest(arglist__10627);
return G__10625__delegate(result,input,inputs);
});
G__10625.cljs$core$IFn$_invoke$arity$variadic = G__10625__delegate;
return G__10625;
})()
;
G__10624 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__10624__0.call(this);
case 1:
return G__10624__1.call(this,result);
case 2:
return G__10624__2.call(this,result,input);
default:
var G__10628 = null;
if (arguments.length > 2) {
var G__10629__i = 0, G__10629__a = new Array(arguments.length -  2);
while (G__10629__i < G__10629__a.length) {G__10629__a[G__10629__i] = arguments[G__10629__i + 2]; ++G__10629__i;}
G__10628 = new cljs.core.IndexedSeq(G__10629__a,0);
}
return G__10624__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__10628);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10624.cljs$lang$maxFixedArity = 2;
G__10624.cljs$lang$applyTo = G__10624__3.cljs$lang$applyTo;
G__10624.cljs$core$IFn$_invoke$arity$0 = G__10624__0;
G__10624.cljs$core$IFn$_invoke$arity$1 = G__10624__1;
G__10624.cljs$core$IFn$_invoke$arity$2 = G__10624__2;
G__10624.cljs$core$IFn$_invoke$arity$variadic = G__10624__3.cljs$core$IFn$_invoke$arity$variadic;
return G__10624;
})()
});
});
var cljs$core$map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4356__auto___10630 = size;
var i_10631 = (0);
while(true){
if((i_10631 < n__4356__auto___10630)){
cljs.core.chunk_append(b,(function (){var G__10616 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10631);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10616) : f.call(null,G__10616));
})());

var G__10632 = (i_10631 + (1));
i_10631 = G__10632;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__10617 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10617) : f.call(null,G__10617));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var cljs$core$map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__10618 = cljs.core.first(s1);
var G__10619 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10618,G__10619) : f.call(null,G__10618,G__10619));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__10620 = cljs.core.first(s1);
var G__10621 = cljs.core.first(s2);
var G__10622 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10620,G__10621,G__10622) : f.call(null,G__10620,G__10621,G__10622));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__5 = (function() { 
var G__10633__delegate = function (f,c1,c2,c3,colls){
var step = (function cljs$core$map_$_step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return cljs$core$map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__10570_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__10570_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__10633 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__10634__i = 0, G__10634__a = new Array(arguments.length -  4);
while (G__10634__i < G__10634__a.length) {G__10634__a[G__10634__i] = arguments[G__10634__i + 4]; ++G__10634__i;}
  colls = new cljs.core.IndexedSeq(G__10634__a,0);
} 
return G__10633__delegate.call(this,f,c1,c2,c3,colls);};
G__10633.cljs$lang$maxFixedArity = 4;
G__10633.cljs$lang$applyTo = (function (arglist__10635){
var f = cljs.core.first(arglist__10635);
arglist__10635 = cljs.core.next(arglist__10635);
var c1 = cljs.core.first(arglist__10635);
arglist__10635 = cljs.core.next(arglist__10635);
var c2 = cljs.core.first(arglist__10635);
arglist__10635 = cljs.core.next(arglist__10635);
var c3 = cljs.core.first(arglist__10635);
var colls = cljs.core.rest(arglist__10635);
return G__10633__delegate(f,c1,c2,c3,colls);
});
G__10633.cljs$core$IFn$_invoke$arity$variadic = G__10633__delegate;
return G__10633;
})()
;
cljs$core$map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$map__1.call(this,f);
case 2:
return cljs$core$map__2.call(this,f,c1);
case 3:
return cljs$core$map__3.call(this,f,c1,c2);
case 4:
return cljs$core$map__4.call(this,f,c1,c2,c3);
default:
var G__10636 = null;
if (arguments.length > 4) {
var G__10637__i = 0, G__10637__a = new Array(arguments.length -  4);
while (G__10637__i < G__10637__a.length) {G__10637__a[G__10637__i] = arguments[G__10637__i + 4]; ++G__10637__i;}
G__10636 = new cljs.core.IndexedSeq(G__10637__a,0);
}
return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__10636);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map.cljs$lang$maxFixedArity = 4;
cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var cljs$core$take = null;
var cljs$core$take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__10646 = null;
var G__10646__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10646__1 = (function (result){
var G__10643 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10643) : rf.call(null,G__10643));
});
var G__10646__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__10644 = result;
var G__10645 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10644,G__10645) : rf.call(null,G__10644,G__10645));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__10646 = function(result,input){
switch(arguments.length){
case 0:
return G__10646__0.call(this);
case 1:
return G__10646__1.call(this,result);
case 2:
return G__10646__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10646.cljs$core$IFn$_invoke$arity$0 = G__10646__0;
G__10646.cljs$core$IFn$_invoke$arity$1 = G__10646__1;
G__10646.cljs$core$IFn$_invoke$arity$2 = G__10646__2;
return G__10646;
})()
;})(na))
});
});
var cljs$core$take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take__1.call(this,n);
case 2:
return cljs$core$take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
return cljs$core$take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var cljs$core$drop = null;
var cljs$core$drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__10653 = null;
var G__10653__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10653__1 = (function (result){
var G__10650 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10650) : rf.call(null,G__10650));
});
var G__10653__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__10651 = result;
var G__10652 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10651,G__10652) : rf.call(null,G__10651,G__10652));
}
});
G__10653 = function(result,input){
switch(arguments.length){
case 0:
return G__10653__0.call(this);
case 1:
return G__10653__1.call(this,result);
case 2:
return G__10653__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10653.cljs$core$IFn$_invoke$arity$0 = G__10653__0;
G__10653.cljs$core$IFn$_invoke$arity$1 = G__10653__1;
G__10653.cljs$core$IFn$_invoke$arity$2 = G__10653__2;
return G__10653;
})()
;})(na))
});
});
var cljs$core$drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__10654 = (n__$1 - (1));
var G__10655 = cljs.core.rest(s);
n__$1 = G__10654;
coll__$1 = G__10655;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
cljs$core$drop = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$drop__1.call(this,n);
case 2:
return cljs$core$drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
return cljs$core$drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var cljs$core$drop_last = null;
var cljs$core$drop_last__1 = (function (s){
return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var cljs$core$drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
cljs$core$drop_last = function(n,s){
switch(arguments.length){
case 1:
return cljs$core$drop_last__1.call(this,n);
case 2:
return cljs$core$drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
return cljs$core$drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function cljs$core$take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__10658 = cljs.core.next(s);
var G__10659 = cljs.core.next(lead);
s = G__10658;
lead = G__10659;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var cljs$core$drop_while = null;
var cljs$core$drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__10672 = null;
var G__10672__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10672__1 = (function (result){
var G__10666 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10666) : rf.call(null,G__10666));
});
var G__10672__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3927__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3927__auto__)){
var G__10667 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10667) : pred.call(null,G__10667));
} else {
return and__3927__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__10668 = result;
var G__10669 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10668,G__10669) : rf.call(null,G__10668,G__10669));
}
});
G__10672 = function(result,input){
switch(arguments.length){
case 0:
return G__10672__0.call(this);
case 1:
return G__10672__1.call(this,result);
case 2:
return G__10672__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10672.cljs$core$IFn$_invoke$arity$0 = G__10672__0;
G__10672.cljs$core$IFn$_invoke$arity$1 = G__10672__1;
G__10672.cljs$core$IFn$_invoke$arity$2 = G__10672__2;
return G__10672;
})()
;})(da))
});
});
var cljs$core$drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3927__auto__ = s;
if(and__3927__auto__){
var G__10671 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__10671) : pred__$1.call(null,G__10671));
} else {
return and__3927__auto__;
}
})())){
var G__10673 = pred__$1;
var G__10674 = cljs.core.rest(s);
pred__$1 = G__10673;
coll__$1 = G__10674;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
cljs$core$drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$drop_while__1.call(this,pred);
case 2:
return cljs$core$drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
return cljs$core$drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cljs$core$cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cljs$core$cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function cljs$core$split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var cljs$core$repeat = null;
var cljs$core$repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var cljs$core$repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
});
cljs$core$repeat = function(n,x){
switch(arguments.length){
case 1:
return cljs$core$repeat__1.call(this,n);
case 2:
return cljs$core$repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
return cljs$core$repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function cljs$core$replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var cljs$core$repeatedly = null;
var cljs$core$repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var cljs$core$repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
cljs$core$repeatedly = function(n,f){
switch(arguments.length){
case 1:
return cljs$core$repeatedly__1.call(this,n);
case 2:
return cljs$core$repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
return cljs$core$repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function cljs$core$iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return cljs$core$iterate(f,(function (){var G__10683 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10683) : f.call(null,G__10683));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var cljs$core$interleave = null;
var cljs$core$interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var cljs$core$interleave__3 = (function() { 
var G__10686__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__10686 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__10687__i = 0, G__10687__a = new Array(arguments.length -  2);
while (G__10687__i < G__10687__a.length) {G__10687__a[G__10687__i] = arguments[G__10687__i + 2]; ++G__10687__i;}
  colls = new cljs.core.IndexedSeq(G__10687__a,0);
} 
return G__10686__delegate.call(this,c1,c2,colls);};
G__10686.cljs$lang$maxFixedArity = 2;
G__10686.cljs$lang$applyTo = (function (arglist__10688){
var c1 = cljs.core.first(arglist__10688);
arglist__10688 = cljs.core.next(arglist__10688);
var c2 = cljs.core.first(arglist__10688);
var colls = cljs.core.rest(arglist__10688);
return G__10686__delegate(c1,c2,colls);
});
G__10686.cljs$core$IFn$_invoke$arity$variadic = G__10686__delegate;
return G__10686;
})()
;
cljs$core$interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$interleave__2.call(this,c1,c2);
default:
var G__10689 = null;
if (arguments.length > 2) {
var G__10690__i = 0, G__10690__a = new Array(arguments.length -  2);
while (G__10690__i < G__10690__a.length) {G__10690__a[G__10690__i] = arguments[G__10690__i + 2]; ++G__10690__i;}
G__10689 = new cljs.core.IndexedSeq(G__10690__a,0);
}
return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__10689);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interleave.cljs$lang$maxFixedArity = 2;
cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var cljs$core$interpose = null;
var cljs$core$interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__10705 = null;
var G__10705__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10705__1 = (function (result){
var G__10698 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10698) : rf.call(null,G__10698));
});
var G__10705__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__10699 = result;
var G__10700 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10699,G__10700) : rf.call(null,G__10699,G__10700));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__10701 = sepr;
var G__10702 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10701,G__10702) : rf.call(null,G__10701,G__10702));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__10703 = result;
var G__10704 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10703,G__10704) : rf.call(null,G__10703,G__10704));
}
});
G__10705 = function(result,input){
switch(arguments.length){
case 0:
return G__10705__0.call(this);
case 1:
return G__10705__1.call(this,result);
case 2:
return G__10705__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10705.cljs$core$IFn$_invoke$arity$0 = G__10705__0;
G__10705.cljs$core$IFn$_invoke$arity$1 = G__10705__1;
G__10705.cljs$core$IFn$_invoke$arity$2 = G__10705__2;
return G__10705;
})()
;})(started))
});
});
var cljs$core$interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
cljs$core$interpose = function(sep,coll){
switch(arguments.length){
case 1:
return cljs$core$interpose__1.call(this,sep);
case 2:
return cljs$core$interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
return cljs$core$interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function cljs$core$flatten1(colls){
var cat = (function cljs$core$flatten1_$_cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var cljs$core$mapcat = null;
var cljs$core$mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var cljs$core$mapcat__2 = (function() { 
var G__10714__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__10714 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__10715__i = 0, G__10715__a = new Array(arguments.length -  1);
while (G__10715__i < G__10715__a.length) {G__10715__a[G__10715__i] = arguments[G__10715__i + 1]; ++G__10715__i;}
  colls = new cljs.core.IndexedSeq(G__10715__a,0);
} 
return G__10714__delegate.call(this,f,colls);};
G__10714.cljs$lang$maxFixedArity = 1;
G__10714.cljs$lang$applyTo = (function (arglist__10716){
var f = cljs.core.first(arglist__10716);
var colls = cljs.core.rest(arglist__10716);
return G__10714__delegate(f,colls);
});
G__10714.cljs$core$IFn$_invoke$arity$variadic = G__10714__delegate;
return G__10714;
})()
;
cljs$core$mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$mapcat__1.call(this,f);
default:
var G__10717 = null;
if (arguments.length > 1) {
var G__10718__i = 0, G__10718__a = new Array(arguments.length -  1);
while (G__10718__i < G__10718__a.length) {G__10718__a[G__10718__i] = arguments[G__10718__i + 1]; ++G__10718__i;}
G__10717 = new cljs.core.IndexedSeq(G__10718__a,0);
}
return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10717);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var cljs$core$filter = null;
var cljs$core$filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__10737 = null;
var G__10737__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10737__1 = (function (result){
var G__10731 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10731) : rf.call(null,G__10731));
});
var G__10737__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10732 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10732) : pred.call(null,G__10732));
})())){
var G__10733 = result;
var G__10734 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10733,G__10734) : rf.call(null,G__10733,G__10734));
} else {
return result;
}
});
G__10737 = function(result,input){
switch(arguments.length){
case 0:
return G__10737__0.call(this);
case 1:
return G__10737__1.call(this,result);
case 2:
return G__10737__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10737.cljs$core$IFn$_invoke$arity$0 = G__10737__0;
G__10737.cljs$core$IFn$_invoke$arity$1 = G__10737__1;
G__10737.cljs$core$IFn$_invoke$arity$2 = G__10737__2;
return G__10737;
})()
});
});
var cljs$core$filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4356__auto___10738 = size;
var i_10739 = (0);
while(true){
if((i_10739 < n__4356__auto___10738)){
if(cljs.core.truth_((function (){var G__10735 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10739);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10735) : pred.call(null,G__10735));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_10739));
} else {
}

var G__10740 = (i_10739 + (1));
i_10739 = G__10740;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__10736 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10736) : pred.call(null,G__10736));
})())){
return cljs.core.cons(f,cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$filter = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$filter__1.call(this,pred);
case 2:
return cljs$core$filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
return cljs$core$filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var cljs$core$remove = null;
var cljs$core$remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var cljs$core$remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
cljs$core$remove = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$remove__1.call(this,pred);
case 2:
return cljs$core$remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
return cljs$core$remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function cljs$core$tree_seq(branch_QMARK_,children,root){
var walk = (function cljs$core$tree_seq_$_walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__10747 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__10747) : branch_QMARK_.call(null,G__10747));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.array_seq([(function (){var G__10748 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__10748) : children.call(null,G__10748));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function cljs$core$flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__10749_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__10749_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var cljs$core$into = null;
var cljs$core$into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__10752 = to;
if(G__10752){
var bit__4226__auto__ = (G__10752.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4226__auto__) || (G__10752.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var cljs$core$into__3 = (function (to,xform,from){
if((function (){var G__10753 = to;
if(G__10753){
var bit__4226__auto__ = (G__10753.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4226__auto__) || (G__10753.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
cljs$core$into = function(to,xform,from){
switch(arguments.length){
case 2:
return cljs$core$into__2.call(this,to,xform);
case 3:
return cljs$core$into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
return cljs$core$into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var cljs$core$mapv = null;
var cljs$core$mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__10755 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10755) : f.call(null,G__10755));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var cljs$core$mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var cljs$core$mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var cljs$core$mapv__5 = (function() { 
var G__10756__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__10756 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__10757__i = 0, G__10757__a = new Array(arguments.length -  4);
while (G__10757__i < G__10757__a.length) {G__10757__a[G__10757__i] = arguments[G__10757__i + 4]; ++G__10757__i;}
  colls = new cljs.core.IndexedSeq(G__10757__a,0);
} 
return G__10756__delegate.call(this,f,c1,c2,c3,colls);};
G__10756.cljs$lang$maxFixedArity = 4;
G__10756.cljs$lang$applyTo = (function (arglist__10758){
var f = cljs.core.first(arglist__10758);
arglist__10758 = cljs.core.next(arglist__10758);
var c1 = cljs.core.first(arglist__10758);
arglist__10758 = cljs.core.next(arglist__10758);
var c2 = cljs.core.first(arglist__10758);
arglist__10758 = cljs.core.next(arglist__10758);
var c3 = cljs.core.first(arglist__10758);
var colls = cljs.core.rest(arglist__10758);
return G__10756__delegate(f,c1,c2,c3,colls);
});
G__10756.cljs$core$IFn$_invoke$arity$variadic = G__10756__delegate;
return G__10756;
})()
;
cljs$core$mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$mapv__2.call(this,f,c1);
case 3:
return cljs$core$mapv__3.call(this,f,c1,c2);
case 4:
return cljs$core$mapv__4.call(this,f,c1,c2,c3);
default:
var G__10759 = null;
if (arguments.length > 4) {
var G__10760__i = 0, G__10760__a = new Array(arguments.length -  4);
while (G__10760__i < G__10760__a.length) {G__10760__a[G__10760__i] = arguments[G__10760__i + 4]; ++G__10760__i;}
G__10759 = new cljs.core.IndexedSeq(G__10760__a,0);
}
return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__10759);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapv.cljs$lang$maxFixedArity = 4;
cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function cljs$core$filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__10762 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10762) : pred.call(null,G__10762));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var cljs$core$partition = null;
var cljs$core$partition__2 = (function (n,coll){
return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var cljs$core$partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
cljs$core$partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return cljs$core$partition__2.call(this,n,step);
case 3:
return cljs$core$partition__3.call(this,n,step,pad);
case 4:
return cljs$core$partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
return cljs$core$partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var cljs$core$get_in = null;
var cljs$core$get_in__2 = (function (m,ks){
return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var cljs$core$get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__10777 = m__$1;
if(G__10777){
var bit__4229__auto__ = (G__10777.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4229__auto__) || (G__10777.cljs$core$ILookup$)){
return true;
} else {
if((!G__10777.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10777);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__10777);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__10778 = sentinel;
var G__10779 = m__$2;
var G__10780 = cljs.core.next(ks__$1);
sentinel = G__10778;
m__$1 = G__10779;
ks__$1 = G__10780;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
cljs$core$get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return cljs$core$get_in__2.call(this,m,ks);
case 3:
return cljs$core$get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
return cljs$core$get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function cljs$core$assoc_in(m,p__10781,v){
var vec__10786 = p__10781;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10786,(0),null);
var ks = cljs.core.nthnext(vec__10786,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var cljs$core$update_in = null;
var cljs$core$update_in__3 = (function (m,p__10787,f){
var vec__10825 = p__10787;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10825,(0),null);
var ks = cljs.core.nthnext(vec__10825,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10826 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10826) : f.call(null,G__10826));
})());
}
});
var cljs$core$update_in__4 = (function (m,p__10788,f,a){
var vec__10827 = p__10788;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10827,(0),null);
var ks = cljs.core.nthnext(vec__10827,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10828 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10829 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10828,G__10829) : f.call(null,G__10828,G__10829));
})());
}
});
var cljs$core$update_in__5 = (function (m,p__10789,f,a,b){
var vec__10830 = p__10789;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10830,(0),null);
var ks = cljs.core.nthnext(vec__10830,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10831 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10832 = a;
var G__10833 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10831,G__10832,G__10833) : f.call(null,G__10831,G__10832,G__10833));
})());
}
});
var cljs$core$update_in__6 = (function (m,p__10790,f,a,b,c){
var vec__10834 = p__10790;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10834,(0),null);
var ks = cljs.core.nthnext(vec__10834,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10835 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10836 = a;
var G__10837 = b;
var G__10838 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10835,G__10836,G__10837,G__10838) : f.call(null,G__10835,G__10836,G__10837,G__10838));
})());
}
});
var cljs$core$update_in__7 = (function() { 
var G__10840__delegate = function (m,p__10791,f,a,b,c,args){
var vec__10839 = p__10791;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10839,(0),null);
var ks = cljs.core.nthnext(vec__10839,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__10840 = function (m,p__10791,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__10841__i = 0, G__10841__a = new Array(arguments.length -  6);
while (G__10841__i < G__10841__a.length) {G__10841__a[G__10841__i] = arguments[G__10841__i + 6]; ++G__10841__i;}
  args = new cljs.core.IndexedSeq(G__10841__a,0);
} 
return G__10840__delegate.call(this,m,p__10791,f,a,b,c,args);};
G__10840.cljs$lang$maxFixedArity = 6;
G__10840.cljs$lang$applyTo = (function (arglist__10842){
var m = cljs.core.first(arglist__10842);
arglist__10842 = cljs.core.next(arglist__10842);
var p__10791 = cljs.core.first(arglist__10842);
arglist__10842 = cljs.core.next(arglist__10842);
var f = cljs.core.first(arglist__10842);
arglist__10842 = cljs.core.next(arglist__10842);
var a = cljs.core.first(arglist__10842);
arglist__10842 = cljs.core.next(arglist__10842);
var b = cljs.core.first(arglist__10842);
arglist__10842 = cljs.core.next(arglist__10842);
var c = cljs.core.first(arglist__10842);
var args = cljs.core.rest(arglist__10842);
return G__10840__delegate(m,p__10791,f,a,b,c,args);
});
G__10840.cljs$core$IFn$_invoke$arity$variadic = G__10840__delegate;
return G__10840;
})()
;
cljs$core$update_in = function(m,p__10791,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return cljs$core$update_in__3.call(this,m,p__10791,f);
case 4:
return cljs$core$update_in__4.call(this,m,p__10791,f,a);
case 5:
return cljs$core$update_in__5.call(this,m,p__10791,f,a,b);
case 6:
return cljs$core$update_in__6.call(this,m,p__10791,f,a,b,c);
default:
var G__10843 = null;
if (arguments.length > 6) {
var G__10844__i = 0, G__10844__a = new Array(arguments.length -  6);
while (G__10844__i < G__10844__a.length) {G__10844__a[G__10844__i] = arguments[G__10844__i + 6]; ++G__10844__i;}
G__10843 = new cljs.core.IndexedSeq(G__10844__a,0);
}
return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__10791,f,a,b,c, G__10843);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update_in.cljs$lang$maxFixedArity = 6;
cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var cljs$core$update = null;
var cljs$core$update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10855 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10855) : f.call(null,G__10855));
})());
});
var cljs$core$update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10856 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10857 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10856,G__10857) : f.call(null,G__10856,G__10857));
})());
});
var cljs$core$update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10858 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10859 = x;
var G__10860 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10858,G__10859,G__10860) : f.call(null,G__10858,G__10859,G__10860));
})());
});
var cljs$core$update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10861 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10862 = x;
var G__10863 = y;
var G__10864 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10861,G__10862,G__10863,G__10864) : f.call(null,G__10861,G__10862,G__10863,G__10864));
})());
});
var cljs$core$update__7 = (function() { 
var G__10865__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__10865 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__10866__i = 0, G__10866__a = new Array(arguments.length -  6);
while (G__10866__i < G__10866__a.length) {G__10866__a[G__10866__i] = arguments[G__10866__i + 6]; ++G__10866__i;}
  more = new cljs.core.IndexedSeq(G__10866__a,0);
} 
return G__10865__delegate.call(this,m,k,f,x,y,z,more);};
G__10865.cljs$lang$maxFixedArity = 6;
G__10865.cljs$lang$applyTo = (function (arglist__10867){
var m = cljs.core.first(arglist__10867);
arglist__10867 = cljs.core.next(arglist__10867);
var k = cljs.core.first(arglist__10867);
arglist__10867 = cljs.core.next(arglist__10867);
var f = cljs.core.first(arglist__10867);
arglist__10867 = cljs.core.next(arglist__10867);
var x = cljs.core.first(arglist__10867);
arglist__10867 = cljs.core.next(arglist__10867);
var y = cljs.core.first(arglist__10867);
arglist__10867 = cljs.core.next(arglist__10867);
var z = cljs.core.first(arglist__10867);
var more = cljs.core.rest(arglist__10867);
return G__10865__delegate(m,k,f,x,y,z,more);
});
G__10865.cljs$core$IFn$_invoke$arity$variadic = G__10865__delegate;
return G__10865;
})()
;
cljs$core$update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return cljs$core$update__3.call(this,m,k,f);
case 4:
return cljs$core$update__4.call(this,m,k,f,x);
case 5:
return cljs$core$update__5.call(this,m,k,f,x,y);
case 6:
return cljs$core$update__6.call(this,m,k,f,x,y,z);
default:
var G__10868 = null;
if (arguments.length > 6) {
var G__10869__i = 0, G__10869__a = new Array(arguments.length -  6);
while (G__10869__i < G__10869__a.length) {G__10869__a[G__10869__i] = arguments[G__10869__i + 6]; ++G__10869__i;}
G__10868 = new cljs.core.IndexedSeq(G__10869__a,0);
}
return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__10868);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update.cljs$lang$maxFixedArity = 6;
cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function cljs$core$__GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function cljs$core$pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function cljs$core$pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function cljs$core$pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function cljs$core$pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function cljs$core$tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function cljs$core$new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__10870 = (ll - (5));
var G__10871 = r;
ll = G__10870;
ret = G__10871;
continue;
}
break;
}
});
cljs.core.push_tail = (function cljs$core$push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = cljs$core$push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function cljs$core$vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function cljs$core$first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10876 = cljs.core.pv_aget(node,(0));
var G__10877 = (level - (5));
node = G__10876;
level = G__10877;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function cljs$core$unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10878 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__10879 = (level - (5));
node = G__10878;
level = G__10879;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function cljs$core$array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function cljs$core$do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,cljs$core$do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function cljs$core$pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function cljs$core$ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10889 = init__$2;
var G__10890 = (j + i);
var G__10891 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10889,G__10890,G__10891) : f.call(null,G__10889,G__10890,G__10891));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10902 = (j + (1));
var G__10903 = init__$3;
j = G__10902;
init__$2 = G__10903;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10892 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10892) : cljs.core.deref.call(null,G__10892));
} else {
var G__10904 = (i + len);
var G__10905 = init__$2;
i = G__10904;
init__$1 = G__10905;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__10893 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__10893) : cljs.core.tv_editable_root.call(null,G__10893));
})(),(function (){var G__10894 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__10894) : cljs.core.tv_editable_tail.call(null,G__10894));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10895 = init__$2;
var G__10896 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10895,G__10896) : f.call(null,G__10895,G__10896));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10906 = (j + (1));
var G__10907 = init__$3;
j = G__10906;
init__$2 = G__10907;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10897 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10897) : cljs.core.deref.call(null,G__10897));
} else {
var G__10908 = (i + len);
var G__10909 = init__$2;
i = G__10908;
init__$1 = G__10909;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__10898 = coll__$1;
var G__10899 = cljs.core.first_array_for_longvec(coll__$1);
var G__10900 = (0);
var G__10901 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10898,G__10899,G__10900,G__10901) : cljs.core.chunked_seq.call(null,G__10898,G__10899,G__10900,G__10901));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4356__auto___10910 = len;
var i_10911 = (0);
while(true){
if((i_10911 < n__4356__auto___10910)){
(new_tail[i_10911] = (self__.tail[i_10911]));

var G__10912 = (i_10911 + (1));
i_10911 = G__10912;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__10913 = null;
var G__10913__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10913__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10913 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10913__2.call(this,self__,k);
case 3:
return G__10913__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10913.cljs$core$IFn$_invoke$arity$2 = G__10913__2;
G__10913.cljs$core$IFn$_invoke$arity$3 = G__10913__3;
return G__10913;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args10888){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10888)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__10914 = (i + (1));
var G__10915 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__10914;
out = G__10915;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
/**
 * Creates a new vector containing the contents of coll. JavaScript arrays
 * will be aliased and should not be modified.
 */
cljs.core.vec = (function cljs$core$vec(coll){
if(cljs.core.array_QMARK_(coll)){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * Creates a new vector containing the args.
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var cljs$core$vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var cljs$core$vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10916__i = 0, G__10916__a = new Array(arguments.length -  0);
while (G__10916__i < G__10916__a.length) {G__10916__a[G__10916__i] = arguments[G__10916__i + 0]; ++G__10916__i;}
  args = new cljs.core.IndexedSeq(G__10916__a,0);
} 
return cljs$core$vector__delegate.call(this,args);};
cljs$core$vector.cljs$lang$maxFixedArity = 0;
cljs$core$vector.cljs$lang$applyTo = (function (arglist__10917){
var args = cljs.core.seq(arglist__10917);
return cljs$core$vector__delegate(args);
});
cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
return cljs$core$vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10918 = self__.vec;
var G__10919 = self__.node;
var G__10920 = self__.i;
var G__10921 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10918,G__10919,G__10920,G__10921) : cljs.core.chunked_seq.call(null,G__10918,G__10919,G__10920,G__10921));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__10922 = self__.vec;
var G__10923 = (self__.i + self__.off);
var G__10924 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10922,G__10923,G__10924) : cljs.core.subvec.call(null,G__10922,G__10923,G__10924));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__10925 = self__.vec;
var G__10926 = (self__.i + self__.off);
var G__10927 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10925,G__10926,G__10927) : cljs.core.subvec.call(null,G__10925,G__10926,G__10927));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10928 = self__.vec;
var G__10929 = self__.node;
var G__10930 = self__.i;
var G__10931 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10928,G__10929,G__10930,G__10931) : cljs.core.chunked_seq.call(null,G__10928,G__10929,G__10930,G__10931));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10932 = self__.vec;
var G__10933 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10934 = end;
var G__10935 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10932,G__10933,G__10934,G__10935) : cljs.core.chunked_seq.call(null,G__10932,G__10933,G__10934,G__10935));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__10936 = self__.vec;
var G__10937 = self__.node;
var G__10938 = self__.i;
var G__10939 = self__.off;
var G__10940 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__10936,G__10937,G__10938,G__10939,G__10940) : cljs.core.chunked_seq.call(null,G__10936,G__10937,G__10938,G__10939,G__10940));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10941 = self__.vec;
var G__10942 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10943 = end;
var G__10944 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10941,G__10942,G__10943,G__10944) : cljs.core.chunked_seq.call(null,G__10941,G__10942,G__10943,G__10944));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
cljs.core.chunked_seq = (function() {
var cljs$core$chunked_seq = null;
var cljs$core$chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var cljs$core$chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var cljs$core$chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
cljs$core$chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return cljs$core$chunked_seq__3.call(this,vec,node,i);
case 4:
return cljs$core$chunked_seq__4.call(this,vec,node,i,off);
case 5:
return cljs$core$chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
return cljs$core$chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167666463;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var i = self__.start;
var j = (0);
var init__$1 = init;
while(true){
if((i < self__.end)){
var init__$2 = (function (){var G__10946 = init__$1;
var G__10947 = j;
var G__10948 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10946,G__10947,G__10948) : f.call(null,G__10946,G__10947,G__10948));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10949 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10949) : cljs.core.deref.call(null,G__10949));
} else {
var G__10971 = (i + (1));
var G__10972 = (j + (1));
var G__10973 = init__$2;
i = G__10971;
j = G__10972;
init__$1 = G__10973;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__10950 = self__.meta;
var G__10951 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__10952 = self__.start;
var G__10953 = (function (){var x__4003__auto__ = self__.end;
var y__4004__auto__ = (v_pos + (1));
return ((x__4003__auto__ > y__4004__auto__) ? x__4003__auto__ : y__4004__auto__);
})();
var G__10954 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10950,G__10951,G__10952,G__10953,G__10954) : cljs.core.build_subvec.call(null,G__10950,G__10951,G__10952,G__10953,G__10954));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__10955 = self__.meta;
var G__10956 = self__.v;
var G__10957 = self__.start;
var G__10958 = (self__.end - (1));
var G__10959 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10955,G__10956,G__10957,G__10958,G__10959) : cljs.core.build_subvec.call(null,G__10955,G__10956,G__10957,G__10958,G__10959));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function cljs$core$subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return cljs$core$subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__10961 = meta__$1;
var G__10962 = self__.v;
var G__10963 = self__.start;
var G__10964 = self__.end;
var G__10965 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10961,G__10962,G__10963,G__10964,G__10965) : cljs.core.build_subvec.call(null,G__10961,G__10962,G__10963,G__10964,G__10965));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10966 = self__.meta;
var G__10967 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__10968 = self__.start;
var G__10969 = (self__.end + (1));
var G__10970 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10966,G__10967,G__10968,G__10969,G__10970) : cljs.core.build_subvec.call(null,G__10966,G__10967,G__10968,G__10969,G__10970));
});

cljs.core.Subvec.prototype.call = (function() {
var G__10974 = null;
var G__10974__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10974__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10974 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10974__2.call(this,self__,k);
case 3:
return G__10974__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10974.cljs$core$IFn$_invoke$arity$2 = G__10974__2;
G__10974.cljs$core$IFn$_invoke$arity$3 = G__10974__3;
return G__10974;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args10945){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10945)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
cljs.core.build_subvec = (function cljs$core$build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__10975 = meta;
var G__10976 = v.v;
var G__10977 = (v.start + start);
var G__10978 = (v.start + end);
var G__10979 = __hash;
meta = G__10975;
v = G__10976;
start = G__10977;
end = G__10978;
__hash = G__10979;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var cljs$core$subvec = null;
var cljs$core$subvec__2 = (function (v,start){
return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var cljs$core$subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
cljs$core$subvec = function(v,start,end){
switch(arguments.length){
case 2:
return cljs$core$subvec__2.call(this,v,start);
case 3:
return cljs$core$subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
return cljs$core$subvec;
})()
;
cljs.core.tv_ensure_editable = (function cljs$core$tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function cljs$core$tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj10986 = {};
return obj10986;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function cljs$core$tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function cljs$core$tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return cljs$core$tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function cljs$core$tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function cljs$core$unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__10994 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__10995 = (level - (5));
node = G__10994;
level = G__10995;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__10999 = null;
var G__10999__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10999__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10999 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10999__2.call(this,self__,k);
case 3:
return G__10999__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10999.cljs$core$IFn$_invoke$arity$2 = G__10999__2;
G__10999.cljs$core$IFn$_invoke$arity$3 = G__10999__3;
return G__10999;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args10996){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10996)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function cljs$core$go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3935__auto__ = self__.front;
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3935__auto__ = self__.rear;
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function cljs$core$__GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function cljs$core$equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function cljs$core$scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__11000 = (i + incr);
i = G__11000;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function cljs$core$obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function cljs$core$obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__11001 = (i + (1));
var G__11002 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__11001;
out = G__11002;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function cljs$core$obj_clone(obj,ks){
var new_obj = (function (){var obj11006 = {};
return obj11006;
})();
var l = ks.length;
var i_11007 = (0);
while(true){
if((i_11007 < l)){
var k_11008 = (ks[i_11007]);
(new_obj[k_11008] = (obj[k_11008]));

var G__11009 = (i_11007 + (1));
i_11007 = G__11009;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3927__auto__ = (function (){var G__11013 = k;
return goog.isString(G__11013);
})();
if(cljs.core.truth_(and__3927__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3927__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__11014 = init__$1;
var G__11015 = k;
var G__11016 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11014,G__11015,G__11016) : f.call(null,G__11014,G__11015,G__11016));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11017 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11017) : cljs.core.deref.call(null,G__11017));
} else {
var G__11023 = cljs.core.rest(keys__$1);
var G__11024 = init__$2;
keys__$1 = G__11023;
init__$1 = G__11024;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3927__auto__ = (function (){var G__11019 = k;
return goog.isString(G__11019);
})();
if(cljs.core.truth_(and__3927__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3927__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__11020 = k;
return goog.isString(G__11020);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3927__auto__ = (function (){var G__11022 = k;
return goog.isString(G__11022);
})();
if(cljs.core.truth_(and__3927__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3927__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__11010_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__11010_SHARP_,(self__.strobj[p1__11010_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__11025 = null;
var G__11025__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11025__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11025 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11025__2.call(this,self__,k);
case 3:
return G__11025__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11025.cljs$core$IFn$_invoke$arity$2 = G__11025__2;
G__11025.cljs$core$IFn$_invoke$arity$3 = G__11025__3;
return G__11025;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args11011){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11011)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj11027 = {};
return obj11027;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__11028 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11028,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11028,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function cljs$core$__GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function cljs$core$es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function cljs$core$__GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function cljs$core$es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function cljs$core$array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__11029 = (i + (2));
i = G__11029;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function cljs$core$array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__11030 = (i + (2));
i = G__11030;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function cljs$core$array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__11031 = (i + (2));
i = G__11031;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function cljs$core$array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__11032 = (i + (2));
i = G__11032;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function cljs$core$array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__11033 = (i + (2));
i = G__11033;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function cljs$core$array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3935__auto__ = (function (){var G__11037 = k;
return goog.isString(G__11037);
})();
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function cljs$core$array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_11038 = (0);
while(true){
if((i_11038 < l)){
(narr[i_11038] = (arr[i_11038]));

var G__11039 = (i_11038 + (1));
i_11038 = G__11039;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
cljs.core.persistent_array_map_seq = (function cljs$core$persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11041 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11041) : cljs.core.keys.call(null,G__11041));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11042 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11042) : cljs.core.vals.call(null,G__11042));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11043 = cljs.core.seq(coll);
var chunk__11044 = null;
var count__11045 = (0);
var i__11046 = (0);
while(true){
if((i__11046 < count__11045)){
var vec__11047 = chunk__11044.cljs$core$IIndexed$_nth$arity$2(null,i__11046);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11047,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11047,(1),null);
var G__11048_11061 = v;
var G__11049_11062 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11048_11061,G__11049_11062) : f.call(null,G__11048_11061,G__11049_11062));

var G__11063 = seq__11043;
var G__11064 = chunk__11044;
var G__11065 = count__11045;
var G__11066 = (i__11046 + (1));
seq__11043 = G__11063;
chunk__11044 = G__11064;
count__11045 = G__11065;
i__11046 = G__11066;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11043);
if(temp__4126__auto__){
var seq__11043__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11043__$1)){
var c__4304__auto__ = cljs.core.chunk_first(seq__11043__$1);
var G__11067 = cljs.core.chunk_rest(seq__11043__$1);
var G__11068 = c__4304__auto__;
var G__11069 = cljs.core.count(c__4304__auto__);
var G__11070 = (0);
seq__11043 = G__11067;
chunk__11044 = G__11068;
count__11045 = G__11069;
i__11046 = G__11070;
continue;
} else {
var vec__11050 = cljs.core.first(seq__11043__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11050,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11050,(1),null);
var G__11051_11071 = v;
var G__11052_11072 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11051_11071,G__11052_11072) : f.call(null,G__11051_11071,G__11052_11072));

var G__11073 = cljs.core.next(seq__11043__$1);
var G__11074 = null;
var G__11075 = (0);
var G__11076 = (0);
seq__11043 = G__11073;
chunk__11044 = G__11074;
count__11045 = G__11075;
i__11046 = G__11076;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__11053 = init__$1;
var G__11054 = (self__.arr[i]);
var G__11055 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11053,G__11054,G__11055) : f.call(null,G__11053,G__11054,G__11055));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11056 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11056) : cljs.core.deref.call(null,G__11056));
} else {
var G__11077 = (i + (2));
var G__11078 = init__$2;
i = G__11077;
init__$1 = G__11078;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__11057 = other;
if(G__11057){
var bit__4226__auto__ = (G__11057.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4226__auto__) || (G__11057.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__11079 = (i + (2));
i = G__11079;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj11059 = {};
return obj11059;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__11080 = (s + (2));
var G__11081 = d;
s = G__11080;
d = G__11081;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__11082 = (s + (2));
var G__11083 = (d + (2));
s = G__11082;
d = G__11083;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__11060 = cljs.core.aclone(self__.arr);
(G__11060[(idx + (1))] = v);

return G__11060;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11084 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11085 = cljs.core.next(es);
ret = G__11084;
es = G__11085;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__11086 = null;
var G__11086__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11086__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11086 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11086__2.call(this,self__,k);
case 3:
return G__11086__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11086.cljs$core$IFn$_invoke$arity$2 = G__11086__2;
G__11086.cljs$core$IFn$_invoke$arity$3 = G__11086__3;
return G__11086;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args11040){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11040)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11087 = (i + (2));
var G__11088 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__11087;
ret = G__11088;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__11089_11097 = self__.arr;
G__11089_11097.pop();

G__11089_11097.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__11090 = self__.len;
var G__11091 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__11090,G__11091) : cljs.core.array__GT_transient_hash_map.call(null,G__11090,G__11091));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__11092 = o;
if(G__11092){
var bit__4229__auto__ = (G__11092.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4229__auto__) || (G__11092.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__11092.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11092);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11092);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__11093 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11093) : cljs.core.key.call(null,G__11093));
})(),(function (){var G__11094 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11094) : cljs.core.val.call(null,G__11094));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__11098 = cljs.core.next(es);
var G__11099 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__11095 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11095) : cljs.core.key.call(null,G__11095));
})(),(function (){var G__11096 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11096) : cljs.core.val.call(null,G__11096));
})());
es = G__11098;
tcoll__$2 = G__11099;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function cljs$core$array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__11100 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__11101 = (i + (2));
out = G__11100;
i = G__11101;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function cljs$core$__GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function cljs$core$key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function cljs$core$mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var cljs$core$clone_and_set = null;
var cljs$core$clone_and_set__3 = (function (arr,i,a){
var G__11104 = cljs.core.aclone(arr);
(G__11104[i] = a);

return G__11104;
});
var cljs$core$clone_and_set__5 = (function (arr,i,a,j,b){
var G__11105 = cljs.core.aclone(arr);
(G__11105[i] = a);

(G__11105[j] = b);

return G__11105;
});
cljs$core$clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return cljs$core$clone_and_set__3.call(this,arr,i,a);
case 5:
return cljs$core$clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
return cljs$core$clone_and_set;
})()
;
cljs.core.remove_pair = (function cljs$core$remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function cljs$core$bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function cljs$core$bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var cljs$core$edit_and_set = null;
var cljs$core$edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var cljs$core$edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
cljs$core$edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return cljs$core$edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return cljs$core$edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
return cljs$core$edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function cljs$core$inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__11110 = init__$1;
var G__11111 = k;
var G__11112 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11110,G__11111,G__11112) : f.call(null,G__11110,G__11111,G__11112));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11113 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11113) : cljs.core.deref.call(null,G__11113));
} else {
var G__11114 = (i + (2));
var G__11115 = init__$2;
i = G__11114;
init__$1 = G__11115;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11116 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11116) : cljs.core.create_inode_seq.call(null,G__11116));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_11130 = (0);
var j_11131 = (0);
while(true){
if((i_11130 < (32))){
if((((self__.bitmap >>> i_11130) & (1)) === (0))){
var G__11132 = (i_11130 + (1));
var G__11133 = j_11131;
i_11130 = G__11132;
j_11131 = G__11133;
continue;
} else {
(nodes[i_11130] = ((!(((self__.arr[j_11131]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_11131])),(self__.arr[j_11131]),(self__.arr[(j_11131 + (1))]),added_leaf_QMARK_):(self__.arr[(j_11131 + (1))])));

var G__11134 = (i_11130 + (1));
var G__11135 = (j_11131 + (2));
i_11130 = G__11134;
j_11131 = G__11135;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__11117 = edit__$1;
var G__11118 = (shift + (5));
var G__11119 = key_or_nil;
var G__11120 = val_or_node;
var G__11121 = hash;
var G__11122 = key;
var G__11123 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__11117,G__11118,G__11119,G__11120,G__11121,G__11122,G__11123) : cljs.core.create_node.call(null,G__11117,G__11118,G__11119,G__11120,G__11121,G__11122,G__11123));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_11136 = (0);
var j_11137 = (0);
while(true){
if((i_11136 < (32))){
if((((self__.bitmap >>> i_11136) & (1)) === (0))){
var G__11138 = (i_11136 + (1));
var G__11139 = j_11137;
i_11136 = G__11138;
j_11137 = G__11139;
continue;
} else {
(nodes[i_11136] = ((!(((self__.arr[j_11137]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_11137])),(self__.arr[j_11137]),(self__.arr[(j_11137 + (1))]),added_leaf_QMARK_):(self__.arr[(j_11137 + (1))])));

var G__11140 = (i_11136 + (1));
var G__11141 = (j_11137 + (2));
i_11136 = G__11140;
j_11137 = G__11141;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__11124 = (shift + (5));
var G__11125 = key_or_nil;
var G__11126 = val_or_node;
var G__11127 = hash;
var G__11128 = key;
var G__11129 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__11124,G__11125,G__11126,G__11127,G__11128,G__11129) : cljs.core.create_node.call(null,G__11124,G__11125,G__11126,G__11127,G__11128,G__11129));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function cljs$core$pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__11142 = (i + (1));
var G__11143 = (j + (2));
var G__11144 = (bitmap | ((1) << i));
i = G__11142;
j = G__11143;
bitmap = G__11144;
continue;
} else {
var G__11145 = (i + (1));
var G__11146 = j;
var G__11147 = bitmap;
i = G__11145;
j = G__11146;
bitmap = G__11147;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11148 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__11148) : cljs.core.create_array_node_seq.call(null,G__11148));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11149 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11149) : cljs.core.deref.call(null,G__11149));
} else {
var G__11150 = (i + (1));
var G__11151 = init__$2;
i = G__11150;
init__$1 = G__11151;
continue;
}
} else {
var G__11152 = (i + (1));
var G__11153 = init__$1;
i = G__11152;
init__$1 = G__11153;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function cljs$core$__GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function cljs$core$hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__11154 = (i + (2));
i = G__11154;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__11155 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__11155) : cljs.core.create_inode_seq.call(null,G__11155));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var cljs$core$create_node = null;
var cljs$core$create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var cljs$core$create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
cljs$core$create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return cljs$core$create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return cljs$core$create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
return cljs$core$create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__11156 = self__.nodes;
var G__11157 = (self__.i + (2));
var G__11158 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11156,G__11157,G__11158) : cljs.core.create_inode_seq.call(null,G__11156,G__11157,G__11158));
} else {
var G__11159 = self__.nodes;
var G__11160 = self__.i;
var G__11161 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11159,G__11160,G__11161) : cljs.core.create_inode_seq.call(null,G__11159,G__11160,G__11161));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
cljs.core.create_inode_seq = (function() {
var cljs$core$create_inode_seq = null;
var cljs$core$create_inode_seq__1 = (function (nodes){
return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var cljs$core$create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__11165 = (j + (2));
j = G__11165;
continue;
}
} else {
var G__11166 = (j + (2));
j = G__11166;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
cljs$core$create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_inode_seq__1.call(this,nodes);
case 3:
return cljs$core$create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
return cljs$core$create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11167 = null;
var G__11168 = self__.nodes;
var G__11169 = self__.i;
var G__11170 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__11167,G__11168,G__11169,G__11170) : cljs.core.create_array_node_seq.call(null,G__11167,G__11168,G__11169,G__11170));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var cljs$core$create_array_node_seq = null;
var cljs$core$create_array_node_seq__1 = (function (nodes){
return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var cljs$core$create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__11175 = (j + (1));
j = G__11175;
continue;
}
} else {
var G__11176 = (j + (1));
j = G__11176;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
cljs$core$create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_array_node_seq__1.call(this,meta);
case 4:
return cljs$core$create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
return cljs$core$create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11178 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11178) : cljs.core.keys.call(null,G__11178));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11179 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11179) : cljs.core.vals.call(null,G__11179));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11180 = cljs.core.seq(coll);
var chunk__11181 = null;
var count__11182 = (0);
var i__11183 = (0);
while(true){
if((i__11183 < count__11182)){
var vec__11184 = chunk__11181.cljs$core$IIndexed$_nth$arity$2(null,i__11183);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11184,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11184,(1),null);
var G__11185_11196 = v;
var G__11186_11197 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11185_11196,G__11186_11197) : f.call(null,G__11185_11196,G__11186_11197));

var G__11198 = seq__11180;
var G__11199 = chunk__11181;
var G__11200 = count__11182;
var G__11201 = (i__11183 + (1));
seq__11180 = G__11198;
chunk__11181 = G__11199;
count__11182 = G__11200;
i__11183 = G__11201;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11180);
if(temp__4126__auto__){
var seq__11180__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11180__$1)){
var c__4304__auto__ = cljs.core.chunk_first(seq__11180__$1);
var G__11202 = cljs.core.chunk_rest(seq__11180__$1);
var G__11203 = c__4304__auto__;
var G__11204 = cljs.core.count(c__4304__auto__);
var G__11205 = (0);
seq__11180 = G__11202;
chunk__11181 = G__11203;
count__11182 = G__11204;
i__11183 = G__11205;
continue;
} else {
var vec__11187 = cljs.core.first(seq__11180__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11187,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11187,(1),null);
var G__11188_11206 = v;
var G__11189_11207 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11188_11206,G__11189_11207) : f.call(null,G__11188_11206,G__11189_11207));

var G__11208 = cljs.core.next(seq__11180__$1);
var G__11209 = null;
var G__11210 = (0);
var G__11211 = (0);
seq__11180 = G__11208;
chunk__11181 = G__11209;
count__11182 = G__11210;
i__11183 = G__11211;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__11190 = init;
var G__11191 = null;
var G__11192 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11190,G__11191,G__11192) : f.call(null,G__11190,G__11191,G__11192));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11193 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11193) : cljs.core.deref.call(null,G__11193));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj11195 = {};
return obj11195;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11212 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11213 = cljs.core.next(es);
ret = G__11212;
es = G__11213;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__11214 = null;
var G__11214__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11214__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11214 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11214__2.call(this,self__,k);
case 3:
return G__11214__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11214.cljs$core$IFn$_invoke$arity$2 = G__11214__2;
G__11214.cljs$core$IFn$_invoke$arity$3 = G__11214__3;
return G__11214;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args11177){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11177)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__11215 = (i + (2));
var G__11216 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__11215;
ret = G__11216;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__11217 = (i + (1));
var G__11218 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__11217;
out = G__11218;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__11219 = o;
if(G__11219){
var bit__4229__auto__ = (G__11219.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4229__auto__) || (G__11219.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__11219.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11219);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__11219);
}
})()){
return tcoll.assoc_BANG_((function (){var G__11220 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11220) : cljs.core.key.call(null,G__11220));
})(),(function (){var G__11221 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11221) : cljs.core.val.call(null,G__11221));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__11224 = cljs.core.next(es);
var G__11225 = tcoll__$1.assoc_BANG_((function (){var G__11222 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11222) : cljs.core.key.call(null,G__11222));
})(),(function (){var G__11223 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11223) : cljs.core.val.call(null,G__11223));
})());
es = G__11224;
tcoll__$1 = G__11225;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__11226 = ((ascending_QMARK_)?t.left:t.right);
var G__11227 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__11226;
stack__$1 = G__11227;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
cljs.core.create_tree_map_seq = (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function cljs$core$balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function cljs$core$balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function cljs$core$balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function cljs$core$balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function cljs$core$tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?cljs$core$tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__11240 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11240) : cljs.core.deref.call(null,G__11240));
} else {
var init__$2 = (function (){var G__11241 = init__$1;
var G__11242 = node.key;
var G__11243 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11241,G__11242,G__11243) : f.call(null,G__11241,G__11242,G__11243));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__11244 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11244) : cljs.core.deref.call(null,G__11244));
} else {
var init__$3 = ((!((node.right == null)))?cljs$core$tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__11245 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11245) : cljs.core.deref.call(null,G__11245));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__11247 = null;
var G__11247__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11247__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11247 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11247__2.call(this,self__,k);
case 3:
return G__11247__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11247.cljs$core$IFn$_invoke$arity$2 = G__11247__2;
G__11247.cljs$core$IFn$_invoke$arity$3 = G__11247__3;
return G__11247;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args11246){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11246)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__11249 = null;
var G__11249__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11249__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11249 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11249__2.call(this,self__,k);
case 3:
return G__11249__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11249.cljs$core$IFn$_invoke$arity$2 = G__11249__2;
G__11249.cljs$core$IFn$_invoke$arity$3 = G__11249__3;
return G__11249;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args11248){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11248)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function cljs$core$__GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
cljs.core.tree_map_add = (function cljs$core$tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__11262 = k;
var G__11263 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11262,G__11263) : comp.call(null,G__11262,G__11263));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = cljs$core$tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = cljs$core$tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function cljs$core$tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,cljs$core$tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,cljs$core$tree_map_append(left,right.left),right.right,null));
} else {
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function cljs$core$tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__11282 = k;
var G__11283 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11282,G__11283) : comp.call(null,G__11282,G__11283));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = cljs$core$tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = cljs$core$tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function cljs$core$tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__11294 = k;
var G__11295 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11294,G__11295) : comp.call(null,G__11294,G__11295));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,cljs$core$tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,cljs$core$tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11297 = cljs.core.seq(coll);
var chunk__11298 = null;
var count__11299 = (0);
var i__11300 = (0);
while(true){
if((i__11300 < count__11299)){
var vec__11301 = chunk__11298.cljs$core$IIndexed$_nth$arity$2(null,i__11300);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11301,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11301,(1),null);
var G__11302_11314 = v;
var G__11303_11315 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11302_11314,G__11303_11315) : f.call(null,G__11302_11314,G__11303_11315));

var G__11316 = seq__11297;
var G__11317 = chunk__11298;
var G__11318 = count__11299;
var G__11319 = (i__11300 + (1));
seq__11297 = G__11316;
chunk__11298 = G__11317;
count__11299 = G__11318;
i__11300 = G__11319;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11297);
if(temp__4126__auto__){
var seq__11297__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11297__$1)){
var c__4304__auto__ = cljs.core.chunk_first(seq__11297__$1);
var G__11320 = cljs.core.chunk_rest(seq__11297__$1);
var G__11321 = c__4304__auto__;
var G__11322 = cljs.core.count(c__4304__auto__);
var G__11323 = (0);
seq__11297 = G__11320;
chunk__11298 = G__11321;
count__11299 = G__11322;
i__11300 = G__11323;
continue;
} else {
var vec__11304 = cljs.core.first(seq__11297__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11304,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11304,(1),null);
var G__11305_11324 = v;
var G__11306_11325 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11305_11324,G__11306_11325) : f.call(null,G__11305_11324,G__11306_11325));

var G__11326 = cljs.core.next(seq__11297__$1);
var G__11327 = null;
var G__11328 = (0);
var G__11329 = (0);
seq__11297 = G__11326;
chunk__11298 = G__11327;
count__11299 = G__11328;
i__11300 = G__11329;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11307 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__11307) : cljs.core.keys.call(null,G__11307));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__11308 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__11308) : cljs.core.vals.call(null,G__11308));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11309 = k;
var G__11310 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11309,G__11310) : self__.comp.call(null,G__11309,G__11310));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__11330 = t.left;
t = G__11330;
continue;
} else {
var G__11331 = t.right;
t = G__11331;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__11332 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__11333 = cljs.core.next(es);
ret = G__11332;
es = G__11333;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__11334 = null;
var G__11334__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11334__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11334 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11334__2.call(this,self__,k);
case 3:
return G__11334__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11334.cljs$core$IFn$_invoke$arity$2 = G__11334__2;
G__11334.cljs$core$IFn$_invoke$arity$3 = G__11334__3;
return G__11334;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args11296){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11296)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__11311 = k;
var G__11312 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11311,G__11312) : self__.comp.call(null,G__11311,G__11312));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__11335 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11336 = t.left;
stack = G__11335;
t = G__11336;
continue;
} else {
var G__11337 = stack;
var G__11338 = t.right;
stack = G__11337;
t = G__11338;
continue;
}
} else {
if((c > (0))){
var G__11339 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__11340 = t.right;
stack = G__11339;
t = G__11340;
continue;
} else {
var G__11341 = stack;
var G__11342 = t.left;
stack = G__11341;
t = G__11342;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__11313 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11313) : cljs.core.key.call(null,G__11313));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var cljs$core$hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__11343 = cljs.core.nnext(in$);
var G__11344 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11343;
out = G__11344;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var cljs$core$hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11345__i = 0, G__11345__a = new Array(arguments.length -  0);
while (G__11345__i < G__11345__a.length) {G__11345__a[G__11345__i] = arguments[G__11345__i + 0]; ++G__11345__i;}
  keyvals = new cljs.core.IndexedSeq(G__11345__a,0);
} 
return cljs$core$hash_map__delegate.call(this,keyvals);};
cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
cljs$core$hash_map.cljs$lang$applyTo = (function (arglist__11346){
var keyvals = cljs.core.seq(arglist__11346);
return cljs$core$hash_map__delegate(keyvals);
});
cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
return cljs$core$hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var cljs$core$array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var cljs$core$array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11347__i = 0, G__11347__a = new Array(arguments.length -  0);
while (G__11347__i < G__11347__a.length) {G__11347__a[G__11347__i] = arguments[G__11347__i + 0]; ++G__11347__i;}
  keyvals = new cljs.core.IndexedSeq(G__11347__a,0);
} 
return cljs$core$array_map__delegate.call(this,keyvals);};
cljs$core$array_map.cljs$lang$maxFixedArity = 0;
cljs$core$array_map.cljs$lang$applyTo = (function (arglist__11348){
var keyvals = cljs.core.seq(arglist__11348);
return cljs$core$array_map__delegate(keyvals);
});
cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
return cljs$core$array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var cljs$core$obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj11352 = {};
return obj11352;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__11353 = cljs.core.nnext(kvs);
kvs = G__11353;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var cljs$core$obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11354__i = 0, G__11354__a = new Array(arguments.length -  0);
while (G__11354__i < G__11354__a.length) {G__11354__a[G__11354__i] = arguments[G__11354__i + 0]; ++G__11354__i;}
  keyvals = new cljs.core.IndexedSeq(G__11354__a,0);
} 
return cljs$core$obj_map__delegate.call(this,keyvals);};
cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
cljs$core$obj_map.cljs$lang$applyTo = (function (arglist__11355){
var keyvals = cljs.core.seq(arglist__11355);
return cljs$core$obj_map__delegate(keyvals);
});
cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
return cljs$core$obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var cljs$core$sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__11356 = cljs.core.nnext(in$);
var G__11357 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11356;
out = G__11357;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11358__i = 0, G__11358__a = new Array(arguments.length -  0);
while (G__11358__i < G__11358__a.length) {G__11358__a[G__11358__i] = arguments[G__11358__i + 0]; ++G__11358__i;}
  keyvals = new cljs.core.IndexedSeq(G__11358__a,0);
} 
return cljs$core$sorted_map__delegate.call(this,keyvals);};
cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_map.cljs$lang$applyTo = (function (arglist__11359){
var keyvals = cljs.core.seq(arglist__11359);
return cljs$core$sorted_map__delegate(keyvals);
});
cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
return cljs$core$sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var cljs$core$sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__11360 = cljs.core.nnext(in$);
var G__11361 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__11360;
out = G__11361;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__11362__i = 0, G__11362__a = new Array(arguments.length -  1);
while (G__11362__i < G__11362__a.length) {G__11362__a[G__11362__i] = arguments[G__11362__i + 1]; ++G__11362__i;}
  keyvals = new cljs.core.IndexedSeq(G__11362__a,0);
} 
return cljs$core$sorted_map_by__delegate.call(this,comparator,keyvals);};
cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_map_by.cljs$lang$applyTo = (function (arglist__11363){
var comparator = cljs.core.first(arglist__11363);
var keyvals = cljs.core.rest(arglist__11363);
return cljs$core$sorted_map_by__delegate(comparator,keyvals);
});
cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
return cljs$core$sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11364 = self__.mseq;
if(G__11364){
var bit__4229__auto__ = (G__11364.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4229__auto__) || (G__11364.cljs$core$INext$)){
return true;
} else {
if((!G__11364.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11364);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11364);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11365 = self__.mseq;
if(G__11365){
var bit__4229__auto__ = (G__11365.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4229__auto__) || (G__11365.cljs$core$INext$)){
return true;
} else {
if((!G__11365.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11365);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11365);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function cljs$core$__GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function cljs$core$keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function cljs$core$key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11366 = self__.mseq;
if(G__11366){
var bit__4229__auto__ = (G__11366.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4229__auto__) || (G__11366.cljs$core$INext$)){
return true;
} else {
if((!G__11366.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11366);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11366);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__11367 = self__.mseq;
if(G__11367){
var bit__4229__auto__ = (G__11367.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4229__auto__) || (G__11367.cljs$core$INext$)){
return true;
} else {
if((!G__11367.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11367);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__11367);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function cljs$core$__GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function cljs$core$vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function cljs$core$val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var cljs$core$merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__11368_SHARP_,p2__11369_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3935__auto__ = p1__11368_SHARP_;
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__11369_SHARP_);
}),maps);
} else {
return null;
}
};
var cljs$core$merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__11370__i = 0, G__11370__a = new Array(arguments.length -  0);
while (G__11370__i < G__11370__a.length) {G__11370__a[G__11370__i] = arguments[G__11370__i + 0]; ++G__11370__i;}
  maps = new cljs.core.IndexedSeq(G__11370__a,0);
} 
return cljs$core$merge__delegate.call(this,maps);};
cljs$core$merge.cljs$lang$maxFixedArity = 0;
cljs$core$merge.cljs$lang$applyTo = (function (arglist__11371){
var maps = cljs.core.seq(arglist__11371);
return cljs$core$merge__delegate(maps);
});
cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
return cljs$core$merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var cljs$core$merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__11374 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__11375 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11374,G__11375) : f.call(null,G__11374,G__11375));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3935__auto__ = m1;
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var cljs$core$merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__11376__i = 0, G__11376__a = new Array(arguments.length -  1);
while (G__11376__i < G__11376__a.length) {G__11376__a[G__11376__i] = arguments[G__11376__i + 1]; ++G__11376__i;}
  maps = new cljs.core.IndexedSeq(G__11376__a,0);
} 
return cljs$core$merge_with__delegate.call(this,f,maps);};
cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
cljs$core$merge_with.cljs$lang$applyTo = (function (arglist__11377){
var f = cljs.core.first(arglist__11377);
var maps = cljs.core.rest(arglist__11377);
return cljs$core$merge_with__delegate(f,maps);
});
cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
return cljs$core$merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function cljs$core$select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$cljs$core_SLASH_not_DASH_found);
var G__11378 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$cljs$core_SLASH_not_DASH_found))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__11379 = cljs.core.next(keys);
ret = G__11378;
keys = G__11379;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11382 = cljs.core.seq(coll);
var chunk__11383 = null;
var count__11384 = (0);
var i__11385 = (0);
while(true){
if((i__11385 < count__11384)){
var vec__11386 = chunk__11383.cljs$core$IIndexed$_nth$arity$2(null,i__11385);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11386,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11386,(1),null);
var G__11387_11392 = v;
var G__11388_11393 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11387_11392,G__11388_11393) : f.call(null,G__11387_11392,G__11388_11393));

var G__11394 = seq__11382;
var G__11395 = chunk__11383;
var G__11396 = count__11384;
var G__11397 = (i__11385 + (1));
seq__11382 = G__11394;
chunk__11383 = G__11395;
count__11384 = G__11396;
i__11385 = G__11397;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11382);
if(temp__4126__auto__){
var seq__11382__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11382__$1)){
var c__4304__auto__ = cljs.core.chunk_first(seq__11382__$1);
var G__11398 = cljs.core.chunk_rest(seq__11382__$1);
var G__11399 = c__4304__auto__;
var G__11400 = cljs.core.count(c__4304__auto__);
var G__11401 = (0);
seq__11382 = G__11398;
chunk__11383 = G__11399;
count__11384 = G__11400;
i__11385 = G__11401;
continue;
} else {
var vec__11389 = cljs.core.first(seq__11382__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11389,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11389,(1),null);
var G__11390_11402 = v;
var G__11391_11403 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11390_11402,G__11391_11403) : f.call(null,G__11390_11402,G__11391_11403));

var G__11404 = cljs.core.next(seq__11382__$1);
var G__11405 = null;
var G__11406 = (0);
var G__11407 = (0);
seq__11382 = G__11404;
chunk__11383 = G__11405;
count__11384 = G__11406;
i__11385 = G__11407;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11380_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11380_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__11408 = null;
var G__11408__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11408__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11408 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11408__2.call(this,self__,k);
case 3:
return G__11408__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11408.cljs$core$IFn$_invoke$arity$2 = G__11408__2;
G__11408.cljs$core$IFn$_invoke$arity$3 = G__11408__3;
return G__11408;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args11381){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11381)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__11409 = (i + (1));
var G__11410 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__11409;
out = G__11410;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__11411 = (i + (1));
var G__11412 = cljs.core._conj_BANG_(out,(items[i]));
i = G__11411;
out = G__11412;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__11414 = null;
var G__11414__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__11414__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__11414 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11414__2.call(this,self__,k);
case 3:
return G__11414__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11414.cljs$core$IFn$_invoke$arity$2 = G__11414__2;
G__11414.cljs$core$IFn$_invoke$arity$3 = G__11414__3;
return G__11414;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args11413){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11413)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function cljs$core$__GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__11417 = cljs.core.seq(coll);
var chunk__11418 = null;
var count__11419 = (0);
var i__11420 = (0);
while(true){
if((i__11420 < count__11419)){
var vec__11421 = chunk__11418.cljs$core$IIndexed$_nth$arity$2(null,i__11420);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11421,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11421,(1),null);
var G__11422_11427 = v;
var G__11423_11428 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11422_11427,G__11423_11428) : f.call(null,G__11422_11427,G__11423_11428));

var G__11429 = seq__11417;
var G__11430 = chunk__11418;
var G__11431 = count__11419;
var G__11432 = (i__11420 + (1));
seq__11417 = G__11429;
chunk__11418 = G__11430;
count__11419 = G__11431;
i__11420 = G__11432;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11417);
if(temp__4126__auto__){
var seq__11417__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11417__$1)){
var c__4304__auto__ = cljs.core.chunk_first(seq__11417__$1);
var G__11433 = cljs.core.chunk_rest(seq__11417__$1);
var G__11434 = c__4304__auto__;
var G__11435 = cljs.core.count(c__4304__auto__);
var G__11436 = (0);
seq__11417 = G__11433;
chunk__11418 = G__11434;
count__11419 = G__11435;
i__11420 = G__11436;
continue;
} else {
var vec__11424 = cljs.core.first(seq__11417__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11424,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11424,(1),null);
var G__11425_11437 = v;
var G__11426_11438 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11425_11437,G__11426_11438) : f.call(null,G__11425_11437,G__11426_11438));

var G__11439 = cljs.core.next(seq__11417__$1);
var G__11440 = null;
var G__11441 = (0);
var G__11442 = (0);
seq__11417 = G__11439;
chunk__11418 = G__11440;
count__11419 = G__11441;
i__11420 = G__11442;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__11415_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__11415_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__11443 = null;
var G__11443__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__11443__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__11443 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__11443__2.call(this,self__,k);
case 3:
return G__11443__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11443.cljs$core$IFn$_invoke$arity$2 = G__11443__2;
G__11443.cljs$core$IFn$_invoke$arity$3 = G__11443__3;
return G__11443;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args11416){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11416)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
cljs.core.set_from_indexed_seq = (function cljs$core$set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4354__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4354__auto__.length)){
var G__11444 = (i + (1));
var G__11445 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__11444;
res = G__11445;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function cljs$core$set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__11446 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__11447 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__11446;
out = G__11447;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * Returns a new hash set with supplied keys.  Any equal keys are
 * handled as if by repeated uses of conj.
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var cljs$core$hash_set = null;
var cljs$core$hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var cljs$core$hash_set__1 = (function() { 
var G__11448__delegate = function (keys){
return cljs.core.set(keys);
};
var G__11448 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11449__i = 0, G__11449__a = new Array(arguments.length -  0);
while (G__11449__i < G__11449__a.length) {G__11449__a[G__11449__i] = arguments[G__11449__i + 0]; ++G__11449__i;}
  keys = new cljs.core.IndexedSeq(G__11449__a,0);
} 
return G__11448__delegate.call(this,keys);};
G__11448.cljs$lang$maxFixedArity = 0;
G__11448.cljs$lang$applyTo = (function (arglist__11450){
var keys = cljs.core.seq(arglist__11450);
return G__11448__delegate(keys);
});
G__11448.cljs$core$IFn$_invoke$arity$variadic = G__11448__delegate;
return G__11448;
})()
;
cljs$core$hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return cljs$core$hash_set__0.call(this);
default:
var G__11451 = null;
if (arguments.length > 0) {
var G__11452__i = 0, G__11452__a = new Array(arguments.length -  0);
while (G__11452__i < G__11452__a.length) {G__11452__a[G__11452__i] = arguments[G__11452__i + 0]; ++G__11452__i;}
G__11451 = new cljs.core.IndexedSeq(G__11452__a,0);
}
return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__11451);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var cljs$core$sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var cljs$core$sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__11453__i = 0, G__11453__a = new Array(arguments.length -  0);
while (G__11453__i < G__11453__a.length) {G__11453__a[G__11453__i] = arguments[G__11453__i + 0]; ++G__11453__i;}
  keys = new cljs.core.IndexedSeq(G__11453__a,0);
} 
return cljs$core$sorted_set__delegate.call(this,keys);};
cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_set.cljs$lang$applyTo = (function (arglist__11454){
var keys = cljs.core.seq(arglist__11454);
return cljs$core$sorted_set__delegate(keys);
});
cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
return cljs$core$sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var cljs$core$sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var cljs$core$sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__11455__i = 0, G__11455__a = new Array(arguments.length -  1);
while (G__11455__i < G__11455__a.length) {G__11455__a[G__11455__i] = arguments[G__11455__i + 1]; ++G__11455__i;}
  keys = new cljs.core.IndexedSeq(G__11455__a,0);
} 
return cljs$core$sorted_set_by__delegate.call(this,comparator,keys);};
cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_set_by.cljs$lang$applyTo = (function (arglist__11456){
var comparator = cljs.core.first(arglist__11456);
var keys = cljs.core.rest(arglist__11456);
return cljs$core$sorted_set_by__delegate(comparator,keys);
});
cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
return cljs$core$sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var cljs$core$replace = null;
var cljs$core$replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__11457_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__11457_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__11457_SHARP_;
}
}));
});
var cljs$core$replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11458_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__11458_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__11458_SHARP_;
}
}),coll);
}
});
cljs$core$replace = function(smap,coll){
switch(arguments.length){
case 1:
return cljs$core$replace__1.call(this,smap);
case 2:
return cljs$core$replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
return cljs$core$replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var cljs$core$distinct = null;
var cljs$core$distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__11479 = null;
var G__11479__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11479__1 = (function (result){
var G__11469 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11469) : rf.call(null,G__11469));
});
var G__11479__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__11470 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11470) : cljs.core.deref.call(null,G__11470));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__11471 = result;
var G__11472 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11471,G__11472) : rf.call(null,G__11471,G__11472));
}
});
G__11479 = function(result,input){
switch(arguments.length){
case 0:
return G__11479__0.call(this);
case 1:
return G__11479__1.call(this,result);
case 2:
return G__11479__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11479.cljs$core$IFn$_invoke$arity$0 = G__11479__0;
G__11479.cljs$core$IFn$_invoke$arity$1 = G__11479__1;
G__11479.cljs$core$IFn$_invoke$arity$2 = G__11479__2;
return G__11479;
})()
;})(seen))
});
});
var cljs$core$distinct__1 = (function (coll){
var step = (function cljs$core$distinct_$_step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__11477,seen__$1){
while(true){
var vec__11478 = p__11477;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11478,(0),null);
var xs__$1 = vec__11478;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__11480 = cljs.core.rest(s);
var G__11481 = seen__$1;
p__11477 = G__11480;
seen__$1 = G__11481;
continue;
} else {
return cljs.core.cons(f,cljs$core$distinct_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs$core$distinct = function(coll){
switch(arguments.length){
case 0:
return cljs$core$distinct__0.call(this);
case 1:
return cljs$core$distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
return cljs$core$distinct;
})()
;
/**
 * Return a seq of all but the last item in coll, in linear time
 */
cljs.core.butlast = (function cljs$core$butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__11482 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__11483 = cljs.core.next(s__$1);
ret = G__11482;
s__$1 = G__11483;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function cljs$core$name(x){
if((function (){var G__11485 = x;
if(G__11485){
var bit__4226__auto__ = (G__11485.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4226__auto__) || (G__11485.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function cljs$core$zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__11486 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__11487 = cljs.core.next(ks);
var G__11488 = cljs.core.next(vs);
map = G__11486;
ks = G__11487;
vs = G__11488;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var cljs$core$max_key = null;
var cljs$core$max_key__2 = (function (k,x){
return x;
});
var cljs$core$max_key__3 = (function (k,x,y){
if(((function (){var G__11499 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11499) : k.call(null,G__11499));
})() > (function (){var G__11500 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11500) : k.call(null,G__11500));
})())){
return x;
} else {
return y;
}
});
var cljs$core$max_key__4 = (function() { 
var G__11501__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11489_SHARP_,p2__11490_SHARP_){
return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,p1__11489_SHARP_,p2__11490_SHARP_);
}),cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11501 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11502__i = 0, G__11502__a = new Array(arguments.length -  3);
while (G__11502__i < G__11502__a.length) {G__11502__a[G__11502__i] = arguments[G__11502__i + 3]; ++G__11502__i;}
  more = new cljs.core.IndexedSeq(G__11502__a,0);
} 
return G__11501__delegate.call(this,k,x,y,more);};
G__11501.cljs$lang$maxFixedArity = 3;
G__11501.cljs$lang$applyTo = (function (arglist__11503){
var k = cljs.core.first(arglist__11503);
arglist__11503 = cljs.core.next(arglist__11503);
var x = cljs.core.first(arglist__11503);
arglist__11503 = cljs.core.next(arglist__11503);
var y = cljs.core.first(arglist__11503);
var more = cljs.core.rest(arglist__11503);
return G__11501__delegate(k,x,y,more);
});
G__11501.cljs$core$IFn$_invoke$arity$variadic = G__11501__delegate;
return G__11501;
})()
;
cljs$core$max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$max_key__2.call(this,k,x);
case 3:
return cljs$core$max_key__3.call(this,k,x,y);
default:
var G__11504 = null;
if (arguments.length > 3) {
var G__11505__i = 0, G__11505__a = new Array(arguments.length -  3);
while (G__11505__i < G__11505__a.length) {G__11505__a[G__11505__i] = arguments[G__11505__i + 3]; ++G__11505__i;}
G__11504 = new cljs.core.IndexedSeq(G__11505__a,0);
}
return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max_key.cljs$lang$maxFixedArity = 3;
cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var cljs$core$min_key = null;
var cljs$core$min_key__2 = (function (k,x){
return x;
});
var cljs$core$min_key__3 = (function (k,x,y){
if(((function (){var G__11516 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11516) : k.call(null,G__11516));
})() < (function (){var G__11517 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__11517) : k.call(null,G__11517));
})())){
return x;
} else {
return y;
}
});
var cljs$core$min_key__4 = (function() { 
var G__11518__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11506_SHARP_,p2__11507_SHARP_){
return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,p1__11506_SHARP_,p2__11507_SHARP_);
}),cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__11518 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__11519__i = 0, G__11519__a = new Array(arguments.length -  3);
while (G__11519__i < G__11519__a.length) {G__11519__a[G__11519__i] = arguments[G__11519__i + 3]; ++G__11519__i;}
  more = new cljs.core.IndexedSeq(G__11519__a,0);
} 
return G__11518__delegate.call(this,k,x,y,more);};
G__11518.cljs$lang$maxFixedArity = 3;
G__11518.cljs$lang$applyTo = (function (arglist__11520){
var k = cljs.core.first(arglist__11520);
arglist__11520 = cljs.core.next(arglist__11520);
var x = cljs.core.first(arglist__11520);
arglist__11520 = cljs.core.next(arglist__11520);
var y = cljs.core.first(arglist__11520);
var more = cljs.core.rest(arglist__11520);
return G__11518__delegate(k,x,y,more);
});
G__11518.cljs$core$IFn$_invoke$arity$variadic = G__11518__delegate;
return G__11518;
})()
;
cljs$core$min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$min_key__2.call(this,k,x);
case 3:
return cljs$core$min_key__3.call(this,k,x,y);
default:
var G__11521 = null;
if (arguments.length > 3) {
var G__11522__i = 0, G__11522__a = new Array(arguments.length -  3);
while (G__11522__i < G__11522__a.length) {G__11522__a[G__11522__i] = arguments[G__11522__i + 3]; ++G__11522__i;}
G__11521 = new cljs.core.IndexedSeq(G__11522__a,0);
}
return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__11521);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min_key.cljs$lang$maxFixedArity = 3;
cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function cljs$core$__GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function cljs$core$array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var cljs$core$partition_all = null;
var cljs$core$partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__11539 = null;
var G__11539__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11539__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__11534 = result;
var G__11535 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11534,G__11535) : rf.call(null,G__11534,G__11535));
})());
})());
var G__11536 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11536) : rf.call(null,G__11536));
});
var G__11539__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__11537 = result;
var G__11538 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11537,G__11538) : rf.call(null,G__11537,G__11538));
} else {
return result;
}
});
G__11539 = function(result,input){
switch(arguments.length){
case 0:
return G__11539__0.call(this);
case 1:
return G__11539__1.call(this,result);
case 2:
return G__11539__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11539.cljs$core$IFn$_invoke$arity$0 = G__11539__0;
G__11539.cljs$core$IFn$_invoke$arity$1 = G__11539__1;
G__11539.cljs$core$IFn$_invoke$arity$2 = G__11539__2;
return G__11539;
})()
;})(a))
});
});
var cljs$core$partition_all__2 = (function (n,coll){
return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_all__1.call(this,n);
case 2:
return cljs$core$partition_all__2.call(this,n,step);
case 3:
return cljs$core$partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
return cljs$core$partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var cljs$core$take_while = null;
var cljs$core$take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__11552 = null;
var G__11552__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11552__1 = (function (result){
var G__11547 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11547) : rf.call(null,G__11547));
});
var G__11552__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__11548 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11548) : pred.call(null,G__11548));
})())){
var G__11549 = result;
var G__11550 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11549,G__11550) : rf.call(null,G__11549,G__11550));
} else {
return cljs.core.reduced(result);
}
});
G__11552 = function(result,input){
switch(arguments.length){
case 0:
return G__11552__0.call(this);
case 1:
return G__11552__1.call(this,result);
case 2:
return G__11552__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11552.cljs$core$IFn$_invoke$arity$0 = G__11552__0;
G__11552.cljs$core$IFn$_invoke$arity$1 = G__11552__1;
G__11552.cljs$core$IFn$_invoke$arity$2 = G__11552__2;
return G__11552;
})()
});
});
var cljs$core$take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__11551 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11551) : pred.call(null,G__11551));
})())){
return cljs.core.cons(cljs.core.first(s),cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$take_while__1.call(this,pred);
case 2:
return cljs$core$take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
return cljs$core$take_while;
})()
;
cljs.core.mk_bound_fn = (function cljs$core$mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__11557 = (function (){var G__11559 = cljs.core._entry_key(sc,e);
var G__11560 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11559,G__11560) : comp.call(null,G__11559,G__11560));
})();
var G__11558 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__11557,G__11558) : test.call(null,G__11557,G__11558));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var cljs$core$subseq = null;
var cljs$core$subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11564 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11564,(0),null);
var s = vec__11564;
if(cljs.core.truth_((function (){var G__11565 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__11565) : include.call(null,G__11565));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var cljs$core$subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11566 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11566,(0),null);
var s = vec__11566;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$subseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
return cljs$core$subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var cljs$core$rsubseq = null;
var cljs$core$rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11570 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11570,(0),null);
var s = vec__11570;
if(cljs.core.truth_((function (){var G__11571 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__11571) : include.call(null,G__11571));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var cljs$core$rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__11572 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11572,(0),null);
var s = vec__11572;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
return cljs$core$rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function cljs$core$__GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__11573 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__11573) : Math.ceil.call(null,G__11573));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4027__auto__ = self__.__hash;
if(!((h__4027__auto__ == null))){
return h__4027__auto__;
} else {
var h__4027__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4027__auto____$1;

return h__4027__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__11574 = ret;
var G__11575 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11574,G__11575) : f.call(null,G__11574,G__11575));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__11576 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11576) : cljs.core.deref.call(null,G__11576));
} else {
var G__11577 = (i + self__.step);
var G__11578 = ret__$1;
i = G__11577;
ret = G__11578;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function cljs$core$__GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var cljs$core$range = null;
var cljs$core$range__0 = (function (){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var cljs$core$range__1 = (function (end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var cljs$core$range__2 = (function (start,end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var cljs$core$range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
cljs$core$range = function(start,end,step){
switch(arguments.length){
case 0:
return cljs$core$range__0.call(this);
case 1:
return cljs$core$range__1.call(this,start);
case 2:
return cljs$core$range__2.call(this,start,end);
case 3:
return cljs$core$range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
return cljs$core$range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var cljs$core$take_nth = null;
var cljs$core$take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__11596 = null;
var G__11596__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11596__1 = (function (result){
var G__11593 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11593) : rf.call(null,G__11593));
});
var G__11596__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__11594 = result;
var G__11595 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11594,G__11595) : rf.call(null,G__11594,G__11595));
} else {
return result;
}
});
G__11596 = function(result,input){
switch(arguments.length){
case 0:
return G__11596__0.call(this);
case 1:
return G__11596__1.call(this,result);
case 2:
return G__11596__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11596.cljs$core$IFn$_invoke$arity$0 = G__11596__0;
G__11596.cljs$core$IFn$_invoke$arity$1 = G__11596__1;
G__11596.cljs$core$IFn$_invoke$arity$2 = G__11596__2;
return G__11596;
})()
;})(ia))
});
});
var cljs$core$take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$take_nth = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take_nth__1.call(this,n);
case 2:
return cljs$core$take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
return cljs$core$take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function cljs$core$split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var cljs$core$partition_by = null;
var cljs$core$partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$cljs$core_SLASH_none);
return ((function (a,pa){
return (function() {
var G__11618 = null;
var G__11618__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11618__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__11609 = result;
var G__11610 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11609,G__11610) : rf.call(null,G__11609,G__11610));
})());
})());
var G__11611 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11611) : rf.call(null,G__11611));
});
var G__11618__2 = (function (result,input){
var pval = (function (){var G__11612 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11612) : cljs.core.deref.call(null,G__11612));
})();
var val = (function (){var G__11613 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11613) : f.call(null,G__11613));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$cljs$core_SLASH_none)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__11614 = result;
var G__11615 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11614,G__11615) : rf.call(null,G__11614,G__11615));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__11618 = function(result,input){
switch(arguments.length){
case 0:
return G__11618__0.call(this);
case 1:
return G__11618__1.call(this,result);
case 2:
return G__11618__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11618.cljs$core$IFn$_invoke$arity$0 = G__11618__0;
G__11618.cljs$core$IFn$_invoke$arity$1 = G__11618__1;
G__11618.cljs$core$IFn$_invoke$arity$2 = G__11618__2;
return G__11618;
})()
;})(a,pa))
});
});
var cljs$core$partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__11616 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11616) : f.call(null,G__11616));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__11597_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__11617 = p1__11597_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11617) : f.call(null,G__11617));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_by = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_by__1.call(this,f);
case 2:
return cljs$core$partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
return cljs$core$partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function cljs$core$frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var cljs$core$reductions = null;
var cljs$core$reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var cljs$core$reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__11627 = init;
var G__11628 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11627,G__11628) : f.call(null,G__11627,G__11628));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
cljs$core$reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return cljs$core$reductions__2.call(this,f,init);
case 3:
return cljs$core$reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
return cljs$core$reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var cljs$core$juxt = null;
var cljs$core$juxt__1 = (function (f){
return (function() {
var G__11723 = null;
var G__11723__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__11723__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11681 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11681) : f.call(null,G__11681));
})()],null));
});
var G__11723__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11682 = x;
var G__11683 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11682,G__11683) : f.call(null,G__11682,G__11683));
})()],null));
});
var G__11723__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11684 = x;
var G__11685 = y;
var G__11686 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11684,G__11685,G__11686) : f.call(null,G__11684,G__11685,G__11686));
})()],null));
});
var G__11723__4 = (function() { 
var G__11724__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__11724 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11725__i = 0, G__11725__a = new Array(arguments.length -  3);
while (G__11725__i < G__11725__a.length) {G__11725__a[G__11725__i] = arguments[G__11725__i + 3]; ++G__11725__i;}
  args = new cljs.core.IndexedSeq(G__11725__a,0);
} 
return G__11724__delegate.call(this,x,y,z,args);};
G__11724.cljs$lang$maxFixedArity = 3;
G__11724.cljs$lang$applyTo = (function (arglist__11726){
var x = cljs.core.first(arglist__11726);
arglist__11726 = cljs.core.next(arglist__11726);
var y = cljs.core.first(arglist__11726);
arglist__11726 = cljs.core.next(arglist__11726);
var z = cljs.core.first(arglist__11726);
var args = cljs.core.rest(arglist__11726);
return G__11724__delegate(x,y,z,args);
});
G__11724.cljs$core$IFn$_invoke$arity$variadic = G__11724__delegate;
return G__11724;
})()
;
G__11723 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11723__0.call(this);
case 1:
return G__11723__1.call(this,x);
case 2:
return G__11723__2.call(this,x,y);
case 3:
return G__11723__3.call(this,x,y,z);
default:
var G__11727 = null;
if (arguments.length > 3) {
var G__11728__i = 0, G__11728__a = new Array(arguments.length -  3);
while (G__11728__i < G__11728__a.length) {G__11728__a[G__11728__i] = arguments[G__11728__i + 3]; ++G__11728__i;}
G__11727 = new cljs.core.IndexedSeq(G__11728__a,0);
}
return G__11723__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11727);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11723.cljs$lang$maxFixedArity = 3;
G__11723.cljs$lang$applyTo = G__11723__4.cljs$lang$applyTo;
G__11723.cljs$core$IFn$_invoke$arity$0 = G__11723__0;
G__11723.cljs$core$IFn$_invoke$arity$1 = G__11723__1;
G__11723.cljs$core$IFn$_invoke$arity$2 = G__11723__2;
G__11723.cljs$core$IFn$_invoke$arity$3 = G__11723__3;
G__11723.cljs$core$IFn$_invoke$arity$variadic = G__11723__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11723;
})()
});
var cljs$core$juxt__2 = (function (f,g){
return (function() {
var G__11729 = null;
var G__11729__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__11729__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11687 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11687) : f.call(null,G__11687));
})(),(function (){var G__11688 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11688) : g.call(null,G__11688));
})()],null));
});
var G__11729__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11689 = x;
var G__11690 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11689,G__11690) : f.call(null,G__11689,G__11690));
})(),(function (){var G__11691 = x;
var G__11692 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11691,G__11692) : g.call(null,G__11691,G__11692));
})()],null));
});
var G__11729__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11693 = x;
var G__11694 = y;
var G__11695 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11693,G__11694,G__11695) : f.call(null,G__11693,G__11694,G__11695));
})(),(function (){var G__11696 = x;
var G__11697 = y;
var G__11698 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11696,G__11697,G__11698) : g.call(null,G__11696,G__11697,G__11698));
})()],null));
});
var G__11729__4 = (function() { 
var G__11730__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__11730 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11731__i = 0, G__11731__a = new Array(arguments.length -  3);
while (G__11731__i < G__11731__a.length) {G__11731__a[G__11731__i] = arguments[G__11731__i + 3]; ++G__11731__i;}
  args = new cljs.core.IndexedSeq(G__11731__a,0);
} 
return G__11730__delegate.call(this,x,y,z,args);};
G__11730.cljs$lang$maxFixedArity = 3;
G__11730.cljs$lang$applyTo = (function (arglist__11732){
var x = cljs.core.first(arglist__11732);
arglist__11732 = cljs.core.next(arglist__11732);
var y = cljs.core.first(arglist__11732);
arglist__11732 = cljs.core.next(arglist__11732);
var z = cljs.core.first(arglist__11732);
var args = cljs.core.rest(arglist__11732);
return G__11730__delegate(x,y,z,args);
});
G__11730.cljs$core$IFn$_invoke$arity$variadic = G__11730__delegate;
return G__11730;
})()
;
G__11729 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11729__0.call(this);
case 1:
return G__11729__1.call(this,x);
case 2:
return G__11729__2.call(this,x,y);
case 3:
return G__11729__3.call(this,x,y,z);
default:
var G__11733 = null;
if (arguments.length > 3) {
var G__11734__i = 0, G__11734__a = new Array(arguments.length -  3);
while (G__11734__i < G__11734__a.length) {G__11734__a[G__11734__i] = arguments[G__11734__i + 3]; ++G__11734__i;}
G__11733 = new cljs.core.IndexedSeq(G__11734__a,0);
}
return G__11729__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11729.cljs$lang$maxFixedArity = 3;
G__11729.cljs$lang$applyTo = G__11729__4.cljs$lang$applyTo;
G__11729.cljs$core$IFn$_invoke$arity$0 = G__11729__0;
G__11729.cljs$core$IFn$_invoke$arity$1 = G__11729__1;
G__11729.cljs$core$IFn$_invoke$arity$2 = G__11729__2;
G__11729.cljs$core$IFn$_invoke$arity$3 = G__11729__3;
G__11729.cljs$core$IFn$_invoke$arity$variadic = G__11729__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11729;
})()
});
var cljs$core$juxt__3 = (function (f,g,h){
return (function() {
var G__11735 = null;
var G__11735__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__11735__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11699 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11699) : f.call(null,G__11699));
})(),(function (){var G__11700 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11700) : g.call(null,G__11700));
})(),(function (){var G__11701 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__11701) : h.call(null,G__11701));
})()],null));
});
var G__11735__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11702 = x;
var G__11703 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11702,G__11703) : f.call(null,G__11702,G__11703));
})(),(function (){var G__11704 = x;
var G__11705 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11704,G__11705) : g.call(null,G__11704,G__11705));
})(),(function (){var G__11706 = x;
var G__11707 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__11706,G__11707) : h.call(null,G__11706,G__11707));
})()],null));
});
var G__11735__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__11708 = x;
var G__11709 = y;
var G__11710 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11708,G__11709,G__11710) : f.call(null,G__11708,G__11709,G__11710));
})(),(function (){var G__11711 = x;
var G__11712 = y;
var G__11713 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11711,G__11712,G__11713) : g.call(null,G__11711,G__11712,G__11713));
})(),(function (){var G__11714 = x;
var G__11715 = y;
var G__11716 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__11714,G__11715,G__11716) : h.call(null,G__11714,G__11715,G__11716));
})()],null));
});
var G__11735__4 = (function() { 
var G__11736__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__11736 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11737__i = 0, G__11737__a = new Array(arguments.length -  3);
while (G__11737__i < G__11737__a.length) {G__11737__a[G__11737__i] = arguments[G__11737__i + 3]; ++G__11737__i;}
  args = new cljs.core.IndexedSeq(G__11737__a,0);
} 
return G__11736__delegate.call(this,x,y,z,args);};
G__11736.cljs$lang$maxFixedArity = 3;
G__11736.cljs$lang$applyTo = (function (arglist__11738){
var x = cljs.core.first(arglist__11738);
arglist__11738 = cljs.core.next(arglist__11738);
var y = cljs.core.first(arglist__11738);
arglist__11738 = cljs.core.next(arglist__11738);
var z = cljs.core.first(arglist__11738);
var args = cljs.core.rest(arglist__11738);
return G__11736__delegate(x,y,z,args);
});
G__11736.cljs$core$IFn$_invoke$arity$variadic = G__11736__delegate;
return G__11736;
})()
;
G__11735 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11735__0.call(this);
case 1:
return G__11735__1.call(this,x);
case 2:
return G__11735__2.call(this,x,y);
case 3:
return G__11735__3.call(this,x,y,z);
default:
var G__11739 = null;
if (arguments.length > 3) {
var G__11740__i = 0, G__11740__a = new Array(arguments.length -  3);
while (G__11740__i < G__11740__a.length) {G__11740__a[G__11740__i] = arguments[G__11740__i + 3]; ++G__11740__i;}
G__11739 = new cljs.core.IndexedSeq(G__11740__a,0);
}
return G__11735__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11735.cljs$lang$maxFixedArity = 3;
G__11735.cljs$lang$applyTo = G__11735__4.cljs$lang$applyTo;
G__11735.cljs$core$IFn$_invoke$arity$0 = G__11735__0;
G__11735.cljs$core$IFn$_invoke$arity$1 = G__11735__1;
G__11735.cljs$core$IFn$_invoke$arity$2 = G__11735__2;
G__11735.cljs$core$IFn$_invoke$arity$3 = G__11735__3;
G__11735.cljs$core$IFn$_invoke$arity$variadic = G__11735__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11735;
})()
});
var cljs$core$juxt__4 = (function() { 
var G__11741__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__11742 = null;
var G__11742__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11629_SHARP_,p2__11630_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11629_SHARP_,(function (){return (p2__11630_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__11630_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__11630_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11742__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11631_SHARP_,p2__11632_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11631_SHARP_,(function (){var G__11717 = x;
return (p2__11632_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__11632_SHARP_.cljs$core$IFn$_invoke$arity$1(G__11717) : p2__11632_SHARP_.call(null,G__11717));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11742__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11633_SHARP_,p2__11634_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11633_SHARP_,(function (){var G__11718 = x;
var G__11719 = y;
return (p2__11634_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__11634_SHARP_.cljs$core$IFn$_invoke$arity$2(G__11718,G__11719) : p2__11634_SHARP_.call(null,G__11718,G__11719));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11742__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11635_SHARP_,p2__11636_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11635_SHARP_,(function (){var G__11720 = x;
var G__11721 = y;
var G__11722 = z;
return (p2__11636_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__11636_SHARP_.cljs$core$IFn$_invoke$arity$3(G__11720,G__11721,G__11722) : p2__11636_SHARP_.call(null,G__11720,G__11721,G__11722));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__11742__4 = (function() { 
var G__11743__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__11637_SHARP_,p2__11638_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11637_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__11638_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__11743 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11744__i = 0, G__11744__a = new Array(arguments.length -  3);
while (G__11744__i < G__11744__a.length) {G__11744__a[G__11744__i] = arguments[G__11744__i + 3]; ++G__11744__i;}
  args = new cljs.core.IndexedSeq(G__11744__a,0);
} 
return G__11743__delegate.call(this,x,y,z,args);};
G__11743.cljs$lang$maxFixedArity = 3;
G__11743.cljs$lang$applyTo = (function (arglist__11745){
var x = cljs.core.first(arglist__11745);
arglist__11745 = cljs.core.next(arglist__11745);
var y = cljs.core.first(arglist__11745);
arglist__11745 = cljs.core.next(arglist__11745);
var z = cljs.core.first(arglist__11745);
var args = cljs.core.rest(arglist__11745);
return G__11743__delegate(x,y,z,args);
});
G__11743.cljs$core$IFn$_invoke$arity$variadic = G__11743__delegate;
return G__11743;
})()
;
G__11742 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11742__0.call(this);
case 1:
return G__11742__1.call(this,x);
case 2:
return G__11742__2.call(this,x,y);
case 3:
return G__11742__3.call(this,x,y,z);
default:
var G__11746 = null;
if (arguments.length > 3) {
var G__11747__i = 0, G__11747__a = new Array(arguments.length -  3);
while (G__11747__i < G__11747__a.length) {G__11747__a[G__11747__i] = arguments[G__11747__i + 3]; ++G__11747__i;}
G__11746 = new cljs.core.IndexedSeq(G__11747__a,0);
}
return G__11742__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11746);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11742.cljs$lang$maxFixedArity = 3;
G__11742.cljs$lang$applyTo = G__11742__4.cljs$lang$applyTo;
G__11742.cljs$core$IFn$_invoke$arity$0 = G__11742__0;
G__11742.cljs$core$IFn$_invoke$arity$1 = G__11742__1;
G__11742.cljs$core$IFn$_invoke$arity$2 = G__11742__2;
G__11742.cljs$core$IFn$_invoke$arity$3 = G__11742__3;
G__11742.cljs$core$IFn$_invoke$arity$variadic = G__11742__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11742;
})()
;})(fs__$1))
};
var G__11741 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__11748__i = 0, G__11748__a = new Array(arguments.length -  3);
while (G__11748__i < G__11748__a.length) {G__11748__a[G__11748__i] = arguments[G__11748__i + 3]; ++G__11748__i;}
  fs = new cljs.core.IndexedSeq(G__11748__a,0);
} 
return G__11741__delegate.call(this,f,g,h,fs);};
G__11741.cljs$lang$maxFixedArity = 3;
G__11741.cljs$lang$applyTo = (function (arglist__11749){
var f = cljs.core.first(arglist__11749);
arglist__11749 = cljs.core.next(arglist__11749);
var g = cljs.core.first(arglist__11749);
arglist__11749 = cljs.core.next(arglist__11749);
var h = cljs.core.first(arglist__11749);
var fs = cljs.core.rest(arglist__11749);
return G__11741__delegate(f,g,h,fs);
});
G__11741.cljs$core$IFn$_invoke$arity$variadic = G__11741__delegate;
return G__11741;
})()
;
cljs$core$juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return cljs$core$juxt__1.call(this,f);
case 2:
return cljs$core$juxt__2.call(this,f,g);
case 3:
return cljs$core$juxt__3.call(this,f,g,h);
default:
var G__11750 = null;
if (arguments.length > 3) {
var G__11751__i = 0, G__11751__a = new Array(arguments.length -  3);
while (G__11751__i < G__11751__a.length) {G__11751__a[G__11751__i] = arguments[G__11751__i + 3]; ++G__11751__i;}
G__11750 = new cljs.core.IndexedSeq(G__11751__a,0);
}
return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__11750);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$juxt.cljs$lang$maxFixedArity = 3;
cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var cljs$core$dorun = null;
var cljs$core$dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__11752 = cljs.core.next(coll);
coll = G__11752;
continue;
} else {
return null;
}
break;
}
});
var cljs$core$dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__11753 = (n - (1));
var G__11754 = cljs.core.next(coll);
n = G__11753;
coll = G__11754;
continue;
} else {
return null;
}
break;
}
});
cljs$core$dorun = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$dorun__1.call(this,n);
case 2:
return cljs$core$dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
return cljs$core$dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var cljs$core$doall = null;
var cljs$core$doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var cljs$core$doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
cljs$core$doall = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$doall__1.call(this,n);
case 2:
return cljs$core$doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
return cljs$core$doall;
})()
;
/**
 * Returns true if x is a JavaScript RegExp instance.
 */
cljs.core.regexp_QMARK_ = (function cljs$core$regexp_QMARK_(x){
return (x instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function cljs$core$re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function cljs$core$re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function cljs$core$re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?cljs$core$re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function cljs$core$re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__11758 = cljs.core.re_find(/^\(\?([idmsux]*)\)/,s);
var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11758,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11758,(1),null);
var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,cljs.core.count(prefix));
return (new RegExp(pattern,(function (){var or__3935__auto__ = flags;
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return "";
}
})()));
}
});
cljs.core.pr_sequential_writer = (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_11766 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$print_DASH_length.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3935__auto__ = cljs.core.constant$keyword$more_DASH_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__11767_11773 = cljs.core.first(coll);
var G__11768_11774 = writer;
var G__11769_11775 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11767_11773,G__11768_11774,G__11769_11775) : print_one.call(null,G__11767_11773,G__11768_11774,G__11769_11775));
} else {
}

var coll_11776__$1 = cljs.core.next(coll);
var n_11777 = (cljs.core.constant$keyword$print_DASH_length.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_11776__$1) && (((n_11777 == null)) || (!((n_11777 === (0)))))){
cljs.core._write(writer,sep);

var G__11770_11778 = cljs.core.first(coll_11776__$1);
var G__11771_11779 = writer;
var G__11772_11780 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11770_11778,G__11771_11779,G__11772_11780) : print_one.call(null,G__11770_11778,G__11771_11779,G__11772_11780));

var G__11781 = cljs.core.next(coll_11776__$1);
var G__11782 = (n_11777 - (1));
coll_11776__$1 = G__11781;
n_11777 = G__11782;
continue;
} else {
if((cljs.core.seq(coll_11776__$1)) && ((n_11777 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3935__auto__ = cljs.core.constant$keyword$more_DASH_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11766;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var cljs$core$write_all__delegate = function (writer,ss){
var seq__11787 = cljs.core.seq(ss);
var chunk__11788 = null;
var count__11789 = (0);
var i__11790 = (0);
while(true){
if((i__11790 < count__11789)){
var s = chunk__11788.cljs$core$IIndexed$_nth$arity$2(null,i__11790);
cljs.core._write(writer,s);

var G__11791 = seq__11787;
var G__11792 = chunk__11788;
var G__11793 = count__11789;
var G__11794 = (i__11790 + (1));
seq__11787 = G__11791;
chunk__11788 = G__11792;
count__11789 = G__11793;
i__11790 = G__11794;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11787);
if(temp__4126__auto__){
var seq__11787__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11787__$1)){
var c__4304__auto__ = cljs.core.chunk_first(seq__11787__$1);
var G__11795 = cljs.core.chunk_rest(seq__11787__$1);
var G__11796 = c__4304__auto__;
var G__11797 = cljs.core.count(c__4304__auto__);
var G__11798 = (0);
seq__11787 = G__11795;
chunk__11788 = G__11796;
count__11789 = G__11797;
i__11790 = G__11798;
continue;
} else {
var s = cljs.core.first(seq__11787__$1);
cljs.core._write(writer,s);

var G__11799 = cljs.core.next(seq__11787__$1);
var G__11800 = null;
var G__11801 = (0);
var G__11802 = (0);
seq__11787 = G__11799;
chunk__11788 = G__11800;
count__11789 = G__11801;
i__11790 = G__11802;
continue;
}
} else {
return null;
}
}
break;
}
};
var cljs$core$write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__11803__i = 0, G__11803__a = new Array(arguments.length -  1);
while (G__11803__i < G__11803__a.length) {G__11803__a[G__11803__i] = arguments[G__11803__i + 1]; ++G__11803__i;}
  ss = new cljs.core.IndexedSeq(G__11803__a,0);
} 
return cljs$core$write_all__delegate.call(this,writer,ss);};
cljs$core$write_all.cljs$lang$maxFixedArity = 1;
cljs$core$write_all.cljs$lang$applyTo = (function (arglist__11804){
var writer = cljs.core.first(arglist__11804);
var ss = cljs.core.rest(arglist__11804);
return cljs$core$write_all__delegate(writer,ss);
});
cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
return cljs$core$write_all;
})()
;
cljs.core.string_print = (function cljs$core$string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function cljs$core$flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj11806 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj11806;
})();
cljs.core.quote_string = (function cljs$core$quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__11809 = "[\\\\\"\b\f\n\r\t]";
var G__11810 = "g";
return RegExp(G__11809,G__11810);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function cljs$core$pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3927__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$meta);
if(cljs.core.truth_(and__3927__auto__)){
var and__3927__auto____$1 = (function (){var G__11824 = obj;
if(G__11824){
var bit__4229__auto__ = (G__11824.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4229__auto__) || (G__11824.cljs$core$IMeta$)){
return true;
} else {
if((!G__11824.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11824);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11824);
}
})();
if(and__3927__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3927__auto____$1;
}
} else {
return and__3927__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__11825_11835 = cljs.core.meta(obj);
var G__11826_11836 = writer;
var G__11827_11837 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__11825_11835,G__11826_11836,G__11827_11837) : cljs.core.pr_writer.call(null,G__11825_11835,G__11826_11836,G__11827_11837));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__11828 = obj;
if(G__11828){
var bit__4226__auto__ = (G__11828.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4226__auto__) || (G__11828.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__11829 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__11830 = cljs.core.pr_writer;
var G__11831 = writer;
var G__11832 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__11829,G__11830,G__11831,G__11832) : cljs.core.print_map.call(null,G__11829,G__11830,G__11831,G__11832));
} else {
if(cljs.core.array_QMARK_(obj)){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__11833 = obj;
return goog.isString(G__11833);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$readably.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__11838 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__11838;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__11834 = obj;
if(G__11834){
var bit__4229__auto__ = (G__11834.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4229__auto__) || (G__11834.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__11834.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__11834);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__11834);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function cljs$core$pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$alt_DASH_impl.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__11842 = obj;
var G__11843 = writer;
var G__11844 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$fallback_DASH_impl,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__11842,G__11843,G__11844) : alt_impl.call(null,G__11842,G__11843,G__11844));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function cljs$core$pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__11849 = cljs.core.seq(cljs.core.next(objs));
var chunk__11850 = null;
var count__11851 = (0);
var i__11852 = (0);
while(true){
if((i__11852 < count__11851)){
var obj = chunk__11850.cljs$core$IIndexed$_nth$arity$2(null,i__11852);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11853 = seq__11849;
var G__11854 = chunk__11850;
var G__11855 = count__11851;
var G__11856 = (i__11852 + (1));
seq__11849 = G__11853;
chunk__11850 = G__11854;
count__11851 = G__11855;
i__11852 = G__11856;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11849);
if(temp__4126__auto__){
var seq__11849__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11849__$1)){
var c__4304__auto__ = cljs.core.chunk_first(seq__11849__$1);
var G__11857 = cljs.core.chunk_rest(seq__11849__$1);
var G__11858 = c__4304__auto__;
var G__11859 = cljs.core.count(c__4304__auto__);
var G__11860 = (0);
seq__11849 = G__11857;
chunk__11850 = G__11858;
count__11851 = G__11859;
i__11852 = G__11860;
continue;
} else {
var obj = cljs.core.first(seq__11849__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11861 = cljs.core.next(seq__11849__$1);
var G__11862 = null;
var G__11863 = (0);
var G__11864 = (0);
seq__11849 = G__11861;
chunk__11850 = G__11862;
count__11851 = G__11863;
i__11852 = G__11864;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function cljs$core$pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function cljs$core$pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function cljs$core$prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function cljs$core$pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function cljs$core$newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$flush_DASH_on_DASH_newline))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var cljs$core$pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11865__i = 0, G__11865__a = new Array(arguments.length -  0);
while (G__11865__i < G__11865__a.length) {G__11865__a[G__11865__i] = arguments[G__11865__i + 0]; ++G__11865__i;}
  objs = new cljs.core.IndexedSeq(G__11865__a,0);
} 
return cljs$core$pr_str__delegate.call(this,objs);};
cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
cljs$core$pr_str.cljs$lang$applyTo = (function (arglist__11866){
var objs = cljs.core.seq(arglist__11866);
return cljs$core$pr_str__delegate(objs);
});
cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
return cljs$core$pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var cljs$core$prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11867__i = 0, G__11867__a = new Array(arguments.length -  0);
while (G__11867__i < G__11867__a.length) {G__11867__a[G__11867__i] = arguments[G__11867__i + 0]; ++G__11867__i;}
  objs = new cljs.core.IndexedSeq(G__11867__a,0);
} 
return cljs$core$prn_str__delegate.call(this,objs);};
cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
cljs$core$prn_str.cljs$lang$applyTo = (function (arglist__11868){
var objs = cljs.core.seq(arglist__11868);
return cljs$core$prn_str__delegate(objs);
});
cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
return cljs$core$prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var cljs$core$pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11869__i = 0, G__11869__a = new Array(arguments.length -  0);
while (G__11869__i < G__11869__a.length) {G__11869__a[G__11869__i] = arguments[G__11869__i + 0]; ++G__11869__i;}
  objs = new cljs.core.IndexedSeq(G__11869__a,0);
} 
return cljs$core$pr__delegate.call(this,objs);};
cljs$core$pr.cljs$lang$maxFixedArity = 0;
cljs$core$pr.cljs$lang$applyTo = (function (arglist__11870){
var objs = cljs.core.seq(arglist__11870);
return cljs$core$pr__delegate(objs);
});
cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
return cljs$core$pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs$core$cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));
};
var cljs$core$cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11871__i = 0, G__11871__a = new Array(arguments.length -  0);
while (G__11871__i < G__11871__a.length) {G__11871__a[G__11871__i] = arguments[G__11871__i + 0]; ++G__11871__i;}
  objs = new cljs.core.IndexedSeq(G__11871__a,0);
} 
return cljs$core$cljs_core_print__delegate.call(this,objs);};
cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs$core$cljs_core_print.cljs$lang$applyTo = (function (arglist__11872){
var objs = cljs.core.seq(arglist__11872);
return cljs$core$cljs_core_print__delegate(objs);
});
cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
return cljs$core$cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var cljs$core$print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));
};
var cljs$core$print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11873__i = 0, G__11873__a = new Array(arguments.length -  0);
while (G__11873__i < G__11873__a.length) {G__11873__a[G__11873__i] = arguments[G__11873__i + 0]; ++G__11873__i;}
  objs = new cljs.core.IndexedSeq(G__11873__a,0);
} 
return cljs$core$print_str__delegate.call(this,objs);};
cljs$core$print_str.cljs$lang$maxFixedArity = 0;
cljs$core$print_str.cljs$lang$applyTo = (function (arglist__11874){
var objs = cljs.core.seq(arglist__11874);
return cljs$core$print_str__delegate(objs);
});
cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
return cljs$core$print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var cljs$core$println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11875__i = 0, G__11875__a = new Array(arguments.length -  0);
while (G__11875__i < G__11875__a.length) {G__11875__a[G__11875__i] = arguments[G__11875__i + 0]; ++G__11875__i;}
  objs = new cljs.core.IndexedSeq(G__11875__a,0);
} 
return cljs$core$println__delegate.call(this,objs);};
cljs$core$println.cljs$lang$maxFixedArity = 0;
cljs$core$println.cljs$lang$applyTo = (function (arglist__11876){
var objs = cljs.core.seq(arglist__11876);
return cljs$core$println__delegate(objs);
});
cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
return cljs$core$println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var cljs$core$println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));
};
var cljs$core$println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11877__i = 0, G__11877__a = new Array(arguments.length -  0);
while (G__11877__i < G__11877__a.length) {G__11877__a[G__11877__i] = arguments[G__11877__i + 0]; ++G__11877__i;}
  objs = new cljs.core.IndexedSeq(G__11877__a,0);
} 
return cljs$core$println_str__delegate.call(this,objs);};
cljs$core$println_str.cljs$lang$maxFixedArity = 0;
cljs$core$println_str.cljs$lang$applyTo = (function (arglist__11878){
var objs = cljs.core.seq(arglist__11878);
return cljs$core$println_str__delegate(objs);
});
cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
return cljs$core$println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var cljs$core$prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11879__i = 0, G__11879__a = new Array(arguments.length -  0);
while (G__11879__i < G__11879__a.length) {G__11879__a[G__11879__i] = arguments[G__11879__i + 0]; ++G__11879__i;}
  objs = new cljs.core.IndexedSeq(G__11879__a,0);
} 
return cljs$core$prn__delegate.call(this,objs);};
cljs$core$prn.cljs$lang$maxFixedArity = 0;
cljs$core$prn.cljs$lang$applyTo = (function (arglist__11880){
var objs = cljs.core.seq(arglist__11880);
return cljs$core$prn__delegate(objs);
});
cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
return cljs$core$prn;
})()
;
cljs.core.print_map = (function cljs$core$print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__11887_11893 = cljs.core.key(e);
var G__11888_11894 = w;
var G__11889_11895 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11887_11893,G__11888_11894,G__11889_11895) : print_one.call(null,G__11887_11893,G__11888_11894,G__11889_11895));

cljs.core._write(w," ");

var G__11890 = cljs.core.val(e);
var G__11891 = w;
var G__11892 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11890,G__11891,G__11892) : print_one.call(null,G__11890,G__11891,G__11892));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var cljs$core$alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var cljs$core$alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__11896__i = 0, G__11896__a = new Array(arguments.length -  2);
while (G__11896__i < G__11896__a.length) {G__11896__a[G__11896__i] = arguments[G__11896__i + 2]; ++G__11896__i;}
  args = new cljs.core.IndexedSeq(G__11896__a,0);
} 
return cljs$core$alter_meta_BANG___delegate.call(this,iref,f,args);};
cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__11897){
var iref = cljs.core.first(arglist__11897);
arglist__11897 = cljs.core.next(arglist__11897);
var f = cljs.core.first(arglist__11897);
var args = cljs.core.rest(arglist__11897);
return cljs$core$alter_meta_BANG___delegate(iref,f,args);
});
cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
return cljs$core$alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function cljs$core$reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function cljs$core$add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function cljs$core$remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var cljs$core$gensym = null;
var cljs$core$gensym__0 = (function (){
return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var cljs$core$gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__11900 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11900) : cljs.core.atom.call(null,G__11900));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
cljs$core$gensym = function(prefix_string){
switch(arguments.length){
case 0:
return cljs$core$gensym__0.call(this);
case 1:
return cljs$core$gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
return cljs$core$gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function cljs$core$__GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function cljs$core$delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function cljs$core$force(x){
if(cljs.core.delay_QMARK_(x)){
var G__11902 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11902) : cljs.core.deref.call(null,G__11902));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function cljs$core$realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function cljs$core$preserving_reduced(rf){
return (function (p1__11903_SHARP_,p2__11904_SHARP_){
var ret = (function (){var G__11907 = p1__11903_SHARP_;
var G__11908 = p2__11904_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11907,G__11908) : rf.call(null,G__11907,G__11908));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cljs$core$cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__11911 = null;
var G__11911__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11911__1 = (function (result){
var G__11910 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11910) : rf.call(null,G__11910));
});
var G__11911__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__11911 = function(result,input){
switch(arguments.length){
case 0:
return G__11911__0.call(this);
case 1:
return G__11911__1.call(this,result);
case 2:
return G__11911__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11911.cljs$core$IFn$_invoke$arity$0 = G__11911__0;
G__11911.cljs$core$IFn$_invoke$arity$1 = G__11911__1;
G__11911.cljs$core$IFn$_invoke$arity$2 = G__11911__2;
return G__11911;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var cljs$core$dedupe = null;
var cljs$core$dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$cljs$core_SLASH_none);
return ((function (pa){
return (function() {
var G__11920 = null;
var G__11920__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11920__1 = (function (result){
var G__11916 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11916) : rf.call(null,G__11916));
});
var G__11920__2 = (function (result,input){
var prior = (function (){var G__11917 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11917) : cljs.core.deref.call(null,G__11917));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__11918 = result;
var G__11919 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11918,G__11919) : rf.call(null,G__11918,G__11919));
}
});
G__11920 = function(result,input){
switch(arguments.length){
case 0:
return G__11920__0.call(this);
case 1:
return G__11920__1.call(this,result);
case 2:
return G__11920__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11920.cljs$core$IFn$_invoke$arity$0 = G__11920__0;
G__11920.cljs$core$IFn$_invoke$arity$1 = G__11920__1;
G__11920.cljs$core$IFn$_invoke$arity$2 = G__11920__2;
return G__11920;
})()
;})(pa))
});
});
var cljs$core$dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
cljs$core$dedupe = function(coll){
switch(arguments.length){
case 0:
return cljs$core$dedupe__0.call(this);
case 1:
return cljs$core$dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
return cljs$core$dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var cljs$core$random_sample = null;
var cljs$core$random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var cljs$core$random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
cljs$core$random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return cljs$core$random_sample__1.call(this,prob);
case 2:
return cljs$core$random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
return cljs$core$random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function cljs$core$__GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4411__auto__ = this;
return cljs.core.es6_iterator(this__4411__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function cljs$core$eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function cljs$core$run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11922_SHARP_,p2__11921_SHARP_){
var G__11924 = p2__11921_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__11924) : proc.call(null,G__11924));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj11926 = {};
return obj11926;
})();

/**
 * Recursively transforms clj values to JavaScript
 */
cljs.core._clj__GT_js = (function cljs$core$_clj__GT_js(x){
if((function (){var and__3927__auto__ = x;
if(and__3927__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3927__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4199__auto__ = (((x == null))?null:x);
return (function (){var or__3935__auto__ = (cljs.core._clj__GT_js[(function (){var G__11930 = x__4199__auto__;
return goog.typeOf(G__11930);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

/**
 * Transforms map keys to valid JavaScript keys. Arbitrary keys are
 * encoded to their string representation via (pr-str x)
 */
cljs.core._key__GT_js = (function cljs$core$_key__GT_js(x){
if((function (){var and__3927__auto__ = x;
if(and__3927__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3927__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4199__auto__ = (((x == null))?null:x);
return (function (){var or__3935__auto__ = (cljs.core._key__GT_js[(function (){var G__11934 = x__4199__auto__;
return goog.typeOf(G__11934);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function cljs$core$key__GT_js(k){
if((function (){var G__11937 = k;
if(G__11937){
var bit__4229__auto__ = null;
if(cljs.core.truth_((function (){var or__3935__auto__ = bit__4229__auto__;
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return G__11937.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11937.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11937);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11937);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__11938 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__11938) : cljs.core.clj__GT_js.call(null,G__11938));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function cljs$core$clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__11954 = x;
if(G__11954){
var bit__4229__auto__ = null;
if(cljs.core.truth_((function (){var or__3935__auto__ = bit__4229__auto__;
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return G__11954.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11954.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11954);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11954);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj11956 = {};
return obj11956;
})();
var seq__11957_11967 = cljs.core.seq(x);
var chunk__11958_11968 = null;
var count__11959_11969 = (0);
var i__11960_11970 = (0);
while(true){
if((i__11960_11970 < count__11959_11969)){
var vec__11961_11971 = chunk__11958_11968.cljs$core$IIndexed$_nth$arity$2(null,i__11960_11970);
var k_11972 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11961_11971,(0),null);
var v_11973 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11961_11971,(1),null);
(m[cljs.core.key__GT_js(k_11972)] = cljs$core$clj__GT_js(v_11973));

var G__11974 = seq__11957_11967;
var G__11975 = chunk__11958_11968;
var G__11976 = count__11959_11969;
var G__11977 = (i__11960_11970 + (1));
seq__11957_11967 = G__11974;
chunk__11958_11968 = G__11975;
count__11959_11969 = G__11976;
i__11960_11970 = G__11977;
continue;
} else {
var temp__4126__auto___11978 = cljs.core.seq(seq__11957_11967);
if(temp__4126__auto___11978){
var seq__11957_11979__$1 = temp__4126__auto___11978;
if(cljs.core.chunked_seq_QMARK_(seq__11957_11979__$1)){
var c__4304__auto___11980 = cljs.core.chunk_first(seq__11957_11979__$1);
var G__11981 = cljs.core.chunk_rest(seq__11957_11979__$1);
var G__11982 = c__4304__auto___11980;
var G__11983 = cljs.core.count(c__4304__auto___11980);
var G__11984 = (0);
seq__11957_11967 = G__11981;
chunk__11958_11968 = G__11982;
count__11959_11969 = G__11983;
i__11960_11970 = G__11984;
continue;
} else {
var vec__11962_11985 = cljs.core.first(seq__11957_11979__$1);
var k_11986 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11962_11985,(0),null);
var v_11987 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11962_11985,(1),null);
(m[cljs.core.key__GT_js(k_11986)] = cljs$core$clj__GT_js(v_11987));

var G__11988 = cljs.core.next(seq__11957_11979__$1);
var G__11989 = null;
var G__11990 = (0);
var G__11991 = (0);
seq__11957_11967 = G__11988;
chunk__11958_11968 = G__11989;
count__11959_11969 = G__11990;
i__11960_11970 = G__11991;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__11963_11992 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js,x));
var chunk__11964_11993 = null;
var count__11965_11994 = (0);
var i__11966_11995 = (0);
while(true){
if((i__11966_11995 < count__11965_11994)){
var x_11996__$1 = chunk__11964_11993.cljs$core$IIndexed$_nth$arity$2(null,i__11966_11995);
arr.push(x_11996__$1);

var G__11997 = seq__11963_11992;
var G__11998 = chunk__11964_11993;
var G__11999 = count__11965_11994;
var G__12000 = (i__11966_11995 + (1));
seq__11963_11992 = G__11997;
chunk__11964_11993 = G__11998;
count__11965_11994 = G__11999;
i__11966_11995 = G__12000;
continue;
} else {
var temp__4126__auto___12001 = cljs.core.seq(seq__11963_11992);
if(temp__4126__auto___12001){
var seq__11963_12002__$1 = temp__4126__auto___12001;
if(cljs.core.chunked_seq_QMARK_(seq__11963_12002__$1)){
var c__4304__auto___12003 = cljs.core.chunk_first(seq__11963_12002__$1);
var G__12004 = cljs.core.chunk_rest(seq__11963_12002__$1);
var G__12005 = c__4304__auto___12003;
var G__12006 = cljs.core.count(c__4304__auto___12003);
var G__12007 = (0);
seq__11963_11992 = G__12004;
chunk__11964_11993 = G__12005;
count__11965_11994 = G__12006;
i__11966_11995 = G__12007;
continue;
} else {
var x_12008__$1 = cljs.core.first(seq__11963_12002__$1);
arr.push(x_12008__$1);

var G__12009 = cljs.core.next(seq__11963_12002__$1);
var G__12010 = null;
var G__12011 = (0);
var G__12012 = (0);
seq__11963_11992 = G__12009;
chunk__11964_11993 = G__12010;
count__11965_11994 = G__12011;
i__11966_11995 = G__12012;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj12014 = {};
return obj12014;
})();

/**
 * Transforms JavaScript values to Clojure
 */
cljs.core._js__GT_clj = (function cljs$core$_js__GT_clj(x,options){
if((function (){var and__3927__auto__ = x;
if(and__3927__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3927__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4199__auto__ = (((x == null))?null:x);
return (function (){var or__3935__auto__ = (cljs.core._js__GT_clj[(function (){var G__12018 = x__4199__auto__;
return goog.typeOf(G__12018);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var cljs$core$js__GT_clj = null;
var cljs$core$js__GT_clj__1 = (function (x){
return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$keywordize_DASH_keys,false], null)], 0));
});
var cljs$core$js__GT_clj__2 = (function() { 
var G__12075__delegate = function (x,opts){
var map__12048 = opts;
var map__12048__$1 = ((cljs.core.seq_QMARK_(map__12048))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12048):map__12048);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12048__$1,cljs.core.constant$keyword$keywordize_DASH_keys);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__12048,map__12048__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn(x__$1){
if((function (){var G__12064 = x__$1;
if(G__12064){
var bit__4229__auto__ = null;
if(cljs.core.truth_((function (){var or__3935__auto__ = bit__4229__auto__;
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return G__12064.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__12064.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__12064);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__12064);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.array_QMARK_(x__$1)){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4277__auto__ = ((function (map__12048,map__12048__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn_$_iter__12065(s__12066){
return (new cljs.core.LazySeq(null,((function (map__12048,map__12048__$1,keywordize_keys,keyfn){
return (function (){
var s__12066__$1 = s__12066;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__12066__$1);
if(temp__4126__auto__){
var s__12066__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__12066__$2)){
var c__4275__auto__ = cljs.core.chunk_first(s__12066__$2);
var size__4276__auto__ = cljs.core.count(c__4275__auto__);
var b__12068 = cljs.core.chunk_buffer(size__4276__auto__);
if((function (){var i__12067 = (0);
while(true){
if((i__12067 < size__4276__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4275__auto__,i__12067);
cljs.core.chunk_append(b__12068,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__12073 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12073) : keyfn.call(null,G__12073));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null));

var G__12076 = (i__12067 + (1));
i__12067 = G__12076;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__12068),cljs$core$js__GT_clj_$_thisfn_$_iter__12065(cljs.core.chunk_rest(s__12066__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__12068),null);
}
} else {
var k = cljs.core.first(s__12066__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__12074 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12074) : keyfn.call(null,G__12074));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null),cljs$core$js__GT_clj_$_thisfn_$_iter__12065(cljs.core.rest(s__12066__$2)));
}
} else {
return null;
}
break;
}
});})(map__12048,map__12048__$1,keywordize_keys,keyfn))
,null,null));
});})(map__12048,map__12048__$1,keywordize_keys,keyfn))
;
return iter__4277__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__12048,map__12048__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__12075 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__12077__i = 0, G__12077__a = new Array(arguments.length -  1);
while (G__12077__i < G__12077__a.length) {G__12077__a[G__12077__i] = arguments[G__12077__i + 1]; ++G__12077__i;}
  opts = new cljs.core.IndexedSeq(G__12077__a,0);
} 
return G__12075__delegate.call(this,x,opts);};
G__12075.cljs$lang$maxFixedArity = 1;
G__12075.cljs$lang$applyTo = (function (arglist__12078){
var x = cljs.core.first(arglist__12078);
var opts = cljs.core.rest(arglist__12078);
return G__12075__delegate(x,opts);
});
G__12075.cljs$core$IFn$_invoke$arity$variadic = G__12075__delegate;
return G__12075;
})()
;
cljs$core$js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return cljs$core$js__GT_clj__1.call(this,x);
default:
var G__12079 = null;
if (arguments.length > 1) {
var G__12080__i = 0, G__12080__a = new Array(arguments.length -  1);
while (G__12080__i < G__12080__a.length) {G__12080__a[G__12080__i] = arguments[G__12080__i + 1]; ++G__12080__i;}
G__12079 = new cljs.core.IndexedSeq(G__12080__a,0);
}
return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12079);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function cljs$core$memoize(f){
var mem = (function (){var G__12083 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12083) : cljs.core.atom.call(null,G__12083));
})();
return ((function (mem){
return (function() { 
var G__12085__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__12084 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12084) : cljs.core.deref.call(null,G__12084));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__12085 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12086__i = 0, G__12086__a = new Array(arguments.length -  0);
while (G__12086__i < G__12086__a.length) {G__12086__a[G__12086__i] = arguments[G__12086__i + 0]; ++G__12086__i;}
  args = new cljs.core.IndexedSeq(G__12086__a,0);
} 
return G__12085__delegate.call(this,args);};
G__12085.cljs$lang$maxFixedArity = 0;
G__12085.cljs$lang$applyTo = (function (arglist__12087){
var args = cljs.core.seq(arglist__12087);
return G__12085__delegate(args);
});
G__12085.cljs$core$IFn$_invoke$arity$variadic = G__12085__delegate;
return G__12085;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var cljs$core$trampoline = null;
var cljs$core$trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__12089 = ret;
f = G__12089;
continue;
} else {
return ret;
}
break;
}
});
var cljs$core$trampoline__2 = (function() { 
var G__12090__delegate = function (f,args){
return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__12090 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__12091__i = 0, G__12091__a = new Array(arguments.length -  1);
while (G__12091__i < G__12091__a.length) {G__12091__a[G__12091__i] = arguments[G__12091__i + 1]; ++G__12091__i;}
  args = new cljs.core.IndexedSeq(G__12091__a,0);
} 
return G__12090__delegate.call(this,f,args);};
G__12090.cljs$lang$maxFixedArity = 1;
G__12090.cljs$lang$applyTo = (function (arglist__12092){
var f = cljs.core.first(arglist__12092);
var args = cljs.core.rest(arglist__12092);
return G__12090__delegate(f,args);
});
G__12090.cljs$core$IFn$_invoke$arity$variadic = G__12090__delegate;
return G__12090;
})()
;
cljs$core$trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return cljs$core$trampoline__1.call(this,f);
default:
var G__12093 = null;
if (arguments.length > 1) {
var G__12094__i = 0, G__12094__a = new Array(arguments.length -  1);
while (G__12094__i < G__12094__a.length) {G__12094__a[G__12094__i] = arguments[G__12094__i + 1]; ++G__12094__i;}
G__12093 = new cljs.core.IndexedSeq(G__12094__a,0);
}
return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__12093);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var cljs$core$rand = null;
var cljs$core$rand__0 = (function (){
return cljs$core$rand.cljs$core$IFn$_invoke$arity$1((1));
});
var cljs$core$rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
cljs$core$rand = function(n){
switch(arguments.length){
case 0:
return cljs$core$rand__0.call(this);
case 1:
return cljs$core$rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
return cljs$core$rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function cljs$core$rand_int(n){
var G__12097 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12097) : Math.floor.call(null,G__12097));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function cljs$core$rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function cljs$core$group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__12099 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12099) : f.call(null,G__12099));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function cljs$core$make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$parents,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$descendants,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$ancestors,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function cljs$core$get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__12101 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12101) : cljs.core.atom.call(null,G__12101));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var cljs$core$swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var cljs$core$swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__12102__i = 0, G__12102__a = new Array(arguments.length -  1);
while (G__12102__i < G__12102__a.length) {G__12102__a[G__12102__i] = arguments[G__12102__i + 1]; ++G__12102__i;}
  args = new cljs.core.IndexedSeq(G__12102__a,0);
} 
return cljs$core$swap_global_hierarchy_BANG___delegate.call(this,f,args);};
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__12103){
var f = cljs.core.first(arglist__12103);
var args = cljs.core.rest(arglist__12103);
return cljs$core$swap_global_hierarchy_BANG___delegate(f,args);
});
cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
return cljs$core$swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var cljs$core$isa_QMARK_ = null;
var cljs$core$isa_QMARK___2 = (function (child,parent){
return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12168 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12168) : cljs.core.deref.call(null,G__12168));
})(),child,parent);
});
var cljs$core$isa_QMARK___3 = (function (h,child,parent){
var or__3935__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
var and__3927__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3927__auto__){
var and__3927__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3927__auto____$1){
var and__3927__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3927__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__12193 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__12191 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__12191) : child.call(null,G__12191));
})(),(function (){var G__12192 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__12192) : parent.call(null,G__12192));
})());
var G__12194 = (i + (1));
ret = G__12193;
i = G__12194;
continue;
}
break;
}
} else {
return and__3927__auto____$2;
}
} else {
return and__3927__auto____$1;
}
} else {
return and__3927__auto__;
}
}
}
});
cljs$core$isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return cljs$core$isa_QMARK___2.call(this,h,child);
case 3:
return cljs$core$isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
return cljs$core$isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var cljs$core$parents = null;
var cljs$core$parents__1 = (function (tag){
return cljs$core$parents.cljs$core$IFn$_invoke$arity$2((function (){var G__12198 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12198) : cljs.core.deref.call(null,G__12198));
})(),tag);
});
var cljs$core$parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$parents = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$parents__1.call(this,h);
case 2:
return cljs$core$parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
return cljs$core$parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var cljs$core$ancestors = null;
var cljs$core$ancestors__1 = (function (tag){
return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__12202 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12202) : cljs.core.deref.call(null,G__12202));
})(),tag);
});
var cljs$core$ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$ancestors = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$ancestors__1.call(this,h);
case 2:
return cljs$core$ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
return cljs$core$ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var cljs$core$descendants = null;
var cljs$core$descendants__1 = (function (tag){
return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__12206 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12206) : cljs.core.deref.call(null,G__12206));
})(),tag);
});
var cljs$core$descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$descendants = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$descendants__1.call(this,h);
case 2:
return cljs$core$descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
return cljs$core$descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var cljs$core$derive = null;
var cljs$core$derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__12215 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__12215) : targets.call(null,G__12215));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__12216 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__12216) : sources.call(null,G__12216));
})()));
});})(tp,td,ta))
;
var or__3935__auto__ = ((cljs.core.contains_QMARK_((function (){var G__12220 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__12220) : tp.call(null,G__12220));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__12221 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12221) : ta.call(null,G__12221));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__12222 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__12222) : ta.call(null,G__12222));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$parents,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$ancestors,tf(cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$descendants,tf(cljs.core.constant$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return h;
}
});
cljs$core$derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$derive__2.call(this,h,tag);
case 3:
return cljs$core$derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
return cljs$core$derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var cljs$core$underive = null;
var cljs$core$underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__12229 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12229) : parentMap.call(null,G__12229));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__12230 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12230) : parentMap.call(null,G__12230));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__12223_SHARP_){
return cljs.core.cons(cljs.core.first(p1__12223_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__12223_SHARP_),cljs.core.second(p1__12223_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__12231 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__12231) : parentMap.call(null,G__12231));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__12224_SHARP_,p2__12225_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__12224_SHARP_,p2__12225_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
cljs$core$underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$underive__2.call(this,h,tag);
case 3:
return cljs$core$underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
return cljs$core$underive;
})()
;
cljs.core.reset_cache = (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__12234 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12234) : cljs.core.deref.call(null,G__12234));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__12235 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12235) : cljs.core.deref.call(null,G__12235));
}));
});
cljs.core.prefers_STAR_ = (function cljs$core$prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__12251 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12251) : cljs.core.deref.call(null,G__12251));
})().call(null,x);
var or__3935__auto__ = (cljs.core.truth_((function (){var and__3927__auto__ = xprefs;
if(cljs.core.truth_(and__3927__auto__)){
var G__12253 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__12253) : xprefs.call(null,G__12253));
} else {
return and__3927__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__12254 = cljs.core.rest(ps);
ps = G__12254;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3935__auto____$1)){
return or__3935__auto____$1;
} else {
var or__3935__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__12255 = cljs.core.rest(ps);
ps = G__12255;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3935__auto____$2)){
return or__3935__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function cljs$core$dominates(x,y,prefer_table){
var or__3935__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3935__auto__)){
return or__3935__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__12269){
var vec__12270 = p__12269;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12270,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12270,(1),null);
var e = vec__12270;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__12271 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12271) : cljs.core.deref.call(null,G__12271));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3935__auto__ = (be == null);
if(or__3935__auto__){
return or__3935__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__12272 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12272) : cljs.core.deref.call(null,G__12272));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__12273 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12273) : cljs.core.deref.call(null,G__12273));
})(),(function (){var G__12274 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12274) : cljs.core.deref.call(null,G__12274));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj12276 = {};
return obj12276;
})();

cljs.core._reset = (function cljs$core$_reset(mf){
if((function (){var and__3927__auto__ = mf;
if(and__3927__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3927__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4199__auto__ = (((mf == null))?null:mf);
return (function (){var or__3935__auto__ = (cljs.core._reset[(function (){var G__12280 = x__4199__auto__;
return goog.typeOf(G__12280);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._reset["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function cljs$core$_add_method(mf,dispatch_val,method){
if((function (){var and__3927__auto__ = mf;
if(and__3927__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3927__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4199__auto__ = (((mf == null))?null:mf);
return (function (){var or__3935__auto__ = (cljs.core._add_method[(function (){var G__12284 = x__4199__auto__;
return goog.typeOf(G__12284);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._add_method["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function cljs$core$_remove_method(mf,dispatch_val){
if((function (){var and__3927__auto__ = mf;
if(and__3927__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3927__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4199__auto__ = (((mf == null))?null:mf);
return (function (){var or__3935__auto__ = (cljs.core._remove_method[(function (){var G__12288 = x__4199__auto__;
return goog.typeOf(G__12288);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3927__auto__ = mf;
if(and__3927__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3927__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4199__auto__ = (((mf == null))?null:mf);
return (function (){var or__3935__auto__ = (cljs.core._prefer_method[(function (){var G__12292 = x__4199__auto__;
return goog.typeOf(G__12292);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function cljs$core$_get_method(mf,dispatch_val){
if((function (){var and__3927__auto__ = mf;
if(and__3927__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3927__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4199__auto__ = (((mf == null))?null:mf);
return (function (){var or__3935__auto__ = (cljs.core._get_method[(function (){var G__12296 = x__4199__auto__;
return goog.typeOf(G__12296);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._get_method["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function cljs$core$_methods(mf){
if((function (){var and__3927__auto__ = mf;
if(and__3927__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3927__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4199__auto__ = (((mf == null))?null:mf);
return (function (){var or__3935__auto__ = (cljs.core._methods[(function (){var G__12300 = x__4199__auto__;
return goog.typeOf(G__12300);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._methods["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function cljs$core$_prefers(mf){
if((function (){var and__3927__auto__ = mf;
if(and__3927__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3927__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4199__auto__ = (((mf == null))?null:mf);
return (function (){var or__3935__auto__ = (cljs.core._prefers[(function (){var G__12304 = x__4199__auto__;
return goog.typeOf(G__12304);
})()]);
if(or__3935__auto__){
return or__3935__auto__;
} else {
var or__3935__auto____$1 = (cljs.core._prefers["_"]);
if(or__3935__auto____$1){
return or__3935__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function cljs$core$throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12306 = this$__$1;
return goog.getUid(G__12306);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__12307 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12307) : cljs.core.deref.call(null,G__12307));
})(),(function (){var G__12308 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12308) : cljs.core.deref.call(null,G__12308));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__12309 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12309) : cljs.core.deref.call(null,G__12309));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__12310 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12310) : cljs.core.deref.call(null,G__12310));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__12311 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12311) : cljs.core.deref.call(null,G__12311));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__12312 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12312) : cljs.core.deref.call(null,G__12312));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__13153 = null;
var G__13153__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__13153__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12313 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12313) : self__.dispatch_fn.call(null,G__12313));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12314 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12314) : target_fn.call(null,G__12314));
});
var G__13153__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12315 = a;
var G__12316 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12315,G__12316) : self__.dispatch_fn.call(null,G__12315,G__12316));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12317 = a;
var G__12318 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12317,G__12318) : target_fn.call(null,G__12317,G__12318));
});
var G__13153__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12319 = a;
var G__12320 = b;
var G__12321 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12319,G__12320,G__12321) : self__.dispatch_fn.call(null,G__12319,G__12320,G__12321));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12322 = a;
var G__12323 = b;
var G__12324 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12322,G__12323,G__12324) : target_fn.call(null,G__12322,G__12323,G__12324));
});
var G__13153__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12325 = a;
var G__12326 = b;
var G__12327 = c;
var G__12328 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12325,G__12326,G__12327,G__12328) : self__.dispatch_fn.call(null,G__12325,G__12326,G__12327,G__12328));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12329 = a;
var G__12330 = b;
var G__12331 = c;
var G__12332 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12329,G__12330,G__12331,G__12332) : target_fn.call(null,G__12329,G__12330,G__12331,G__12332));
});
var G__13153__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12333 = a;
var G__12334 = b;
var G__12335 = c;
var G__12336 = d;
var G__12337 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12333,G__12334,G__12335,G__12336,G__12337) : self__.dispatch_fn.call(null,G__12333,G__12334,G__12335,G__12336,G__12337));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12338 = a;
var G__12339 = b;
var G__12340 = c;
var G__12341 = d;
var G__12342 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12338,G__12339,G__12340,G__12341,G__12342) : target_fn.call(null,G__12338,G__12339,G__12340,G__12341,G__12342));
});
var G__13153__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12343 = a;
var G__12344 = b;
var G__12345 = c;
var G__12346 = d;
var G__12347 = e;
var G__12348 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12343,G__12344,G__12345,G__12346,G__12347,G__12348) : self__.dispatch_fn.call(null,G__12343,G__12344,G__12345,G__12346,G__12347,G__12348));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12349 = a;
var G__12350 = b;
var G__12351 = c;
var G__12352 = d;
var G__12353 = e;
var G__12354 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12349,G__12350,G__12351,G__12352,G__12353,G__12354) : target_fn.call(null,G__12349,G__12350,G__12351,G__12352,G__12353,G__12354));
});
var G__13153__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12355 = a;
var G__12356 = b;
var G__12357 = c;
var G__12358 = d;
var G__12359 = e;
var G__12360 = f;
var G__12361 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12355,G__12356,G__12357,G__12358,G__12359,G__12360,G__12361) : self__.dispatch_fn.call(null,G__12355,G__12356,G__12357,G__12358,G__12359,G__12360,G__12361));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12362 = a;
var G__12363 = b;
var G__12364 = c;
var G__12365 = d;
var G__12366 = e;
var G__12367 = f;
var G__12368 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12362,G__12363,G__12364,G__12365,G__12366,G__12367,G__12368) : target_fn.call(null,G__12362,G__12363,G__12364,G__12365,G__12366,G__12367,G__12368));
});
var G__13153__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12369 = a;
var G__12370 = b;
var G__12371 = c;
var G__12372 = d;
var G__12373 = e;
var G__12374 = f;
var G__12375 = g;
var G__12376 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12369,G__12370,G__12371,G__12372,G__12373,G__12374,G__12375,G__12376) : self__.dispatch_fn.call(null,G__12369,G__12370,G__12371,G__12372,G__12373,G__12374,G__12375,G__12376));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12377 = a;
var G__12378 = b;
var G__12379 = c;
var G__12380 = d;
var G__12381 = e;
var G__12382 = f;
var G__12383 = g;
var G__12384 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12377,G__12378,G__12379,G__12380,G__12381,G__12382,G__12383,G__12384) : target_fn.call(null,G__12377,G__12378,G__12379,G__12380,G__12381,G__12382,G__12383,G__12384));
});
var G__13153__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12385 = a;
var G__12386 = b;
var G__12387 = c;
var G__12388 = d;
var G__12389 = e;
var G__12390 = f;
var G__12391 = g;
var G__12392 = h;
var G__12393 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12385,G__12386,G__12387,G__12388,G__12389,G__12390,G__12391,G__12392,G__12393) : self__.dispatch_fn.call(null,G__12385,G__12386,G__12387,G__12388,G__12389,G__12390,G__12391,G__12392,G__12393));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12394 = a;
var G__12395 = b;
var G__12396 = c;
var G__12397 = d;
var G__12398 = e;
var G__12399 = f;
var G__12400 = g;
var G__12401 = h;
var G__12402 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12394,G__12395,G__12396,G__12397,G__12398,G__12399,G__12400,G__12401,G__12402) : target_fn.call(null,G__12394,G__12395,G__12396,G__12397,G__12398,G__12399,G__12400,G__12401,G__12402));
});
var G__13153__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12403 = a;
var G__12404 = b;
var G__12405 = c;
var G__12406 = d;
var G__12407 = e;
var G__12408 = f;
var G__12409 = g;
var G__12410 = h;
var G__12411 = i;
var G__12412 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12403,G__12404,G__12405,G__12406,G__12407,G__12408,G__12409,G__12410,G__12411,G__12412) : self__.dispatch_fn.call(null,G__12403,G__12404,G__12405,G__12406,G__12407,G__12408,G__12409,G__12410,G__12411,G__12412));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12413 = a;
var G__12414 = b;
var G__12415 = c;
var G__12416 = d;
var G__12417 = e;
var G__12418 = f;
var G__12419 = g;
var G__12420 = h;
var G__12421 = i;
var G__12422 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12413,G__12414,G__12415,G__12416,G__12417,G__12418,G__12419,G__12420,G__12421,G__12422) : target_fn.call(null,G__12413,G__12414,G__12415,G__12416,G__12417,G__12418,G__12419,G__12420,G__12421,G__12422));
});
var G__13153__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12423 = a;
var G__12424 = b;
var G__12425 = c;
var G__12426 = d;
var G__12427 = e;
var G__12428 = f;
var G__12429 = g;
var G__12430 = h;
var G__12431 = i;
var G__12432 = j;
var G__12433 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12423,G__12424,G__12425,G__12426,G__12427,G__12428,G__12429,G__12430,G__12431,G__12432,G__12433) : self__.dispatch_fn.call(null,G__12423,G__12424,G__12425,G__12426,G__12427,G__12428,G__12429,G__12430,G__12431,G__12432,G__12433));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12434 = a;
var G__12435 = b;
var G__12436 = c;
var G__12437 = d;
var G__12438 = e;
var G__12439 = f;
var G__12440 = g;
var G__12441 = h;
var G__12442 = i;
var G__12443 = j;
var G__12444 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12434,G__12435,G__12436,G__12437,G__12438,G__12439,G__12440,G__12441,G__12442,G__12443,G__12444) : target_fn.call(null,G__12434,G__12435,G__12436,G__12437,G__12438,G__12439,G__12440,G__12441,G__12442,G__12443,G__12444));
});
var G__13153__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12445 = a;
var G__12446 = b;
var G__12447 = c;
var G__12448 = d;
var G__12449 = e;
var G__12450 = f;
var G__12451 = g;
var G__12452 = h;
var G__12453 = i;
var G__12454 = j;
var G__12455 = k;
var G__12456 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12445,G__12446,G__12447,G__12448,G__12449,G__12450,G__12451,G__12452,G__12453,G__12454,G__12455,G__12456) : self__.dispatch_fn.call(null,G__12445,G__12446,G__12447,G__12448,G__12449,G__12450,G__12451,G__12452,G__12453,G__12454,G__12455,G__12456));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12457 = a;
var G__12458 = b;
var G__12459 = c;
var G__12460 = d;
var G__12461 = e;
var G__12462 = f;
var G__12463 = g;
var G__12464 = h;
var G__12465 = i;
var G__12466 = j;
var G__12467 = k;
var G__12468 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12457,G__12458,G__12459,G__12460,G__12461,G__12462,G__12463,G__12464,G__12465,G__12466,G__12467,G__12468) : target_fn.call(null,G__12457,G__12458,G__12459,G__12460,G__12461,G__12462,G__12463,G__12464,G__12465,G__12466,G__12467,G__12468));
});
var G__13153__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12469 = a;
var G__12470 = b;
var G__12471 = c;
var G__12472 = d;
var G__12473 = e;
var G__12474 = f;
var G__12475 = g;
var G__12476 = h;
var G__12477 = i;
var G__12478 = j;
var G__12479 = k;
var G__12480 = l;
var G__12481 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12469,G__12470,G__12471,G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479,G__12480,G__12481) : self__.dispatch_fn.call(null,G__12469,G__12470,G__12471,G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479,G__12480,G__12481));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12482 = a;
var G__12483 = b;
var G__12484 = c;
var G__12485 = d;
var G__12486 = e;
var G__12487 = f;
var G__12488 = g;
var G__12489 = h;
var G__12490 = i;
var G__12491 = j;
var G__12492 = k;
var G__12493 = l;
var G__12494 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12482,G__12483,G__12484,G__12485,G__12486,G__12487,G__12488,G__12489,G__12490,G__12491,G__12492,G__12493,G__12494) : target_fn.call(null,G__12482,G__12483,G__12484,G__12485,G__12486,G__12487,G__12488,G__12489,G__12490,G__12491,G__12492,G__12493,G__12494));
});
var G__13153__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12495 = a;
var G__12496 = b;
var G__12497 = c;
var G__12498 = d;
var G__12499 = e;
var G__12500 = f;
var G__12501 = g;
var G__12502 = h;
var G__12503 = i;
var G__12504 = j;
var G__12505 = k;
var G__12506 = l;
var G__12507 = m;
var G__12508 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12495,G__12496,G__12497,G__12498,G__12499,G__12500,G__12501,G__12502,G__12503,G__12504,G__12505,G__12506,G__12507,G__12508) : self__.dispatch_fn.call(null,G__12495,G__12496,G__12497,G__12498,G__12499,G__12500,G__12501,G__12502,G__12503,G__12504,G__12505,G__12506,G__12507,G__12508));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12509 = a;
var G__12510 = b;
var G__12511 = c;
var G__12512 = d;
var G__12513 = e;
var G__12514 = f;
var G__12515 = g;
var G__12516 = h;
var G__12517 = i;
var G__12518 = j;
var G__12519 = k;
var G__12520 = l;
var G__12521 = m;
var G__12522 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12509,G__12510,G__12511,G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519,G__12520,G__12521,G__12522) : target_fn.call(null,G__12509,G__12510,G__12511,G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519,G__12520,G__12521,G__12522));
});
var G__13153__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12523 = a;
var G__12524 = b;
var G__12525 = c;
var G__12526 = d;
var G__12527 = e;
var G__12528 = f;
var G__12529 = g;
var G__12530 = h;
var G__12531 = i;
var G__12532 = j;
var G__12533 = k;
var G__12534 = l;
var G__12535 = m;
var G__12536 = n;
var G__12537 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12523,G__12524,G__12525,G__12526,G__12527,G__12528,G__12529,G__12530,G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537) : self__.dispatch_fn.call(null,G__12523,G__12524,G__12525,G__12526,G__12527,G__12528,G__12529,G__12530,G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12538 = a;
var G__12539 = b;
var G__12540 = c;
var G__12541 = d;
var G__12542 = e;
var G__12543 = f;
var G__12544 = g;
var G__12545 = h;
var G__12546 = i;
var G__12547 = j;
var G__12548 = k;
var G__12549 = l;
var G__12550 = m;
var G__12551 = n;
var G__12552 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12538,G__12539,G__12540,G__12541,G__12542,G__12543,G__12544,G__12545,G__12546,G__12547,G__12548,G__12549,G__12550,G__12551,G__12552) : target_fn.call(null,G__12538,G__12539,G__12540,G__12541,G__12542,G__12543,G__12544,G__12545,G__12546,G__12547,G__12548,G__12549,G__12550,G__12551,G__12552));
});
var G__13153__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12553 = a;
var G__12554 = b;
var G__12555 = c;
var G__12556 = d;
var G__12557 = e;
var G__12558 = f;
var G__12559 = g;
var G__12560 = h;
var G__12561 = i;
var G__12562 = j;
var G__12563 = k;
var G__12564 = l;
var G__12565 = m;
var G__12566 = n;
var G__12567 = o;
var G__12568 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12553,G__12554,G__12555,G__12556,G__12557,G__12558,G__12559,G__12560,G__12561,G__12562,G__12563,G__12564,G__12565,G__12566,G__12567,G__12568) : self__.dispatch_fn.call(null,G__12553,G__12554,G__12555,G__12556,G__12557,G__12558,G__12559,G__12560,G__12561,G__12562,G__12563,G__12564,G__12565,G__12566,G__12567,G__12568));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12569 = a;
var G__12570 = b;
var G__12571 = c;
var G__12572 = d;
var G__12573 = e;
var G__12574 = f;
var G__12575 = g;
var G__12576 = h;
var G__12577 = i;
var G__12578 = j;
var G__12579 = k;
var G__12580 = l;
var G__12581 = m;
var G__12582 = n;
var G__12583 = o;
var G__12584 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12569,G__12570,G__12571,G__12572,G__12573,G__12574,G__12575,G__12576,G__12577,G__12578,G__12579,G__12580,G__12581,G__12582,G__12583,G__12584) : target_fn.call(null,G__12569,G__12570,G__12571,G__12572,G__12573,G__12574,G__12575,G__12576,G__12577,G__12578,G__12579,G__12580,G__12581,G__12582,G__12583,G__12584));
});
var G__13153__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12585 = a;
var G__12586 = b;
var G__12587 = c;
var G__12588 = d;
var G__12589 = e;
var G__12590 = f;
var G__12591 = g;
var G__12592 = h;
var G__12593 = i;
var G__12594 = j;
var G__12595 = k;
var G__12596 = l;
var G__12597 = m;
var G__12598 = n;
var G__12599 = o;
var G__12600 = p;
var G__12601 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12585,G__12586,G__12587,G__12588,G__12589,G__12590,G__12591,G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598,G__12599,G__12600,G__12601) : self__.dispatch_fn.call(null,G__12585,G__12586,G__12587,G__12588,G__12589,G__12590,G__12591,G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598,G__12599,G__12600,G__12601));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12602 = a;
var G__12603 = b;
var G__12604 = c;
var G__12605 = d;
var G__12606 = e;
var G__12607 = f;
var G__12608 = g;
var G__12609 = h;
var G__12610 = i;
var G__12611 = j;
var G__12612 = k;
var G__12613 = l;
var G__12614 = m;
var G__12615 = n;
var G__12616 = o;
var G__12617 = p;
var G__12618 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12602,G__12603,G__12604,G__12605,G__12606,G__12607,G__12608,G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615,G__12616,G__12617,G__12618) : target_fn.call(null,G__12602,G__12603,G__12604,G__12605,G__12606,G__12607,G__12608,G__12609,G__12610,G__12611,G__12612,G__12613,G__12614,G__12615,G__12616,G__12617,G__12618));
});
var G__13153__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12619 = a;
var G__12620 = b;
var G__12621 = c;
var G__12622 = d;
var G__12623 = e;
var G__12624 = f;
var G__12625 = g;
var G__12626 = h;
var G__12627 = i;
var G__12628 = j;
var G__12629 = k;
var G__12630 = l;
var G__12631 = m;
var G__12632 = n;
var G__12633 = o;
var G__12634 = p;
var G__12635 = q;
var G__12636 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12619,G__12620,G__12621,G__12622,G__12623,G__12624,G__12625,G__12626,G__12627,G__12628,G__12629,G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636) : self__.dispatch_fn.call(null,G__12619,G__12620,G__12621,G__12622,G__12623,G__12624,G__12625,G__12626,G__12627,G__12628,G__12629,G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12637 = a;
var G__12638 = b;
var G__12639 = c;
var G__12640 = d;
var G__12641 = e;
var G__12642 = f;
var G__12643 = g;
var G__12644 = h;
var G__12645 = i;
var G__12646 = j;
var G__12647 = k;
var G__12648 = l;
var G__12649 = m;
var G__12650 = n;
var G__12651 = o;
var G__12652 = p;
var G__12653 = q;
var G__12654 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12637,G__12638,G__12639,G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647,G__12648,G__12649,G__12650,G__12651,G__12652,G__12653,G__12654) : target_fn.call(null,G__12637,G__12638,G__12639,G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647,G__12648,G__12649,G__12650,G__12651,G__12652,G__12653,G__12654));
});
var G__13153__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12655 = a;
var G__12656 = b;
var G__12657 = c;
var G__12658 = d;
var G__12659 = e;
var G__12660 = f;
var G__12661 = g;
var G__12662 = h;
var G__12663 = i;
var G__12664 = j;
var G__12665 = k;
var G__12666 = l;
var G__12667 = m;
var G__12668 = n;
var G__12669 = o;
var G__12670 = p;
var G__12671 = q;
var G__12672 = r;
var G__12673 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12655,G__12656,G__12657,G__12658,G__12659,G__12660,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673) : self__.dispatch_fn.call(null,G__12655,G__12656,G__12657,G__12658,G__12659,G__12660,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12674 = a;
var G__12675 = b;
var G__12676 = c;
var G__12677 = d;
var G__12678 = e;
var G__12679 = f;
var G__12680 = g;
var G__12681 = h;
var G__12682 = i;
var G__12683 = j;
var G__12684 = k;
var G__12685 = l;
var G__12686 = m;
var G__12687 = n;
var G__12688 = o;
var G__12689 = p;
var G__12690 = q;
var G__12691 = r;
var G__12692 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12674,G__12675,G__12676,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687,G__12688,G__12689,G__12690,G__12691,G__12692) : target_fn.call(null,G__12674,G__12675,G__12676,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687,G__12688,G__12689,G__12690,G__12691,G__12692));
});
var G__13153__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__12693 = a;
var G__12694 = b;
var G__12695 = c;
var G__12696 = d;
var G__12697 = e;
var G__12698 = f;
var G__12699 = g;
var G__12700 = h;
var G__12701 = i;
var G__12702 = j;
var G__12703 = k;
var G__12704 = l;
var G__12705 = m;
var G__12706 = n;
var G__12707 = o;
var G__12708 = p;
var G__12709 = q;
var G__12710 = r;
var G__12711 = s;
var G__12712 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12693,G__12694,G__12695,G__12696,G__12697,G__12698,G__12699,G__12700,G__12701,G__12702,G__12703,G__12704,G__12705,G__12706,G__12707,G__12708,G__12709,G__12710,G__12711,G__12712) : self__.dispatch_fn.call(null,G__12693,G__12694,G__12695,G__12696,G__12697,G__12698,G__12699,G__12700,G__12701,G__12702,G__12703,G__12704,G__12705,G__12706,G__12707,G__12708,G__12709,G__12710,G__12711,G__12712));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12713 = a;
var G__12714 = b;
var G__12715 = c;
var G__12716 = d;
var G__12717 = e;
var G__12718 = f;
var G__12719 = g;
var G__12720 = h;
var G__12721 = i;
var G__12722 = j;
var G__12723 = k;
var G__12724 = l;
var G__12725 = m;
var G__12726 = n;
var G__12727 = o;
var G__12728 = p;
var G__12729 = q;
var G__12730 = r;
var G__12731 = s;
var G__12732 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12713,G__12714,G__12715,G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722,G__12723,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732) : target_fn.call(null,G__12713,G__12714,G__12715,G__12716,G__12717,G__12718,G__12719,G__12720,G__12721,G__12722,G__12723,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732));
});
var G__13153__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__13153 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13153__1.call(this,self__);
case 2:
return G__13153__2.call(this,self__,a);
case 3:
return G__13153__3.call(this,self__,a,b);
case 4:
return G__13153__4.call(this,self__,a,b,c);
case 5:
return G__13153__5.call(this,self__,a,b,c,d);
case 6:
return G__13153__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13153__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13153__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13153__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13153__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13153__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13153__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13153__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13153__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13153__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13153__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13153__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13153__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13153__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13153__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13153__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13153__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13153.cljs$core$IFn$_invoke$arity$1 = G__13153__1;
G__13153.cljs$core$IFn$_invoke$arity$2 = G__13153__2;
G__13153.cljs$core$IFn$_invoke$arity$3 = G__13153__3;
G__13153.cljs$core$IFn$_invoke$arity$4 = G__13153__4;
G__13153.cljs$core$IFn$_invoke$arity$5 = G__13153__5;
G__13153.cljs$core$IFn$_invoke$arity$6 = G__13153__6;
G__13153.cljs$core$IFn$_invoke$arity$7 = G__13153__7;
G__13153.cljs$core$IFn$_invoke$arity$8 = G__13153__8;
G__13153.cljs$core$IFn$_invoke$arity$9 = G__13153__9;
G__13153.cljs$core$IFn$_invoke$arity$10 = G__13153__10;
G__13153.cljs$core$IFn$_invoke$arity$11 = G__13153__11;
G__13153.cljs$core$IFn$_invoke$arity$12 = G__13153__12;
G__13153.cljs$core$IFn$_invoke$arity$13 = G__13153__13;
G__13153.cljs$core$IFn$_invoke$arity$14 = G__13153__14;
G__13153.cljs$core$IFn$_invoke$arity$15 = G__13153__15;
G__13153.cljs$core$IFn$_invoke$arity$16 = G__13153__16;
G__13153.cljs$core$IFn$_invoke$arity$17 = G__13153__17;
G__13153.cljs$core$IFn$_invoke$arity$18 = G__13153__18;
G__13153.cljs$core$IFn$_invoke$arity$19 = G__13153__19;
G__13153.cljs$core$IFn$_invoke$arity$20 = G__13153__20;
G__13153.cljs$core$IFn$_invoke$arity$21 = G__13153__21;
G__13153.cljs$core$IFn$_invoke$arity$22 = G__13153__22;
return G__13153;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args12305){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12305)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12733 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__12733) : self__.dispatch_fn.call(null,G__12733));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12734 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__12734) : target_fn.call(null,G__12734));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12735 = a;
var G__12736 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__12735,G__12736) : self__.dispatch_fn.call(null,G__12735,G__12736));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12737 = a;
var G__12738 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__12737,G__12738) : target_fn.call(null,G__12737,G__12738));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12739 = a;
var G__12740 = b;
var G__12741 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__12739,G__12740,G__12741) : self__.dispatch_fn.call(null,G__12739,G__12740,G__12741));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12742 = a;
var G__12743 = b;
var G__12744 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__12742,G__12743,G__12744) : target_fn.call(null,G__12742,G__12743,G__12744));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12745 = a;
var G__12746 = b;
var G__12747 = c;
var G__12748 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__12745,G__12746,G__12747,G__12748) : self__.dispatch_fn.call(null,G__12745,G__12746,G__12747,G__12748));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12749 = a;
var G__12750 = b;
var G__12751 = c;
var G__12752 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__12749,G__12750,G__12751,G__12752) : target_fn.call(null,G__12749,G__12750,G__12751,G__12752));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12753 = a;
var G__12754 = b;
var G__12755 = c;
var G__12756 = d;
var G__12757 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__12753,G__12754,G__12755,G__12756,G__12757) : self__.dispatch_fn.call(null,G__12753,G__12754,G__12755,G__12756,G__12757));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12758 = a;
var G__12759 = b;
var G__12760 = c;
var G__12761 = d;
var G__12762 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__12758,G__12759,G__12760,G__12761,G__12762) : target_fn.call(null,G__12758,G__12759,G__12760,G__12761,G__12762));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12763 = a;
var G__12764 = b;
var G__12765 = c;
var G__12766 = d;
var G__12767 = e;
var G__12768 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__12763,G__12764,G__12765,G__12766,G__12767,G__12768) : self__.dispatch_fn.call(null,G__12763,G__12764,G__12765,G__12766,G__12767,G__12768));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12769 = a;
var G__12770 = b;
var G__12771 = c;
var G__12772 = d;
var G__12773 = e;
var G__12774 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__12769,G__12770,G__12771,G__12772,G__12773,G__12774) : target_fn.call(null,G__12769,G__12770,G__12771,G__12772,G__12773,G__12774));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12775 = a;
var G__12776 = b;
var G__12777 = c;
var G__12778 = d;
var G__12779 = e;
var G__12780 = f;
var G__12781 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__12775,G__12776,G__12777,G__12778,G__12779,G__12780,G__12781) : self__.dispatch_fn.call(null,G__12775,G__12776,G__12777,G__12778,G__12779,G__12780,G__12781));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12782 = a;
var G__12783 = b;
var G__12784 = c;
var G__12785 = d;
var G__12786 = e;
var G__12787 = f;
var G__12788 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__12782,G__12783,G__12784,G__12785,G__12786,G__12787,G__12788) : target_fn.call(null,G__12782,G__12783,G__12784,G__12785,G__12786,G__12787,G__12788));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12789 = a;
var G__12790 = b;
var G__12791 = c;
var G__12792 = d;
var G__12793 = e;
var G__12794 = f;
var G__12795 = g;
var G__12796 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__12789,G__12790,G__12791,G__12792,G__12793,G__12794,G__12795,G__12796) : self__.dispatch_fn.call(null,G__12789,G__12790,G__12791,G__12792,G__12793,G__12794,G__12795,G__12796));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12797 = a;
var G__12798 = b;
var G__12799 = c;
var G__12800 = d;
var G__12801 = e;
var G__12802 = f;
var G__12803 = g;
var G__12804 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__12797,G__12798,G__12799,G__12800,G__12801,G__12802,G__12803,G__12804) : target_fn.call(null,G__12797,G__12798,G__12799,G__12800,G__12801,G__12802,G__12803,G__12804));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12805 = a;
var G__12806 = b;
var G__12807 = c;
var G__12808 = d;
var G__12809 = e;
var G__12810 = f;
var G__12811 = g;
var G__12812 = h;
var G__12813 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__12805,G__12806,G__12807,G__12808,G__12809,G__12810,G__12811,G__12812,G__12813) : self__.dispatch_fn.call(null,G__12805,G__12806,G__12807,G__12808,G__12809,G__12810,G__12811,G__12812,G__12813));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12814 = a;
var G__12815 = b;
var G__12816 = c;
var G__12817 = d;
var G__12818 = e;
var G__12819 = f;
var G__12820 = g;
var G__12821 = h;
var G__12822 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__12814,G__12815,G__12816,G__12817,G__12818,G__12819,G__12820,G__12821,G__12822) : target_fn.call(null,G__12814,G__12815,G__12816,G__12817,G__12818,G__12819,G__12820,G__12821,G__12822));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12823 = a;
var G__12824 = b;
var G__12825 = c;
var G__12826 = d;
var G__12827 = e;
var G__12828 = f;
var G__12829 = g;
var G__12830 = h;
var G__12831 = i;
var G__12832 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__12823,G__12824,G__12825,G__12826,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832) : self__.dispatch_fn.call(null,G__12823,G__12824,G__12825,G__12826,G__12827,G__12828,G__12829,G__12830,G__12831,G__12832));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12833 = a;
var G__12834 = b;
var G__12835 = c;
var G__12836 = d;
var G__12837 = e;
var G__12838 = f;
var G__12839 = g;
var G__12840 = h;
var G__12841 = i;
var G__12842 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__12833,G__12834,G__12835,G__12836,G__12837,G__12838,G__12839,G__12840,G__12841,G__12842) : target_fn.call(null,G__12833,G__12834,G__12835,G__12836,G__12837,G__12838,G__12839,G__12840,G__12841,G__12842));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12843 = a;
var G__12844 = b;
var G__12845 = c;
var G__12846 = d;
var G__12847 = e;
var G__12848 = f;
var G__12849 = g;
var G__12850 = h;
var G__12851 = i;
var G__12852 = j;
var G__12853 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__12843,G__12844,G__12845,G__12846,G__12847,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853) : self__.dispatch_fn.call(null,G__12843,G__12844,G__12845,G__12846,G__12847,G__12848,G__12849,G__12850,G__12851,G__12852,G__12853));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12854 = a;
var G__12855 = b;
var G__12856 = c;
var G__12857 = d;
var G__12858 = e;
var G__12859 = f;
var G__12860 = g;
var G__12861 = h;
var G__12862 = i;
var G__12863 = j;
var G__12864 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__12854,G__12855,G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864) : target_fn.call(null,G__12854,G__12855,G__12856,G__12857,G__12858,G__12859,G__12860,G__12861,G__12862,G__12863,G__12864));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12865 = a;
var G__12866 = b;
var G__12867 = c;
var G__12868 = d;
var G__12869 = e;
var G__12870 = f;
var G__12871 = g;
var G__12872 = h;
var G__12873 = i;
var G__12874 = j;
var G__12875 = k;
var G__12876 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12865,G__12866,G__12867,G__12868,G__12869,G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876) : self__.dispatch_fn.call(null,G__12865,G__12866,G__12867,G__12868,G__12869,G__12870,G__12871,G__12872,G__12873,G__12874,G__12875,G__12876));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12877 = a;
var G__12878 = b;
var G__12879 = c;
var G__12880 = d;
var G__12881 = e;
var G__12882 = f;
var G__12883 = g;
var G__12884 = h;
var G__12885 = i;
var G__12886 = j;
var G__12887 = k;
var G__12888 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12877,G__12878,G__12879,G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888) : target_fn.call(null,G__12877,G__12878,G__12879,G__12880,G__12881,G__12882,G__12883,G__12884,G__12885,G__12886,G__12887,G__12888));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12889 = a;
var G__12890 = b;
var G__12891 = c;
var G__12892 = d;
var G__12893 = e;
var G__12894 = f;
var G__12895 = g;
var G__12896 = h;
var G__12897 = i;
var G__12898 = j;
var G__12899 = k;
var G__12900 = l;
var G__12901 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12889,G__12890,G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901) : self__.dispatch_fn.call(null,G__12889,G__12890,G__12891,G__12892,G__12893,G__12894,G__12895,G__12896,G__12897,G__12898,G__12899,G__12900,G__12901));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12902 = a;
var G__12903 = b;
var G__12904 = c;
var G__12905 = d;
var G__12906 = e;
var G__12907 = f;
var G__12908 = g;
var G__12909 = h;
var G__12910 = i;
var G__12911 = j;
var G__12912 = k;
var G__12913 = l;
var G__12914 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12902,G__12903,G__12904,G__12905,G__12906,G__12907,G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914) : target_fn.call(null,G__12902,G__12903,G__12904,G__12905,G__12906,G__12907,G__12908,G__12909,G__12910,G__12911,G__12912,G__12913,G__12914));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12915 = a;
var G__12916 = b;
var G__12917 = c;
var G__12918 = d;
var G__12919 = e;
var G__12920 = f;
var G__12921 = g;
var G__12922 = h;
var G__12923 = i;
var G__12924 = j;
var G__12925 = k;
var G__12926 = l;
var G__12927 = m;
var G__12928 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927,G__12928) : self__.dispatch_fn.call(null,G__12915,G__12916,G__12917,G__12918,G__12919,G__12920,G__12921,G__12922,G__12923,G__12924,G__12925,G__12926,G__12927,G__12928));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12929 = a;
var G__12930 = b;
var G__12931 = c;
var G__12932 = d;
var G__12933 = e;
var G__12934 = f;
var G__12935 = g;
var G__12936 = h;
var G__12937 = i;
var G__12938 = j;
var G__12939 = k;
var G__12940 = l;
var G__12941 = m;
var G__12942 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942) : target_fn.call(null,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12943 = a;
var G__12944 = b;
var G__12945 = c;
var G__12946 = d;
var G__12947 = e;
var G__12948 = f;
var G__12949 = g;
var G__12950 = h;
var G__12951 = i;
var G__12952 = j;
var G__12953 = k;
var G__12954 = l;
var G__12955 = m;
var G__12956 = n;
var G__12957 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12943,G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957) : self__.dispatch_fn.call(null,G__12943,G__12944,G__12945,G__12946,G__12947,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12958 = a;
var G__12959 = b;
var G__12960 = c;
var G__12961 = d;
var G__12962 = e;
var G__12963 = f;
var G__12964 = g;
var G__12965 = h;
var G__12966 = i;
var G__12967 = j;
var G__12968 = k;
var G__12969 = l;
var G__12970 = m;
var G__12971 = n;
var G__12972 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972) : target_fn.call(null,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969,G__12970,G__12971,G__12972));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12973 = a;
var G__12974 = b;
var G__12975 = c;
var G__12976 = d;
var G__12977 = e;
var G__12978 = f;
var G__12979 = g;
var G__12980 = h;
var G__12981 = i;
var G__12982 = j;
var G__12983 = k;
var G__12984 = l;
var G__12985 = m;
var G__12986 = n;
var G__12987 = o;
var G__12988 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988) : self__.dispatch_fn.call(null,G__12973,G__12974,G__12975,G__12976,G__12977,G__12978,G__12979,G__12980,G__12981,G__12982,G__12983,G__12984,G__12985,G__12986,G__12987,G__12988));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12989 = a;
var G__12990 = b;
var G__12991 = c;
var G__12992 = d;
var G__12993 = e;
var G__12994 = f;
var G__12995 = g;
var G__12996 = h;
var G__12997 = i;
var G__12998 = j;
var G__12999 = k;
var G__13000 = l;
var G__13001 = m;
var G__13002 = n;
var G__13003 = o;
var G__13004 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12989,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003,G__13004) : target_fn.call(null,G__12989,G__12990,G__12991,G__12992,G__12993,G__12994,G__12995,G__12996,G__12997,G__12998,G__12999,G__13000,G__13001,G__13002,G__13003,G__13004));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13005 = a;
var G__13006 = b;
var G__13007 = c;
var G__13008 = d;
var G__13009 = e;
var G__13010 = f;
var G__13011 = g;
var G__13012 = h;
var G__13013 = i;
var G__13014 = j;
var G__13015 = k;
var G__13016 = l;
var G__13017 = m;
var G__13018 = n;
var G__13019 = o;
var G__13020 = p;
var G__13021 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021) : self__.dispatch_fn.call(null,G__13005,G__13006,G__13007,G__13008,G__13009,G__13010,G__13011,G__13012,G__13013,G__13014,G__13015,G__13016,G__13017,G__13018,G__13019,G__13020,G__13021));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13022 = a;
var G__13023 = b;
var G__13024 = c;
var G__13025 = d;
var G__13026 = e;
var G__13027 = f;
var G__13028 = g;
var G__13029 = h;
var G__13030 = i;
var G__13031 = j;
var G__13032 = k;
var G__13033 = l;
var G__13034 = m;
var G__13035 = n;
var G__13036 = o;
var G__13037 = p;
var G__13038 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__13022,G__13023,G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038) : target_fn.call(null,G__13022,G__13023,G__13024,G__13025,G__13026,G__13027,G__13028,G__13029,G__13030,G__13031,G__13032,G__13033,G__13034,G__13035,G__13036,G__13037,G__13038));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13039 = a;
var G__13040 = b;
var G__13041 = c;
var G__13042 = d;
var G__13043 = e;
var G__13044 = f;
var G__13045 = g;
var G__13046 = h;
var G__13047 = i;
var G__13048 = j;
var G__13049 = k;
var G__13050 = l;
var G__13051 = m;
var G__13052 = n;
var G__13053 = o;
var G__13054 = p;
var G__13055 = q;
var G__13056 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__13039,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055,G__13056) : self__.dispatch_fn.call(null,G__13039,G__13040,G__13041,G__13042,G__13043,G__13044,G__13045,G__13046,G__13047,G__13048,G__13049,G__13050,G__13051,G__13052,G__13053,G__13054,G__13055,G__13056));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13057 = a;
var G__13058 = b;
var G__13059 = c;
var G__13060 = d;
var G__13061 = e;
var G__13062 = f;
var G__13063 = g;
var G__13064 = h;
var G__13065 = i;
var G__13066 = j;
var G__13067 = k;
var G__13068 = l;
var G__13069 = m;
var G__13070 = n;
var G__13071 = o;
var G__13072 = p;
var G__13073 = q;
var G__13074 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__13057,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074) : target_fn.call(null,G__13057,G__13058,G__13059,G__13060,G__13061,G__13062,G__13063,G__13064,G__13065,G__13066,G__13067,G__13068,G__13069,G__13070,G__13071,G__13072,G__13073,G__13074));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13075 = a;
var G__13076 = b;
var G__13077 = c;
var G__13078 = d;
var G__13079 = e;
var G__13080 = f;
var G__13081 = g;
var G__13082 = h;
var G__13083 = i;
var G__13084 = j;
var G__13085 = k;
var G__13086 = l;
var G__13087 = m;
var G__13088 = n;
var G__13089 = o;
var G__13090 = p;
var G__13091 = q;
var G__13092 = r;
var G__13093 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__13075,G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087,G__13088,G__13089,G__13090,G__13091,G__13092,G__13093) : self__.dispatch_fn.call(null,G__13075,G__13076,G__13077,G__13078,G__13079,G__13080,G__13081,G__13082,G__13083,G__13084,G__13085,G__13086,G__13087,G__13088,G__13089,G__13090,G__13091,G__13092,G__13093));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13094 = a;
var G__13095 = b;
var G__13096 = c;
var G__13097 = d;
var G__13098 = e;
var G__13099 = f;
var G__13100 = g;
var G__13101 = h;
var G__13102 = i;
var G__13103 = j;
var G__13104 = k;
var G__13105 = l;
var G__13106 = m;
var G__13107 = n;
var G__13108 = o;
var G__13109 = p;
var G__13110 = q;
var G__13111 = r;
var G__13112 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112) : target_fn.call(null,G__13094,G__13095,G__13096,G__13097,G__13098,G__13099,G__13100,G__13101,G__13102,G__13103,G__13104,G__13105,G__13106,G__13107,G__13108,G__13109,G__13110,G__13111,G__13112));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__13113 = a;
var G__13114 = b;
var G__13115 = c;
var G__13116 = d;
var G__13117 = e;
var G__13118 = f;
var G__13119 = g;
var G__13120 = h;
var G__13121 = i;
var G__13122 = j;
var G__13123 = k;
var G__13124 = l;
var G__13125 = m;
var G__13126 = n;
var G__13127 = o;
var G__13128 = p;
var G__13129 = q;
var G__13130 = r;
var G__13131 = s;
var G__13132 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132) : self__.dispatch_fn.call(null,G__13113,G__13114,G__13115,G__13116,G__13117,G__13118,G__13119,G__13120,G__13121,G__13122,G__13123,G__13124,G__13125,G__13126,G__13127,G__13128,G__13129,G__13130,G__13131,G__13132));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__13133 = a;
var G__13134 = b;
var G__13135 = c;
var G__13136 = d;
var G__13137 = e;
var G__13138 = f;
var G__13139 = g;
var G__13140 = h;
var G__13141 = i;
var G__13142 = j;
var G__13143 = k;
var G__13144 = l;
var G__13145 = m;
var G__13146 = n;
var G__13147 = o;
var G__13148 = p;
var G__13149 = q;
var G__13150 = r;
var G__13151 = s;
var G__13152 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152) : target_fn.call(null,G__13133,G__13134,G__13135,G__13136,G__13137,G__13138,G__13139,G__13140,G__13141,G__13142,G__13143,G__13144,G__13145,G__13146,G__13147,G__13148,G__13149,G__13150,G__13151,G__13152));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function cljs$core$remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function cljs$core$remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function cljs$core$methods(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function cljs$core$get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function cljs$core$prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 2048;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
var G__13154 = self__.uuid;
var G__13155 = other.uuid;
return goog.array.defaultCompare(G__13154,G__13155);
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13156 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__13156);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4150__auto__,writer__4151__auto__,opt__4152__auto__){
return cljs.core._write(writer__4151__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function cljs$core$__GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function cljs$core$pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function cljs$core$ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var cljs$core$ex_info = null;
var cljs$core$ex_info__2 = (function (msg,data){
return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var cljs$core$ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
cljs$core$ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return cljs$core$ex_info__2.call(this,msg,data);
case 3:
return cljs$core$ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
return cljs$core$ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function cljs$core$ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function cljs$core$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function cljs$core$ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function cljs$core$comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__13164 = x;
var G__13165 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13164,G__13165) : pred.call(null,G__13164,G__13165));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__13166 = y;
var G__13167 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__13166,G__13167) : pred.call(null,G__13166,G__13167));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function cljs$core$special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function cljs$core$test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$ok;
} else {
return cljs.core.constant$keyword$no_DASH_test;
}
});
